; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_bwd_kernel(ptr addrspace(1) nocapture readonly %0, ptr addrspace(1) nocapture readonly %1, ptr addrspace(1) nocapture readonly %2, float %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) nocapture readonly %5, ptr addrspace(1) nocapture %6, ptr addrspace(1) nocapture writeonly %7, ptr addrspace(1) nocapture writeonly %8, ptr addrspace(1) nocapture readnone %9, ptr addrspace(1) nocapture readonly %10, ptr addrspace(1) nocapture readonly %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i32 %21, i32 %22, i32 %23, i32 %24, i32 %25) local_unnamed_addr #0 !dbg !6 {
  %27 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !9
  %28 = sext i32 %24 to i64, !dbg !10
  %29 = sext i32 %14 to i64, !dbg !10
  %30 = sext i32 %17 to i64, !dbg !11
  %31 = sext i32 %20 to i64, !dbg !12
  %32 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !13
  %33 = and i32 %32, 63, !dbg !13
  %34 = lshr i32 %32, 6, !dbg !13
  %35 = and i32 %34, 7, !dbg !13
  %36 = shl nuw nsw i32 %34, 5, !dbg !13
  %37 = and i32 %36, 96, !dbg !13
  %38 = and i32 %32, 31, !dbg !13
  %39 = or disjoint i32 %37, %38, !dbg !13
  %40 = lshr i32 %33, 3, !dbg !13
  %41 = shl nuw nsw i32 %35, 3, !dbg !13
  %42 = or disjoint i32 %41, %40, !dbg !13
  %43 = or disjoint i32 %42, 64, !dbg !13
  %44 = lshr i32 %33, 5, !dbg !13
  %45 = shl nuw nsw i32 %44, 2, !dbg !13
  %46 = or disjoint i32 %45, 1, !dbg !13
  %47 = or disjoint i32 %45, 2, !dbg !13
  %48 = or disjoint i32 %45, 3, !dbg !13
  %49 = insertelement <4 x i32> poison, i32 %45, i64 0, !dbg !13
  %50 = shufflevector <4 x i32> %49, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !13
  %51 = or disjoint <4 x i32> %50, <i32 8, i32 9, i32 10, i32 11>, !dbg !13
  %52 = or disjoint <4 x i32> %50, <i32 16, i32 17, i32 18, i32 19>, !dbg !13
  %53 = or disjoint <4 x i32> %50, <i32 24, i32 25, i32 26, i32 27>, !dbg !13
  %54 = or disjoint <4 x i32> %50, <i32 32, i32 33, i32 34, i32 35>, !dbg !13
  %55 = or disjoint <4 x i32> %50, <i32 40, i32 41, i32 42, i32 43>, !dbg !13
  %56 = or disjoint <4 x i32> %50, <i32 48, i32 49, i32 50, i32 51>, !dbg !13
  %57 = or disjoint <4 x i32> %50, <i32 56, i32 57, i32 58, i32 59>, !dbg !13
  %58 = or disjoint <4 x i32> %50, <i32 72, i32 73, i32 74, i32 75>, !dbg !13
  %59 = or disjoint <4 x i32> %50, <i32 88, i32 89, i32 90, i32 91>, !dbg !13
  %60 = or disjoint <4 x i32> %50, <i32 104, i32 105, i32 106, i32 107>, !dbg !13
  %61 = or disjoint <4 x i32> %50, <i32 120, i32 121, i32 122, i32 123>, !dbg !13
  %62 = shl i32 %32, 3, !dbg !14
  %63 = and i32 %62, 56, !dbg !14
  %64 = or disjoint i32 %63, 4, !dbg !14
  %65 = mul i32 %27, %23, !dbg !15
  %66 = sext i32 %65 to i64, !dbg !16
  %67 = getelementptr float, ptr addrspace(1) %11, i64 %66, !dbg !16
  %68 = getelementptr float, ptr addrspace(1) %10, i64 %66, !dbg !17
  %69 = zext nneg i32 %39 to i64
  %70 = zext nneg i32 %42 to i64
  %71 = zext nneg i32 %43 to i64
  %72 = zext nneg i32 %45 to i64
  %73 = zext nneg i32 %46 to i64
  %74 = zext nneg i32 %47 to i64
  %75 = zext nneg i32 %48 to i64
  %76 = extractelement <4 x i32> %51, i64 0
  %77 = zext nneg i32 %76 to i64
  %78 = extractelement <4 x i32> %51, i64 1
  %79 = zext nneg i32 %78 to i64
  %80 = extractelement <4 x i32> %51, i64 2
  %81 = zext nneg i32 %80 to i64
  %82 = extractelement <4 x i32> %51, i64 3
  %83 = zext nneg i32 %82 to i64
  %84 = extractelement <4 x i32> %52, i64 0
  %85 = zext nneg i32 %84 to i64
  %86 = extractelement <4 x i32> %52, i64 1
  %87 = zext nneg i32 %86 to i64
  %88 = extractelement <4 x i32> %52, i64 2
  %89 = zext nneg i32 %88 to i64
  %90 = extractelement <4 x i32> %52, i64 3
  %91 = zext nneg i32 %90 to i64
  %92 = extractelement <4 x i32> %53, i64 0
  %93 = zext nneg i32 %92 to i64
  %94 = extractelement <4 x i32> %53, i64 1
  %95 = zext nneg i32 %94 to i64
  %96 = extractelement <4 x i32> %53, i64 2
  %97 = zext nneg i32 %96 to i64
  %98 = extractelement <4 x i32> %53, i64 3
  %99 = zext nneg i32 %98 to i64
  %100 = extractelement <4 x i32> %54, i64 0
  %101 = zext nneg i32 %100 to i64
  %102 = extractelement <4 x i32> %54, i64 1
  %103 = zext nneg i32 %102 to i64
  %104 = extractelement <4 x i32> %54, i64 2
  %105 = zext nneg i32 %104 to i64
  %106 = extractelement <4 x i32> %54, i64 3
  %107 = zext nneg i32 %106 to i64
  %108 = extractelement <4 x i32> %55, i64 0
  %109 = zext nneg i32 %108 to i64
  %110 = extractelement <4 x i32> %55, i64 1
  %111 = zext nneg i32 %110 to i64
  %112 = extractelement <4 x i32> %55, i64 2
  %113 = zext nneg i32 %112 to i64
  %114 = extractelement <4 x i32> %55, i64 3
  %115 = zext nneg i32 %114 to i64
  %116 = extractelement <4 x i32> %56, i64 0
  %117 = zext nneg i32 %116 to i64
  %118 = extractelement <4 x i32> %56, i64 1
  %119 = zext nneg i32 %118 to i64
  %120 = extractelement <4 x i32> %56, i64 2
  %121 = zext nneg i32 %120 to i64
  %122 = extractelement <4 x i32> %56, i64 3
  %123 = zext nneg i32 %122 to i64
  %124 = extractelement <4 x i32> %57, i64 0
  %125 = zext nneg i32 %124 to i64
  %126 = extractelement <4 x i32> %57, i64 1
  %127 = zext nneg i32 %126 to i64
  %128 = extractelement <4 x i32> %57, i64 2
  %129 = zext nneg i32 %128 to i64
  %130 = extractelement <4 x i32> %57, i64 3
  %131 = zext nneg i32 %130 to i64
  %132 = zext nneg i32 %63 to i64
  %133 = zext nneg i32 %64 to i64
  %134 = shl i32 %25, 7, !dbg !18
  %invariant.gep281 = getelementptr half, ptr addrspace(1) %1, i64 %132, !dbg !19
  %invariant.gep285 = getelementptr half, ptr addrspace(1) %2, i64 %132, !dbg !19
  %135 = icmp sgt i32 %25, 0, !dbg !19
  br i1 %135, label %.lr.ph290, label %._crit_edge291, !dbg !19

.lr.ph290:                                        ; preds = %26
  %136 = or disjoint i32 %45, 115, !dbg !13
  %137 = or disjoint i32 %45, 114, !dbg !13
  %138 = or disjoint i32 %45, 113, !dbg !13
  %139 = or disjoint i32 %45, 99, !dbg !13
  %140 = or disjoint i32 %45, 98, !dbg !13
  %141 = or disjoint i32 %45, 97, !dbg !13
  %142 = or disjoint i32 %45, 83, !dbg !13
  %143 = or disjoint i32 %45, 82, !dbg !13
  %144 = or disjoint i32 %45, 81, !dbg !13
  %145 = or disjoint i32 %45, 67, !dbg !13
  %146 = or disjoint i32 %45, 66, !dbg !13
  %147 = or disjoint i32 %45, 65, !dbg !13
  %.frozen = freeze i32 %27
  %.frozen503 = freeze i32 %22
  %148 = sdiv i32 %.frozen, %.frozen503, !dbg !20
  %149 = mul i32 %148, %.frozen503
  %.decomposed = sub i32 %.frozen, %149
  %150 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !21
  %151 = insertelement <2 x i32> %150, i32 %12, i64 1, !dbg !21
  %152 = insertelement <2 x i32> poison, i32 %14, i64 0, !dbg !21
  %153 = shufflevector <2 x i32> %152, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !21
  %154 = sdiv <2 x i32> %151, %153, !dbg !21
  %155 = insertelement <2 x i32> poison, i32 %.decomposed, i64 0, !dbg !22
  %156 = insertelement <2 x i32> %155, i32 %148, i64 1, !dbg !22
  %157 = mul <2 x i32> %154, %156, !dbg !22
  %shift = shufflevector <2 x i32> %157, <2 x i32> poison, <2 x i32> <i32 1, i32 poison>, !dbg !23
  %158 = add <2 x i32> %157, %shift, !dbg !23
  %159 = extractelement <2 x i32> %158, i64 0, !dbg !23
  %160 = sext i32 %159 to i64, !dbg !10
  %161 = lshr i32 %32, 3
  %162 = and i32 %161, 15
  %163 = shl i32 %161, 6
  %164 = and i32 %163, 4032
  %165 = or disjoint i32 %164, %63
  %166 = zext nneg i32 %165 to i64
  %167 = getelementptr half, ptr addrspace(3) @global_smem, i64 %166
  %168 = or disjoint i32 %164, 4096
  %169 = or disjoint i32 %168, %63
  %170 = zext nneg i32 %169 to i64
  %171 = getelementptr half, ptr addrspace(3) @global_smem, i64 %170
  %172 = shl nuw nsw i32 %44, 8
  %173 = or disjoint i32 %172, %38
  %174 = or disjoint i32 %173, 64
  %175 = or disjoint i32 %173, 128
  %176 = or disjoint i32 %173, 192
  %177 = or disjoint i32 %173, 512
  %178 = or disjoint i32 %173, 576
  %179 = or disjoint i32 %173, 640
  %180 = or disjoint i32 %173, 704
  %181 = or disjoint i32 %173, 1024
  %182 = or disjoint i32 %173, 1088
  %183 = or disjoint i32 %173, 1152
  %184 = or disjoint i32 %173, 1216
  %185 = or disjoint i32 %173, 1536
  %186 = or disjoint i32 %173, 1600
  %187 = or disjoint i32 %173, 1664
  %188 = or disjoint i32 %173, 1728
  %189 = or disjoint i32 %173, 2048
  %190 = or disjoint i32 %173, 2112
  %191 = or disjoint i32 %173, 2176
  %192 = or disjoint i32 %173, 2240
  %193 = or disjoint i32 %173, 2560
  %194 = or disjoint i32 %173, 2624
  %195 = or disjoint i32 %173, 2688
  %196 = or disjoint i32 %173, 2752
  %197 = or disjoint i32 %173, 3072
  %198 = or disjoint i32 %173, 3136
  %199 = or disjoint i32 %173, 3200
  %200 = or disjoint i32 %173, 3264
  %201 = or disjoint i32 %173, 3584
  %202 = or disjoint i32 %173, 3648
  %203 = or disjoint i32 %173, 3712
  %204 = or disjoint i32 %173, 3776
  %205 = or disjoint i32 %173, 4096
  %206 = or disjoint i32 %173, 4160
  %207 = or disjoint i32 %173, 4224
  %208 = or disjoint i32 %173, 4288
  %209 = or disjoint i32 %173, 4608
  %210 = or disjoint i32 %173, 4672
  %211 = or disjoint i32 %173, 4736
  %212 = or disjoint i32 %173, 4800
  %213 = or disjoint i32 %173, 5120
  %214 = or disjoint i32 %173, 5184
  %215 = or disjoint i32 %173, 5248
  %216 = or disjoint i32 %173, 5312
  %217 = or disjoint i32 %173, 5632
  %218 = or disjoint i32 %173, 5696
  %219 = or disjoint i32 %173, 5760
  %220 = or disjoint i32 %173, 5824
  %221 = or disjoint i32 %173, 6144
  %222 = or disjoint i32 %173, 6208
  %223 = or disjoint i32 %173, 6272
  %224 = or disjoint i32 %173, 6336
  %225 = or disjoint i32 %173, 6656
  %226 = or disjoint i32 %173, 6720
  %227 = or disjoint i32 %173, 6784
  %228 = or disjoint i32 %173, 6848
  %229 = or disjoint i32 %173, 7168
  %230 = or disjoint i32 %173, 7232
  %231 = or disjoint i32 %173, 7296
  %232 = or disjoint i32 %173, 7360
  %233 = or disjoint i32 %173, 7680
  %234 = or disjoint i32 %173, 7744
  %235 = or disjoint i32 %173, 7808
  %236 = or disjoint i32 %173, 7872
  %237 = or disjoint i32 %173, 32
  %238 = or disjoint i32 %173, 96
  %239 = or disjoint i32 %173, 160
  %240 = or disjoint i32 %173, 224
  %241 = or disjoint i32 %173, 544
  %242 = or disjoint i32 %173, 608
  %243 = or disjoint i32 %173, 672
  %244 = or disjoint i32 %173, 736
  %245 = or disjoint i32 %173, 1056
  %246 = or disjoint i32 %173, 1120
  %247 = or disjoint i32 %173, 1184
  %248 = or disjoint i32 %173, 1248
  %249 = or disjoint i32 %173, 1568
  %250 = or disjoint i32 %173, 1632
  %251 = or disjoint i32 %173, 1696
  %252 = or disjoint i32 %173, 1760
  %253 = or disjoint i32 %173, 2080
  %254 = or disjoint i32 %173, 2144
  %255 = or disjoint i32 %173, 2208
  %256 = or disjoint i32 %173, 2272
  %257 = or disjoint i32 %173, 2592
  %258 = or disjoint i32 %173, 2656
  %259 = or disjoint i32 %173, 2720
  %260 = or disjoint i32 %173, 2784
  %261 = or disjoint i32 %173, 3104
  %262 = or disjoint i32 %173, 3168
  %263 = or disjoint i32 %173, 3232
  %264 = or disjoint i32 %173, 3296
  %265 = or disjoint i32 %173, 3616
  %266 = or disjoint i32 %173, 3680
  %267 = or disjoint i32 %173, 3744
  %268 = or disjoint i32 %173, 3808
  %269 = or disjoint i32 %173, 4128
  %270 = or disjoint i32 %173, 4192
  %271 = or disjoint i32 %173, 4256
  %272 = or disjoint i32 %173, 4320
  %273 = or disjoint i32 %173, 4640
  %274 = or disjoint i32 %173, 4704
  %275 = or disjoint i32 %173, 4768
  %276 = or disjoint i32 %173, 4832
  %277 = or disjoint i32 %173, 5152
  %278 = or disjoint i32 %173, 5216
  %279 = or disjoint i32 %173, 5280
  %280 = or disjoint i32 %173, 5344
  %281 = or disjoint i32 %173, 5664
  %282 = or disjoint i32 %173, 5728
  %283 = or disjoint i32 %173, 5792
  %284 = or disjoint i32 %173, 5856
  %285 = or disjoint i32 %173, 6176
  %286 = or disjoint i32 %173, 6240
  %287 = or disjoint i32 %173, 6304
  %288 = or disjoint i32 %173, 6368
  %289 = or disjoint i32 %173, 6688
  %290 = or disjoint i32 %173, 6752
  %291 = or disjoint i32 %173, 6816
  %292 = or disjoint i32 %173, 6880
  %293 = or disjoint i32 %173, 7200
  %294 = or disjoint i32 %173, 7264
  %295 = or disjoint i32 %173, 7328
  %296 = or disjoint i32 %173, 7392
  %297 = or disjoint i32 %173, 7712
  %298 = or disjoint i32 %173, 7776
  %299 = or disjoint i32 %173, 7840
  %300 = or disjoint i32 %173, 7904
  %301 = zext nneg i32 %173 to i64
  %302 = getelementptr half, ptr addrspace(3) @global_smem, i64 %301
  %303 = zext nneg i32 %174 to i64
  %304 = getelementptr half, ptr addrspace(3) @global_smem, i64 %303
  %305 = zext nneg i32 %175 to i64
  %306 = getelementptr half, ptr addrspace(3) @global_smem, i64 %305
  %307 = zext nneg i32 %176 to i64
  %308 = getelementptr half, ptr addrspace(3) @global_smem, i64 %307
  %309 = zext nneg i32 %177 to i64
  %310 = getelementptr half, ptr addrspace(3) @global_smem, i64 %309
  %311 = zext nneg i32 %178 to i64
  %312 = getelementptr half, ptr addrspace(3) @global_smem, i64 %311
  %313 = zext nneg i32 %179 to i64
  %314 = getelementptr half, ptr addrspace(3) @global_smem, i64 %313
  %315 = zext nneg i32 %180 to i64
  %316 = getelementptr half, ptr addrspace(3) @global_smem, i64 %315
  %317 = zext nneg i32 %181 to i64
  %318 = getelementptr half, ptr addrspace(3) @global_smem, i64 %317
  %319 = zext nneg i32 %182 to i64
  %320 = getelementptr half, ptr addrspace(3) @global_smem, i64 %319
  %321 = zext nneg i32 %183 to i64
  %322 = getelementptr half, ptr addrspace(3) @global_smem, i64 %321
  %323 = zext nneg i32 %184 to i64
  %324 = getelementptr half, ptr addrspace(3) @global_smem, i64 %323
  %325 = zext nneg i32 %185 to i64
  %326 = getelementptr half, ptr addrspace(3) @global_smem, i64 %325
  %327 = zext nneg i32 %186 to i64
  %328 = getelementptr half, ptr addrspace(3) @global_smem, i64 %327
  %329 = zext nneg i32 %187 to i64
  %330 = getelementptr half, ptr addrspace(3) @global_smem, i64 %329
  %331 = zext nneg i32 %188 to i64
  %332 = getelementptr half, ptr addrspace(3) @global_smem, i64 %331
  %333 = zext nneg i32 %189 to i64
  %334 = getelementptr half, ptr addrspace(3) @global_smem, i64 %333
  %335 = zext nneg i32 %190 to i64
  %336 = getelementptr half, ptr addrspace(3) @global_smem, i64 %335
  %337 = zext nneg i32 %191 to i64
  %338 = getelementptr half, ptr addrspace(3) @global_smem, i64 %337
  %339 = zext nneg i32 %192 to i64
  %340 = getelementptr half, ptr addrspace(3) @global_smem, i64 %339
  %341 = zext nneg i32 %193 to i64
  %342 = getelementptr half, ptr addrspace(3) @global_smem, i64 %341
  %343 = zext nneg i32 %194 to i64
  %344 = getelementptr half, ptr addrspace(3) @global_smem, i64 %343
  %345 = zext nneg i32 %195 to i64
  %346 = getelementptr half, ptr addrspace(3) @global_smem, i64 %345
  %347 = zext nneg i32 %196 to i64
  %348 = getelementptr half, ptr addrspace(3) @global_smem, i64 %347
  %349 = zext nneg i32 %197 to i64
  %350 = getelementptr half, ptr addrspace(3) @global_smem, i64 %349
  %351 = zext nneg i32 %198 to i64
  %352 = getelementptr half, ptr addrspace(3) @global_smem, i64 %351
  %353 = zext nneg i32 %199 to i64
  %354 = getelementptr half, ptr addrspace(3) @global_smem, i64 %353
  %355 = zext nneg i32 %200 to i64
  %356 = getelementptr half, ptr addrspace(3) @global_smem, i64 %355
  %357 = zext nneg i32 %201 to i64
  %358 = getelementptr half, ptr addrspace(3) @global_smem, i64 %357
  %359 = zext nneg i32 %202 to i64
  %360 = getelementptr half, ptr addrspace(3) @global_smem, i64 %359
  %361 = zext nneg i32 %203 to i64
  %362 = getelementptr half, ptr addrspace(3) @global_smem, i64 %361
  %363 = zext nneg i32 %204 to i64
  %364 = getelementptr half, ptr addrspace(3) @global_smem, i64 %363
  %365 = zext nneg i32 %205 to i64
  %366 = getelementptr half, ptr addrspace(3) @global_smem, i64 %365
  %367 = zext nneg i32 %206 to i64
  %368 = getelementptr half, ptr addrspace(3) @global_smem, i64 %367
  %369 = zext nneg i32 %207 to i64
  %370 = getelementptr half, ptr addrspace(3) @global_smem, i64 %369
  %371 = zext nneg i32 %208 to i64
  %372 = getelementptr half, ptr addrspace(3) @global_smem, i64 %371
  %373 = zext nneg i32 %209 to i64
  %374 = getelementptr half, ptr addrspace(3) @global_smem, i64 %373
  %375 = zext nneg i32 %210 to i64
  %376 = getelementptr half, ptr addrspace(3) @global_smem, i64 %375
  %377 = zext nneg i32 %211 to i64
  %378 = getelementptr half, ptr addrspace(3) @global_smem, i64 %377
  %379 = zext nneg i32 %212 to i64
  %380 = getelementptr half, ptr addrspace(3) @global_smem, i64 %379
  %381 = zext nneg i32 %213 to i64
  %382 = getelementptr half, ptr addrspace(3) @global_smem, i64 %381
  %383 = zext nneg i32 %214 to i64
  %384 = getelementptr half, ptr addrspace(3) @global_smem, i64 %383
  %385 = zext nneg i32 %215 to i64
  %386 = getelementptr half, ptr addrspace(3) @global_smem, i64 %385
  %387 = zext nneg i32 %216 to i64
  %388 = getelementptr half, ptr addrspace(3) @global_smem, i64 %387
  %389 = zext nneg i32 %217 to i64
  %390 = getelementptr half, ptr addrspace(3) @global_smem, i64 %389
  %391 = zext nneg i32 %218 to i64
  %392 = getelementptr half, ptr addrspace(3) @global_smem, i64 %391
  %393 = zext nneg i32 %219 to i64
  %394 = getelementptr half, ptr addrspace(3) @global_smem, i64 %393
  %395 = zext nneg i32 %220 to i64
  %396 = getelementptr half, ptr addrspace(3) @global_smem, i64 %395
  %397 = zext nneg i32 %221 to i64
  %398 = getelementptr half, ptr addrspace(3) @global_smem, i64 %397
  %399 = zext nneg i32 %222 to i64
  %400 = getelementptr half, ptr addrspace(3) @global_smem, i64 %399
  %401 = zext nneg i32 %223 to i64
  %402 = getelementptr half, ptr addrspace(3) @global_smem, i64 %401
  %403 = zext nneg i32 %224 to i64
  %404 = getelementptr half, ptr addrspace(3) @global_smem, i64 %403
  %405 = zext nneg i32 %225 to i64
  %406 = getelementptr half, ptr addrspace(3) @global_smem, i64 %405
  %407 = zext nneg i32 %226 to i64
  %408 = getelementptr half, ptr addrspace(3) @global_smem, i64 %407
  %409 = zext nneg i32 %227 to i64
  %410 = getelementptr half, ptr addrspace(3) @global_smem, i64 %409
  %411 = zext nneg i32 %228 to i64
  %412 = getelementptr half, ptr addrspace(3) @global_smem, i64 %411
  %413 = zext nneg i32 %229 to i64
  %414 = getelementptr half, ptr addrspace(3) @global_smem, i64 %413
  %415 = zext nneg i32 %230 to i64
  %416 = getelementptr half, ptr addrspace(3) @global_smem, i64 %415
  %417 = zext nneg i32 %231 to i64
  %418 = getelementptr half, ptr addrspace(3) @global_smem, i64 %417
  %419 = zext nneg i32 %232 to i64
  %420 = getelementptr half, ptr addrspace(3) @global_smem, i64 %419
  %421 = zext nneg i32 %233 to i64
  %422 = getelementptr half, ptr addrspace(3) @global_smem, i64 %421
  %423 = zext nneg i32 %234 to i64
  %424 = getelementptr half, ptr addrspace(3) @global_smem, i64 %423
  %425 = zext nneg i32 %235 to i64
  %426 = getelementptr half, ptr addrspace(3) @global_smem, i64 %425
  %427 = zext nneg i32 %236 to i64
  %428 = getelementptr half, ptr addrspace(3) @global_smem, i64 %427
  %429 = zext nneg i32 %237 to i64
  %430 = getelementptr half, ptr addrspace(3) @global_smem, i64 %429
  %431 = zext nneg i32 %238 to i64
  %432 = getelementptr half, ptr addrspace(3) @global_smem, i64 %431
  %433 = zext nneg i32 %239 to i64
  %434 = getelementptr half, ptr addrspace(3) @global_smem, i64 %433
  %435 = zext nneg i32 %240 to i64
  %436 = getelementptr half, ptr addrspace(3) @global_smem, i64 %435
  %437 = zext nneg i32 %241 to i64
  %438 = getelementptr half, ptr addrspace(3) @global_smem, i64 %437
  %439 = zext nneg i32 %242 to i64
  %440 = getelementptr half, ptr addrspace(3) @global_smem, i64 %439
  %441 = zext nneg i32 %243 to i64
  %442 = getelementptr half, ptr addrspace(3) @global_smem, i64 %441
  %443 = zext nneg i32 %244 to i64
  %444 = getelementptr half, ptr addrspace(3) @global_smem, i64 %443
  %445 = zext nneg i32 %245 to i64
  %446 = getelementptr half, ptr addrspace(3) @global_smem, i64 %445
  %447 = zext nneg i32 %246 to i64
  %448 = getelementptr half, ptr addrspace(3) @global_smem, i64 %447
  %449 = zext nneg i32 %247 to i64
  %450 = getelementptr half, ptr addrspace(3) @global_smem, i64 %449
  %451 = zext nneg i32 %248 to i64
  %452 = getelementptr half, ptr addrspace(3) @global_smem, i64 %451
  %453 = zext nneg i32 %249 to i64
  %454 = getelementptr half, ptr addrspace(3) @global_smem, i64 %453
  %455 = zext nneg i32 %250 to i64
  %456 = getelementptr half, ptr addrspace(3) @global_smem, i64 %455
  %457 = zext nneg i32 %251 to i64
  %458 = getelementptr half, ptr addrspace(3) @global_smem, i64 %457
  %459 = zext nneg i32 %252 to i64
  %460 = getelementptr half, ptr addrspace(3) @global_smem, i64 %459
  %461 = zext nneg i32 %253 to i64
  %462 = getelementptr half, ptr addrspace(3) @global_smem, i64 %461
  %463 = zext nneg i32 %254 to i64
  %464 = getelementptr half, ptr addrspace(3) @global_smem, i64 %463
  %465 = zext nneg i32 %255 to i64
  %466 = getelementptr half, ptr addrspace(3) @global_smem, i64 %465
  %467 = zext nneg i32 %256 to i64
  %468 = getelementptr half, ptr addrspace(3) @global_smem, i64 %467
  %469 = zext nneg i32 %257 to i64
  %470 = getelementptr half, ptr addrspace(3) @global_smem, i64 %469
  %471 = zext nneg i32 %258 to i64
  %472 = getelementptr half, ptr addrspace(3) @global_smem, i64 %471
  %473 = zext nneg i32 %259 to i64
  %474 = getelementptr half, ptr addrspace(3) @global_smem, i64 %473
  %475 = zext nneg i32 %260 to i64
  %476 = getelementptr half, ptr addrspace(3) @global_smem, i64 %475
  %477 = zext nneg i32 %261 to i64
  %478 = getelementptr half, ptr addrspace(3) @global_smem, i64 %477
  %479 = zext nneg i32 %262 to i64
  %480 = getelementptr half, ptr addrspace(3) @global_smem, i64 %479
  %481 = zext nneg i32 %263 to i64
  %482 = getelementptr half, ptr addrspace(3) @global_smem, i64 %481
  %483 = zext nneg i32 %264 to i64
  %484 = getelementptr half, ptr addrspace(3) @global_smem, i64 %483
  %485 = zext nneg i32 %265 to i64
  %486 = getelementptr half, ptr addrspace(3) @global_smem, i64 %485
  %487 = zext nneg i32 %266 to i64
  %488 = getelementptr half, ptr addrspace(3) @global_smem, i64 %487
  %489 = zext nneg i32 %267 to i64
  %490 = getelementptr half, ptr addrspace(3) @global_smem, i64 %489
  %491 = zext nneg i32 %268 to i64
  %492 = getelementptr half, ptr addrspace(3) @global_smem, i64 %491
  %493 = zext nneg i32 %269 to i64
  %494 = getelementptr half, ptr addrspace(3) @global_smem, i64 %493
  %495 = zext nneg i32 %270 to i64
  %496 = getelementptr half, ptr addrspace(3) @global_smem, i64 %495
  %497 = zext nneg i32 %271 to i64
  %498 = getelementptr half, ptr addrspace(3) @global_smem, i64 %497
  %499 = zext nneg i32 %272 to i64
  %500 = getelementptr half, ptr addrspace(3) @global_smem, i64 %499
  %501 = zext nneg i32 %273 to i64
  %502 = getelementptr half, ptr addrspace(3) @global_smem, i64 %501
  %503 = zext nneg i32 %274 to i64
  %504 = getelementptr half, ptr addrspace(3) @global_smem, i64 %503
  %505 = zext nneg i32 %275 to i64
  %506 = getelementptr half, ptr addrspace(3) @global_smem, i64 %505
  %507 = zext nneg i32 %276 to i64
  %508 = getelementptr half, ptr addrspace(3) @global_smem, i64 %507
  %509 = zext nneg i32 %277 to i64
  %510 = getelementptr half, ptr addrspace(3) @global_smem, i64 %509
  %511 = zext nneg i32 %278 to i64
  %512 = getelementptr half, ptr addrspace(3) @global_smem, i64 %511
  %513 = zext nneg i32 %279 to i64
  %514 = getelementptr half, ptr addrspace(3) @global_smem, i64 %513
  %515 = zext nneg i32 %280 to i64
  %516 = getelementptr half, ptr addrspace(3) @global_smem, i64 %515
  %517 = zext nneg i32 %281 to i64
  %518 = getelementptr half, ptr addrspace(3) @global_smem, i64 %517
  %519 = zext nneg i32 %282 to i64
  %520 = getelementptr half, ptr addrspace(3) @global_smem, i64 %519
  %521 = zext nneg i32 %283 to i64
  %522 = getelementptr half, ptr addrspace(3) @global_smem, i64 %521
  %523 = zext nneg i32 %284 to i64
  %524 = getelementptr half, ptr addrspace(3) @global_smem, i64 %523
  %525 = zext nneg i32 %285 to i64
  %526 = getelementptr half, ptr addrspace(3) @global_smem, i64 %525
  %527 = zext nneg i32 %286 to i64
  %528 = getelementptr half, ptr addrspace(3) @global_smem, i64 %527
  %529 = zext nneg i32 %287 to i64
  %530 = getelementptr half, ptr addrspace(3) @global_smem, i64 %529
  %531 = zext nneg i32 %288 to i64
  %532 = getelementptr half, ptr addrspace(3) @global_smem, i64 %531
  %533 = zext nneg i32 %289 to i64
  %534 = getelementptr half, ptr addrspace(3) @global_smem, i64 %533
  %535 = zext nneg i32 %290 to i64
  %536 = getelementptr half, ptr addrspace(3) @global_smem, i64 %535
  %537 = zext nneg i32 %291 to i64
  %538 = getelementptr half, ptr addrspace(3) @global_smem, i64 %537
  %539 = zext nneg i32 %292 to i64
  %540 = getelementptr half, ptr addrspace(3) @global_smem, i64 %539
  %541 = zext nneg i32 %293 to i64
  %542 = getelementptr half, ptr addrspace(3) @global_smem, i64 %541
  %543 = zext nneg i32 %294 to i64
  %544 = getelementptr half, ptr addrspace(3) @global_smem, i64 %543
  %545 = zext nneg i32 %295 to i64
  %546 = getelementptr half, ptr addrspace(3) @global_smem, i64 %545
  %547 = zext nneg i32 %296 to i64
  %548 = getelementptr half, ptr addrspace(3) @global_smem, i64 %547
  %549 = zext nneg i32 %297 to i64
  %550 = getelementptr half, ptr addrspace(3) @global_smem, i64 %549
  %551 = zext nneg i32 %298 to i64
  %552 = getelementptr half, ptr addrspace(3) @global_smem, i64 %551
  %553 = zext nneg i32 %299 to i64
  %554 = getelementptr half, ptr addrspace(3) @global_smem, i64 %553
  %555 = zext nneg i32 %300 to i64
  %556 = getelementptr half, ptr addrspace(3) @global_smem, i64 %555
  %557 = lshr exact i32 %63, 2
  %558 = xor i32 %557, %162
  %559 = shl nuw nsw i32 %558, 2
  %560 = or disjoint i32 %559, %164
  %561 = zext nneg i32 %560 to i64
  %562 = getelementptr half, ptr addrspace(3) @global_smem, i64 %561
  %563 = or disjoint i32 %557, 1
  %564 = xor i32 %563, %162
  %565 = shl nuw nsw i32 %564, 2
  %566 = or disjoint i32 %565, %164
  %567 = zext nneg i32 %566 to i64
  %568 = getelementptr half, ptr addrspace(3) @global_smem, i64 %567
  %569 = or disjoint i32 %559, %168
  %570 = zext nneg i32 %569 to i64
  %571 = getelementptr half, ptr addrspace(3) @global_smem, i64 %570
  %572 = or disjoint i32 %565, %168
  %573 = zext nneg i32 %572 to i64
  %574 = getelementptr half, ptr addrspace(3) @global_smem, i64 %573
  %575 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %561
  %576 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %567
  %577 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %570
  %578 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %573
  %579 = icmp ugt i32 %33, 31
  %580 = select i1 %579, i32 4, i32 0
  %581 = and i32 %32, 15
  %582 = lshr exact i32 %580, 2
  %583 = xor i32 %582, %581
  %584 = shl nuw nsw i32 %583, 2
  %585 = shl nuw nsw i32 %38, 6
  %586 = or disjoint i32 %584, %585
  %587 = or disjoint i32 %582, 2
  %588 = xor i32 %587, %581
  %589 = shl nuw nsw i32 %588, 2
  %590 = or disjoint i32 %589, %585
  %591 = or disjoint i32 %582, 4
  %592 = xor i32 %591, %581
  %593 = shl nuw nsw i32 %592, 2
  %594 = or disjoint i32 %593, %585
  %595 = or disjoint i32 %582, 6
  %596 = xor i32 %595, %581
  %597 = shl nuw nsw i32 %596, 2
  %598 = or disjoint i32 %597, %585
  %599 = or disjoint i32 %582, 8
  %600 = xor i32 %599, %581
  %601 = shl nuw nsw i32 %600, 2
  %602 = or disjoint i32 %601, %585
  %603 = or disjoint i32 %582, 10
  %604 = xor i32 %603, %581
  %605 = shl nuw nsw i32 %604, 2
  %606 = or disjoint i32 %605, %585
  %607 = or disjoint i32 %582, 12
  %608 = xor i32 %607, %581
  %609 = shl nuw nsw i32 %608, 2
  %610 = or disjoint i32 %609, %585
  %611 = or disjoint i32 %582, 14
  %612 = xor i32 %611, %581
  %613 = shl nuw nsw i32 %612, 2
  %614 = or disjoint i32 %613, %585
  %615 = or disjoint i32 %585, 2048
  %616 = or disjoint i32 %584, %615
  %617 = or disjoint i32 %589, %615
  %618 = or disjoint i32 %593, %615
  %619 = or disjoint i32 %597, %615
  %620 = or disjoint i32 %601, %615
  %621 = or disjoint i32 %605, %615
  %622 = or disjoint i32 %609, %615
  %623 = or disjoint i32 %613, %615
  %624 = or disjoint i32 %585, 4096
  %625 = or disjoint i32 %584, %624
  %626 = or disjoint i32 %589, %624
  %627 = or disjoint i32 %593, %624
  %628 = or disjoint i32 %597, %624
  %629 = or disjoint i32 %601, %624
  %630 = or disjoint i32 %605, %624
  %631 = or disjoint i32 %609, %624
  %632 = or disjoint i32 %613, %624
  %633 = or disjoint i32 %585, 6144
  %634 = or disjoint i32 %584, %633
  %635 = or disjoint i32 %589, %633
  %636 = or disjoint i32 %593, %633
  %637 = or disjoint i32 %597, %633
  %638 = or disjoint i32 %601, %633
  %639 = or disjoint i32 %605, %633
  %640 = or disjoint i32 %609, %633
  %641 = or disjoint i32 %613, %633
  %642 = zext nneg i32 %586 to i64
  %643 = getelementptr half, ptr addrspace(3) @global_smem, i64 %642
  %644 = zext nneg i32 %590 to i64
  %645 = getelementptr half, ptr addrspace(3) @global_smem, i64 %644
  %646 = zext nneg i32 %594 to i64
  %647 = getelementptr half, ptr addrspace(3) @global_smem, i64 %646
  %648 = zext nneg i32 %598 to i64
  %649 = getelementptr half, ptr addrspace(3) @global_smem, i64 %648
  %650 = zext nneg i32 %602 to i64
  %651 = getelementptr half, ptr addrspace(3) @global_smem, i64 %650
  %652 = zext nneg i32 %606 to i64
  %653 = getelementptr half, ptr addrspace(3) @global_smem, i64 %652
  %654 = zext nneg i32 %610 to i64
  %655 = getelementptr half, ptr addrspace(3) @global_smem, i64 %654
  %656 = zext nneg i32 %614 to i64
  %657 = getelementptr half, ptr addrspace(3) @global_smem, i64 %656
  %658 = zext nneg i32 %616 to i64
  %659 = getelementptr half, ptr addrspace(3) @global_smem, i64 %658
  %660 = zext nneg i32 %617 to i64
  %661 = getelementptr half, ptr addrspace(3) @global_smem, i64 %660
  %662 = zext nneg i32 %618 to i64
  %663 = getelementptr half, ptr addrspace(3) @global_smem, i64 %662
  %664 = zext nneg i32 %619 to i64
  %665 = getelementptr half, ptr addrspace(3) @global_smem, i64 %664
  %666 = zext nneg i32 %620 to i64
  %667 = getelementptr half, ptr addrspace(3) @global_smem, i64 %666
  %668 = zext nneg i32 %621 to i64
  %669 = getelementptr half, ptr addrspace(3) @global_smem, i64 %668
  %670 = zext nneg i32 %622 to i64
  %671 = getelementptr half, ptr addrspace(3) @global_smem, i64 %670
  %672 = zext nneg i32 %623 to i64
  %673 = getelementptr half, ptr addrspace(3) @global_smem, i64 %672
  %674 = zext nneg i32 %625 to i64
  %675 = getelementptr half, ptr addrspace(3) @global_smem, i64 %674
  %676 = zext nneg i32 %626 to i64
  %677 = getelementptr half, ptr addrspace(3) @global_smem, i64 %676
  %678 = zext nneg i32 %627 to i64
  %679 = getelementptr half, ptr addrspace(3) @global_smem, i64 %678
  %680 = zext nneg i32 %628 to i64
  %681 = getelementptr half, ptr addrspace(3) @global_smem, i64 %680
  %682 = zext nneg i32 %629 to i64
  %683 = getelementptr half, ptr addrspace(3) @global_smem, i64 %682
  %684 = zext nneg i32 %630 to i64
  %685 = getelementptr half, ptr addrspace(3) @global_smem, i64 %684
  %686 = zext nneg i32 %631 to i64
  %687 = getelementptr half, ptr addrspace(3) @global_smem, i64 %686
  %688 = zext nneg i32 %632 to i64
  %689 = getelementptr half, ptr addrspace(3) @global_smem, i64 %688
  %690 = zext nneg i32 %634 to i64
  %691 = getelementptr half, ptr addrspace(3) @global_smem, i64 %690
  %692 = zext nneg i32 %635 to i64
  %693 = getelementptr half, ptr addrspace(3) @global_smem, i64 %692
  %694 = zext nneg i32 %636 to i64
  %695 = getelementptr half, ptr addrspace(3) @global_smem, i64 %694
  %696 = zext nneg i32 %637 to i64
  %697 = getelementptr half, ptr addrspace(3) @global_smem, i64 %696
  %698 = zext nneg i32 %638 to i64
  %699 = getelementptr half, ptr addrspace(3) @global_smem, i64 %698
  %700 = zext nneg i32 %639 to i64
  %701 = getelementptr half, ptr addrspace(3) @global_smem, i64 %700
  %702 = zext nneg i32 %640 to i64
  %703 = getelementptr half, ptr addrspace(3) @global_smem, i64 %702
  %704 = zext nneg i32 %641 to i64
  %705 = getelementptr half, ptr addrspace(3) @global_smem, i64 %704
  %706 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %642
  %707 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %644
  %708 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %646
  %709 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %648
  %710 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %650
  %711 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %652
  %712 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %654
  %713 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %656
  %714 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %658
  %715 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %660
  %716 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %662
  %717 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %664
  %718 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %666
  %719 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %668
  %720 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %670
  %721 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %672
  %722 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %674
  %723 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %676
  %724 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %678
  %725 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %680
  %726 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %682
  %727 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %684
  %728 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %686
  %729 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %688
  %730 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %690
  %731 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %692
  %732 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %694
  %733 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %696
  %734 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %698
  %735 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %700
  %736 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %702
  %737 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %704
  %invariant.gep = getelementptr half, ptr addrspace(1) %0, i64 %132
  %invariant.gep224 = getelementptr half, ptr addrspace(1) %5, i64 %132
  %738 = shl nuw nsw i32 %39, 6
  %739 = or disjoint i32 %584, %738
  %740 = or disjoint i32 %589, %738
  %741 = or disjoint i32 %593, %738
  %742 = or disjoint i32 %597, %738
  %743 = or disjoint i32 %601, %738
  %744 = or disjoint i32 %605, %738
  %745 = or disjoint i32 %609, %738
  %746 = or disjoint i32 %613, %738
  %747 = zext nneg i32 %739 to i64
  %748 = getelementptr half, ptr addrspace(3) @global_smem, i64 %747
  %749 = zext nneg i32 %740 to i64
  %750 = getelementptr half, ptr addrspace(3) @global_smem, i64 %749
  %751 = zext nneg i32 %741 to i64
  %752 = getelementptr half, ptr addrspace(3) @global_smem, i64 %751
  %753 = zext nneg i32 %742 to i64
  %754 = getelementptr half, ptr addrspace(3) @global_smem, i64 %753
  %755 = zext nneg i32 %743 to i64
  %756 = getelementptr half, ptr addrspace(3) @global_smem, i64 %755
  %757 = zext nneg i32 %744 to i64
  %758 = getelementptr half, ptr addrspace(3) @global_smem, i64 %757
  %759 = zext nneg i32 %745 to i64
  %760 = getelementptr half, ptr addrspace(3) @global_smem, i64 %759
  %761 = zext nneg i32 %746 to i64
  %762 = getelementptr half, ptr addrspace(3) @global_smem, i64 %761
  %763 = shl nuw nsw i32 %44, 9
  %764 = lshr i32 %39, 2
  %765 = xor i32 %764, %45
  %766 = shl nuw nsw i32 %765, 2
  %767 = and i32 %32, 3
  %768 = or disjoint i32 %766, %767
  %769 = or disjoint i32 %768, %763
  %770 = zext nneg i32 %769 to i64
  %771 = getelementptr half, ptr addrspace(3) @global_smem, i64 %770
  %772 = shl nuw nsw i32 %46, 7
  %773 = xor i32 %764, %46
  %774 = shl nuw nsw i32 %773, 2
  %775 = or disjoint i32 %767, %774
  %776 = or i32 %775, %772
  %777 = zext nneg i32 %776 to i64
  %778 = getelementptr half, ptr addrspace(3) @global_smem, i64 %777
  %779 = shl nuw nsw i32 %47, 7
  %780 = xor i32 %764, %47
  %781 = shl nuw nsw i32 %780, 2
  %782 = or disjoint i32 %767, %781
  %783 = or i32 %782, %779
  %784 = zext nneg i32 %783 to i64
  %785 = getelementptr half, ptr addrspace(3) @global_smem, i64 %784
  %786 = shl nuw nsw i32 %48, 7
  %787 = xor i32 %764, %48
  %788 = shl nuw nsw i32 %787, 2
  %789 = or disjoint i32 %767, %788
  %790 = or i32 %789, %786
  %791 = zext nneg i32 %790 to i64
  %792 = getelementptr half, ptr addrspace(3) @global_smem, i64 %791
  %793 = shl nuw nsw i32 %76, 7
  %794 = xor i32 %764, %76
  %795 = shl nuw nsw i32 %794, 2
  %796 = or disjoint i32 %767, %795
  %797 = or i32 %796, %793
  %798 = zext nneg i32 %797 to i64
  %799 = getelementptr half, ptr addrspace(3) @global_smem, i64 %798
  %800 = shl nuw nsw i32 %78, 7
  %801 = xor i32 %764, %78
  %802 = shl nuw nsw i32 %801, 2
  %803 = or disjoint i32 %767, %802
  %804 = or i32 %803, %800
  %805 = zext nneg i32 %804 to i64
  %806 = getelementptr half, ptr addrspace(3) @global_smem, i64 %805
  %807 = shl nuw nsw i32 %80, 7
  %808 = xor i32 %764, %80
  %809 = shl nuw nsw i32 %808, 2
  %810 = or disjoint i32 %767, %809
  %811 = or i32 %810, %807
  %812 = zext nneg i32 %811 to i64
  %813 = getelementptr half, ptr addrspace(3) @global_smem, i64 %812
  %814 = shl nuw nsw i32 %82, 7
  %815 = xor i32 %764, %82
  %816 = shl nuw nsw i32 %815, 2
  %817 = or disjoint i32 %767, %816
  %818 = or i32 %817, %814
  %819 = zext nneg i32 %818 to i64
  %820 = getelementptr half, ptr addrspace(3) @global_smem, i64 %819
  %821 = getelementptr i8, ptr addrspace(3) %771, i64 4096
  %822 = and i32 %86, 5
  %823 = xor i32 %764, %822
  %824 = shl nuw nsw i32 %823, 2
  %825 = or disjoint i32 %824, %767
  %826 = or disjoint i32 %825, %772
  %827 = zext nneg i32 %826 to i64
  %gep228 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %827
  %828 = and i32 %88, 6
  %829 = xor i32 %764, %828
  %830 = shl nuw nsw i32 %829, 2
  %831 = or disjoint i32 %830, %767
  %832 = or disjoint i32 %831, %779
  %833 = zext nneg i32 %832 to i64
  %gep229 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %833
  %834 = and i32 %90, 7
  %835 = xor i32 %764, %834
  %836 = shl nuw nsw i32 %835, 2
  %837 = or disjoint i32 %836, %767
  %838 = or disjoint i32 %837, %786
  %839 = zext nneg i32 %838 to i64
  %gep230 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %839
  %840 = and i32 %92, 12
  %841 = xor i32 %764, %840
  %842 = shl nuw nsw i32 %841, 2
  %843 = or disjoint i32 %842, %767
  %844 = or disjoint i32 %843, %793
  %845 = zext nneg i32 %844 to i64
  %gep231 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %845
  %846 = and i32 %94, 13
  %847 = xor i32 %764, %846
  %848 = shl nuw nsw i32 %847, 2
  %849 = or disjoint i32 %848, %767
  %850 = or disjoint i32 %849, %800
  %851 = zext nneg i32 %850 to i64
  %gep232 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %851
  %852 = and i32 %96, 14
  %853 = xor i32 %764, %852
  %854 = shl nuw nsw i32 %853, 2
  %855 = or disjoint i32 %854, %767
  %856 = or disjoint i32 %855, %807
  %857 = zext nneg i32 %856 to i64
  %gep233 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %857
  %858 = and i32 %98, 15
  %859 = xor i32 %764, %858
  %860 = shl nuw nsw i32 %859, 2
  %861 = or disjoint i32 %860, %767
  %862 = or disjoint i32 %861, %814
  %863 = zext nneg i32 %862 to i64
  %gep234 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 4096), i64 %863
  %864 = getelementptr i8, ptr addrspace(3) %771, i64 8192
  %865 = and i32 %102, 5
  %866 = xor i32 %764, %865
  %867 = shl nuw nsw i32 %866, 2
  %868 = or disjoint i32 %867, %767
  %869 = or disjoint i32 %868, %772
  %870 = zext nneg i32 %869 to i64
  %gep235 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %870
  %871 = and i32 %104, 6
  %872 = xor i32 %764, %871
  %873 = shl nuw nsw i32 %872, 2
  %874 = or disjoint i32 %873, %767
  %875 = or disjoint i32 %874, %779
  %876 = zext nneg i32 %875 to i64
  %gep236 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %876
  %877 = and i32 %106, 7
  %878 = xor i32 %764, %877
  %879 = shl nuw nsw i32 %878, 2
  %880 = or disjoint i32 %879, %767
  %881 = or disjoint i32 %880, %786
  %882 = zext nneg i32 %881 to i64
  %gep237 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %882
  %883 = and i32 %108, 12
  %884 = xor i32 %764, %883
  %885 = shl nuw nsw i32 %884, 2
  %886 = or disjoint i32 %885, %767
  %887 = or disjoint i32 %886, %793
  %888 = zext nneg i32 %887 to i64
  %gep238 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %888
  %889 = and i32 %110, 13
  %890 = xor i32 %764, %889
  %891 = shl nuw nsw i32 %890, 2
  %892 = or disjoint i32 %891, %767
  %893 = or disjoint i32 %892, %800
  %894 = zext nneg i32 %893 to i64
  %gep239 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %894
  %895 = and i32 %112, 14
  %896 = xor i32 %764, %895
  %897 = shl nuw nsw i32 %896, 2
  %898 = or disjoint i32 %897, %767
  %899 = or disjoint i32 %898, %807
  %900 = zext nneg i32 %899 to i64
  %gep240 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %900
  %901 = and i32 %114, 15
  %902 = xor i32 %764, %901
  %903 = shl nuw nsw i32 %902, 2
  %904 = or disjoint i32 %903, %767
  %905 = or disjoint i32 %904, %814
  %906 = zext nneg i32 %905 to i64
  %gep241 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %906
  %907 = getelementptr i8, ptr addrspace(3) %771, i64 12288
  %908 = and i32 %118, 5
  %909 = xor i32 %764, %908
  %910 = shl nuw nsw i32 %909, 2
  %911 = or disjoint i32 %910, %767
  %912 = or disjoint i32 %911, %772
  %913 = zext nneg i32 %912 to i64
  %gep242 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 12288), i64 %913
  %914 = and i32 %120, 6
  %915 = xor i32 %764, %914
  %916 = shl nuw nsw i32 %915, 2
  %917 = or disjoint i32 %916, %767
  %918 = or disjoint i32 %917, %779
  %919 = zext nneg i32 %918 to i64
  %gep243 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 12288), i64 %919
  %920 = and i32 %122, 7
  %921 = xor i32 %764, %920
  %922 = shl nuw nsw i32 %921, 2
  %923 = or disjoint i32 %922, %767
  %924 = or disjoint i32 %923, %786
  %925 = zext nneg i32 %924 to i64
  %gep244 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 12288), i64 %925
  %926 = and i32 %124, 12
  %927 = xor i32 %764, %926
  %928 = shl nuw nsw i32 %927, 2
  %929 = or disjoint i32 %928, %767
  %930 = or disjoint i32 %929, %793
  %931 = zext nneg i32 %930 to i64
  %gep245 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 12288), i64 %931
  %932 = and i32 %126, 13
  %933 = xor i32 %764, %932
  %934 = shl nuw nsw i32 %933, 2
  %935 = or disjoint i32 %934, %767
  %936 = or disjoint i32 %935, %800
  %937 = zext nneg i32 %936 to i64
  %gep246 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 12288), i64 %937
  %938 = and i32 %128, 14
  %939 = xor i32 %764, %938
  %940 = shl nuw nsw i32 %939, 2
  %941 = or disjoint i32 %940, %767
  %942 = or disjoint i32 %941, %807
  %943 = zext nneg i32 %942 to i64
  %gep247 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 12288), i64 %943
  %944 = and i32 %130, 15
  %945 = xor i32 %764, %944
  %946 = shl nuw nsw i32 %945, 2
  %947 = or disjoint i32 %946, %767
  %948 = or disjoint i32 %947, %814
  %949 = zext nneg i32 %948 to i64
  %gep248 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 12288), i64 %949
  %950 = getelementptr i8, ptr addrspace(3) %771, i64 16384
  %951 = and i32 %147, 5
  %952 = xor i32 %764, %951
  %953 = shl nuw nsw i32 %952, 2
  %954 = or disjoint i32 %953, %767
  %955 = or disjoint i32 %954, %772
  %956 = zext nneg i32 %955 to i64
  %gep249 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %956
  %957 = and i32 %146, 6
  %958 = xor i32 %764, %957
  %959 = shl nuw nsw i32 %958, 2
  %960 = or disjoint i32 %959, %767
  %961 = or disjoint i32 %960, %779
  %962 = zext nneg i32 %961 to i64
  %gep250 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %962
  %963 = and i32 %145, 7
  %964 = xor i32 %764, %963
  %965 = shl nuw nsw i32 %964, 2
  %966 = or disjoint i32 %965, %767
  %967 = or disjoint i32 %966, %786
  %968 = zext nneg i32 %967 to i64
  %gep251 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %968
  %969 = extractelement <4 x i32> %58, i64 0
  %970 = and i32 %969, 12
  %971 = xor i32 %764, %970
  %972 = shl nuw nsw i32 %971, 2
  %973 = or disjoint i32 %972, %767
  %974 = or disjoint i32 %973, %793
  %975 = zext nneg i32 %974 to i64
  %gep252 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %975
  %976 = extractelement <4 x i32> %58, i64 1
  %977 = and i32 %976, 13
  %978 = xor i32 %764, %977
  %979 = shl nuw nsw i32 %978, 2
  %980 = or disjoint i32 %979, %767
  %981 = or disjoint i32 %980, %800
  %982 = zext nneg i32 %981 to i64
  %gep253 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %982
  %983 = extractelement <4 x i32> %58, i64 2
  %984 = and i32 %983, 14
  %985 = xor i32 %764, %984
  %986 = shl nuw nsw i32 %985, 2
  %987 = or disjoint i32 %986, %767
  %988 = or disjoint i32 %987, %807
  %989 = zext nneg i32 %988 to i64
  %gep254 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %989
  %990 = extractelement <4 x i32> %58, i64 3
  %991 = and i32 %990, 15
  %992 = xor i32 %764, %991
  %993 = shl nuw nsw i32 %992, 2
  %994 = or disjoint i32 %993, %767
  %995 = or disjoint i32 %994, %814
  %996 = zext nneg i32 %995 to i64
  %gep255 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %996
  %997 = getelementptr i8, ptr addrspace(3) %771, i64 20480
  %998 = and i32 %144, 5
  %999 = xor i32 %764, %998
  %1000 = shl nuw nsw i32 %999, 2
  %1001 = or disjoint i32 %1000, %767
  %1002 = or disjoint i32 %1001, %772
  %1003 = zext nneg i32 %1002 to i64
  %gep256 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 20480), i64 %1003
  %1004 = and i32 %143, 6
  %1005 = xor i32 %764, %1004
  %1006 = shl nuw nsw i32 %1005, 2
  %1007 = or disjoint i32 %1006, %767
  %1008 = or disjoint i32 %1007, %779
  %1009 = zext nneg i32 %1008 to i64
  %gep257 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 20480), i64 %1009
  %1010 = and i32 %142, 7
  %1011 = xor i32 %764, %1010
  %1012 = shl nuw nsw i32 %1011, 2
  %1013 = or disjoint i32 %1012, %767
  %1014 = or disjoint i32 %1013, %786
  %1015 = zext nneg i32 %1014 to i64
  %gep258 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 20480), i64 %1015
  %1016 = extractelement <4 x i32> %59, i64 0
  %1017 = and i32 %1016, 12
  %1018 = xor i32 %764, %1017
  %1019 = shl nuw nsw i32 %1018, 2
  %1020 = or disjoint i32 %1019, %767
  %1021 = or disjoint i32 %1020, %793
  %1022 = zext nneg i32 %1021 to i64
  %gep259 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 20480), i64 %1022
  %1023 = extractelement <4 x i32> %59, i64 1
  %1024 = and i32 %1023, 13
  %1025 = xor i32 %764, %1024
  %1026 = shl nuw nsw i32 %1025, 2
  %1027 = or disjoint i32 %1026, %767
  %1028 = or disjoint i32 %1027, %800
  %1029 = zext nneg i32 %1028 to i64
  %gep260 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 20480), i64 %1029
  %1030 = extractelement <4 x i32> %59, i64 2
  %1031 = and i32 %1030, 14
  %1032 = xor i32 %764, %1031
  %1033 = shl nuw nsw i32 %1032, 2
  %1034 = or disjoint i32 %1033, %767
  %1035 = or disjoint i32 %1034, %807
  %1036 = zext nneg i32 %1035 to i64
  %gep261 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 20480), i64 %1036
  %1037 = extractelement <4 x i32> %59, i64 3
  %1038 = and i32 %1037, 15
  %1039 = xor i32 %764, %1038
  %1040 = shl nuw nsw i32 %1039, 2
  %1041 = or disjoint i32 %1040, %767
  %1042 = or disjoint i32 %1041, %814
  %1043 = zext nneg i32 %1042 to i64
  %gep262 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 20480), i64 %1043
  %1044 = getelementptr i8, ptr addrspace(3) %771, i64 24576
  %1045 = and i32 %141, 5
  %1046 = xor i32 %764, %1045
  %1047 = shl nuw nsw i32 %1046, 2
  %1048 = or disjoint i32 %1047, %767
  %1049 = or disjoint i32 %1048, %772
  %1050 = zext nneg i32 %1049 to i64
  %gep263 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1050
  %1051 = and i32 %140, 6
  %1052 = xor i32 %764, %1051
  %1053 = shl nuw nsw i32 %1052, 2
  %1054 = or disjoint i32 %1053, %767
  %1055 = or disjoint i32 %1054, %779
  %1056 = zext nneg i32 %1055 to i64
  %gep264 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1056
  %1057 = and i32 %139, 7
  %1058 = xor i32 %764, %1057
  %1059 = shl nuw nsw i32 %1058, 2
  %1060 = or disjoint i32 %1059, %767
  %1061 = or disjoint i32 %1060, %786
  %1062 = zext nneg i32 %1061 to i64
  %gep265 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1062
  %1063 = extractelement <4 x i32> %60, i64 0
  %1064 = and i32 %1063, 12
  %1065 = xor i32 %764, %1064
  %1066 = shl nuw nsw i32 %1065, 2
  %1067 = or disjoint i32 %1066, %767
  %1068 = or disjoint i32 %1067, %793
  %1069 = zext nneg i32 %1068 to i64
  %gep266 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1069
  %1070 = extractelement <4 x i32> %60, i64 1
  %1071 = and i32 %1070, 13
  %1072 = xor i32 %764, %1071
  %1073 = shl nuw nsw i32 %1072, 2
  %1074 = or disjoint i32 %1073, %767
  %1075 = or disjoint i32 %1074, %800
  %1076 = zext nneg i32 %1075 to i64
  %gep267 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1076
  %1077 = extractelement <4 x i32> %60, i64 2
  %1078 = and i32 %1077, 14
  %1079 = xor i32 %764, %1078
  %1080 = shl nuw nsw i32 %1079, 2
  %1081 = or disjoint i32 %1080, %767
  %1082 = or disjoint i32 %1081, %807
  %1083 = zext nneg i32 %1082 to i64
  %gep268 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1083
  %1084 = extractelement <4 x i32> %60, i64 3
  %1085 = and i32 %1084, 15
  %1086 = xor i32 %764, %1085
  %1087 = shl nuw nsw i32 %1086, 2
  %1088 = or disjoint i32 %1087, %767
  %1089 = or disjoint i32 %1088, %814
  %1090 = zext nneg i32 %1089 to i64
  %gep269 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %1090
  %1091 = getelementptr i8, ptr addrspace(3) %771, i64 28672
  %1092 = and i32 %138, 5
  %1093 = xor i32 %764, %1092
  %1094 = shl nuw nsw i32 %1093, 2
  %1095 = or disjoint i32 %1094, %767
  %1096 = or disjoint i32 %1095, %772
  %1097 = zext nneg i32 %1096 to i64
  %gep270 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 28672), i64 %1097
  %1098 = and i32 %137, 6
  %1099 = xor i32 %764, %1098
  %1100 = shl nuw nsw i32 %1099, 2
  %1101 = or disjoint i32 %1100, %767
  %1102 = or disjoint i32 %1101, %779
  %1103 = zext nneg i32 %1102 to i64
  %gep271 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 28672), i64 %1103
  %1104 = and i32 %136, 7
  %1105 = xor i32 %764, %1104
  %1106 = shl nuw nsw i32 %1105, 2
  %1107 = or disjoint i32 %1106, %767
  %1108 = or disjoint i32 %1107, %786
  %1109 = zext nneg i32 %1108 to i64
  %gep272 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 28672), i64 %1109
  %1110 = extractelement <4 x i32> %61, i64 0
  %1111 = and i32 %1110, 12
  %1112 = xor i32 %764, %1111
  %1113 = shl nuw nsw i32 %1112, 2
  %1114 = or disjoint i32 %1113, %767
  %1115 = or disjoint i32 %1114, %793
  %1116 = zext nneg i32 %1115 to i64
  %gep273 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 28672), i64 %1116
  %1117 = extractelement <4 x i32> %61, i64 1
  %1118 = and i32 %1117, 13
  %1119 = xor i32 %764, %1118
  %1120 = shl nuw nsw i32 %1119, 2
  %1121 = or disjoint i32 %1120, %767
  %1122 = or disjoint i32 %1121, %800
  %1123 = zext nneg i32 %1122 to i64
  %gep274 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 28672), i64 %1123
  %1124 = extractelement <4 x i32> %61, i64 2
  %1125 = and i32 %1124, 14
  %1126 = xor i32 %764, %1125
  %1127 = shl nuw nsw i32 %1126, 2
  %1128 = or disjoint i32 %1127, %767
  %1129 = or disjoint i32 %1128, %807
  %1130 = zext nneg i32 %1129 to i64
  %gep275 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 28672), i64 %1130
  %1131 = extractelement <4 x i32> %61, i64 3
  %1132 = and i32 %1131, 15
  %1133 = xor i32 %764, %1132
  %1134 = shl nuw nsw i32 %1133, 2
  %1135 = or disjoint i32 %1134, %767
  %1136 = or disjoint i32 %1135, %814
  %1137 = zext nneg i32 %1136 to i64
  %gep276 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 28672), i64 %1137
  %1138 = or disjoint i32 %580, 64
  %1139 = or disjoint i32 %580, 72
  %1140 = or disjoint i32 %580, 80
  %1141 = or disjoint i32 %580, 88
  %1142 = or disjoint i32 %580, 96
  %1143 = or disjoint i32 %580, 104
  %1144 = or disjoint i32 %580, 112
  %1145 = or disjoint i32 %580, 120
  %1146 = shl nuw nsw i32 %39, 7
  %1147 = or disjoint i32 %584, %1146
  %1148 = or disjoint i32 %589, %1146
  %1149 = or disjoint i32 %593, %1146
  %1150 = or disjoint i32 %597, %1146
  %1151 = or disjoint i32 %601, %1146
  %1152 = or disjoint i32 %605, %1146
  %1153 = or disjoint i32 %609, %1146
  %1154 = or disjoint i32 %613, %1146
  %1155 = shl nuw nsw i32 %581, 2
  %1156 = xor i32 %1138, %1155
  %1157 = or disjoint i32 %1146, %1156
  %1158 = xor i32 %1139, %1155
  %1159 = or disjoint i32 %1146, %1158
  %1160 = xor i32 %1140, %1155
  %1161 = or disjoint i32 %1146, %1160
  %1162 = xor i32 %1141, %1155
  %1163 = or disjoint i32 %1146, %1162
  %1164 = xor i32 %1142, %1155
  %1165 = or disjoint i32 %1146, %1164
  %1166 = xor i32 %1143, %1155
  %1167 = or disjoint i32 %1146, %1166
  %1168 = xor i32 %1144, %1155
  %1169 = or disjoint i32 %1146, %1168
  %1170 = xor i32 %1145, %1155
  %1171 = or disjoint i32 %1146, %1170
  %1172 = zext nneg i32 %1147 to i64
  %1173 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1172
  %1174 = zext nneg i32 %1148 to i64
  %1175 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1174
  %1176 = zext nneg i32 %1149 to i64
  %1177 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1176
  %1178 = zext nneg i32 %1150 to i64
  %1179 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1178
  %1180 = zext nneg i32 %1151 to i64
  %1181 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1180
  %1182 = zext nneg i32 %1152 to i64
  %1183 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1182
  %1184 = zext nneg i32 %1153 to i64
  %1185 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1184
  %1186 = zext nneg i32 %1154 to i64
  %1187 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1186
  %1188 = zext nneg i32 %1157 to i64
  %1189 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1188
  %1190 = zext nneg i32 %1159 to i64
  %1191 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1190
  %1192 = zext nneg i32 %1161 to i64
  %1193 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1192
  %1194 = zext nneg i32 %1163 to i64
  %1195 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1194
  %1196 = zext nneg i32 %1165 to i64
  %1197 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1196
  %1198 = zext nneg i32 %1167 to i64
  %1199 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1198
  %1200 = zext nneg i32 %1169 to i64
  %1201 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1200
  %1202 = zext nneg i32 %1171 to i64
  %1203 = getelementptr half, ptr addrspace(3) @global_smem, i64 %1202
  %1204 = shl nuw nsw i32 %63, 7
  %1205 = or disjoint i32 %42, %1204
  %1206 = zext nneg i32 %1205 to i64
  %1207 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1206
  %1208 = or disjoint i32 %1204, 128
  %1209 = or disjoint i32 %1208, %42
  %1210 = zext nneg i32 %1209 to i64
  %1211 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1210
  %1212 = or disjoint i32 %1204, 256
  %1213 = or disjoint i32 %1212, %42
  %1214 = zext nneg i32 %1213 to i64
  %1215 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1214
  %1216 = or disjoint i32 %1204, 384
  %1217 = or disjoint i32 %1216, %42
  %1218 = zext nneg i32 %1217 to i64
  %1219 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1218
  %1220 = shl nuw nsw i32 %64, 7
  %1221 = or disjoint i32 %1220, %42
  %1222 = zext nneg i32 %1221 to i64
  %1223 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1222
  %1224 = or disjoint i32 %1204, 640
  %1225 = or disjoint i32 %1224, %42
  %1226 = zext nneg i32 %1225 to i64
  %1227 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1226
  %1228 = or disjoint i32 %1204, 768
  %1229 = or disjoint i32 %1228, %42
  %1230 = zext nneg i32 %1229 to i64
  %1231 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1230
  %1232 = or disjoint i32 %1204, 896
  %1233 = or disjoint i32 %1232, %42
  %1234 = zext nneg i32 %1233 to i64
  %1235 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1234
  %1236 = or disjoint i32 %43, %1204
  %1237 = zext nneg i32 %1236 to i64
  %1238 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1237
  %1239 = or disjoint i32 %43, %1208
  %1240 = zext nneg i32 %1239 to i64
  %1241 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1240
  %1242 = or disjoint i32 %43, %1212
  %1243 = zext nneg i32 %1242 to i64
  %1244 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1243
  %1245 = or disjoint i32 %43, %1216
  %1246 = zext nneg i32 %1245 to i64
  %1247 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1246
  %1248 = or disjoint i32 %43, %1220
  %1249 = zext nneg i32 %1248 to i64
  %1250 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1249
  %1251 = or disjoint i32 %43, %1224
  %1252 = zext nneg i32 %1251 to i64
  %1253 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1252
  %1254 = or disjoint i32 %43, %1228
  %1255 = zext nneg i32 %1254 to i64
  %1256 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1255
  %1257 = or disjoint i32 %43, %1232
  %1258 = zext nneg i32 %1257 to i64
  %1259 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1258
  %1260 = or disjoint i32 %39, %763
  %1261 = zext nneg i32 %1260 to i64
  %1262 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1261
  %1263 = or disjoint i32 %772, %39
  %1264 = zext nneg i32 %1263 to i64
  %1265 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1264
  %1266 = or disjoint i32 %779, %39
  %1267 = zext nneg i32 %1266 to i64
  %1268 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1267
  %1269 = or disjoint i32 %786, %39
  %1270 = zext nneg i32 %1269 to i64
  %1271 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1270
  %1272 = or disjoint i32 %793, %39
  %1273 = zext nneg i32 %1272 to i64
  %1274 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1273
  %1275 = or disjoint i32 %800, %39
  %1276 = zext nneg i32 %1275 to i64
  %1277 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1276
  %1278 = or disjoint i32 %807, %39
  %1279 = zext nneg i32 %1278 to i64
  %1280 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1279
  %1281 = or disjoint i32 %814, %39
  %1282 = zext nneg i32 %1281 to i64
  %1283 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1282
  %1284 = shl nuw nsw i32 %84, 7
  %1285 = or disjoint i32 %1284, %39
  %1286 = zext nneg i32 %1285 to i64
  %1287 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1286
  %1288 = shl nuw nsw i32 %86, 7
  %1289 = or disjoint i32 %1288, %39
  %1290 = zext nneg i32 %1289 to i64
  %1291 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1290
  %1292 = shl nuw nsw i32 %88, 7
  %1293 = or disjoint i32 %1292, %39
  %1294 = zext nneg i32 %1293 to i64
  %1295 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1294
  %1296 = shl nuw nsw i32 %90, 7
  %1297 = or disjoint i32 %1296, %39
  %1298 = zext nneg i32 %1297 to i64
  %1299 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1298
  %1300 = shl nuw nsw i32 %92, 7
  %1301 = or disjoint i32 %1300, %39
  %1302 = zext nneg i32 %1301 to i64
  %1303 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1302
  %1304 = shl nuw nsw i32 %94, 7
  %1305 = or disjoint i32 %1304, %39
  %1306 = zext nneg i32 %1305 to i64
  %1307 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1306
  %1308 = shl nuw nsw i32 %96, 7
  %1309 = or disjoint i32 %1308, %39
  %1310 = zext nneg i32 %1309 to i64
  %1311 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1310
  %1312 = shl nuw nsw i32 %98, 7
  %1313 = or disjoint i32 %1312, %39
  %1314 = zext nneg i32 %1313 to i64
  %1315 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1314
  %1316 = shl nuw nsw i32 %100, 7
  %1317 = or disjoint i32 %1316, %39
  %1318 = zext nneg i32 %1317 to i64
  %1319 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1318
  %1320 = shl nuw nsw i32 %102, 7
  %1321 = or disjoint i32 %1320, %39
  %1322 = zext nneg i32 %1321 to i64
  %1323 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1322
  %1324 = shl nuw nsw i32 %104, 7
  %1325 = or disjoint i32 %1324, %39
  %1326 = zext nneg i32 %1325 to i64
  %1327 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1326
  %1328 = shl nuw nsw i32 %106, 7
  %1329 = or disjoint i32 %1328, %39
  %1330 = zext nneg i32 %1329 to i64
  %1331 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1330
  %1332 = shl nuw nsw i32 %108, 7
  %1333 = or disjoint i32 %1332, %39
  %1334 = zext nneg i32 %1333 to i64
  %1335 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1334
  %1336 = shl nuw nsw i32 %110, 7
  %1337 = or disjoint i32 %1336, %39
  %1338 = zext nneg i32 %1337 to i64
  %1339 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1338
  %1340 = shl nuw nsw i32 %112, 7
  %1341 = or disjoint i32 %1340, %39
  %1342 = zext nneg i32 %1341 to i64
  %1343 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1342
  %1344 = shl nuw nsw i32 %114, 7
  %1345 = or disjoint i32 %1344, %39
  %1346 = zext nneg i32 %1345 to i64
  %1347 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1346
  %1348 = shl nuw nsw i32 %116, 7
  %1349 = or disjoint i32 %1348, %39
  %1350 = zext nneg i32 %1349 to i64
  %1351 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1350
  %1352 = shl nuw nsw i32 %118, 7
  %1353 = or disjoint i32 %1352, %39
  %1354 = zext nneg i32 %1353 to i64
  %1355 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1354
  %1356 = shl nuw nsw i32 %120, 7
  %1357 = or disjoint i32 %1356, %39
  %1358 = zext nneg i32 %1357 to i64
  %1359 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1358
  %1360 = shl nuw nsw i32 %122, 7
  %1361 = or disjoint i32 %1360, %39
  %1362 = zext nneg i32 %1361 to i64
  %1363 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1362
  %1364 = shl nuw nsw i32 %124, 7
  %1365 = or disjoint i32 %1364, %39
  %1366 = zext nneg i32 %1365 to i64
  %1367 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1366
  %1368 = shl nuw nsw i32 %126, 7
  %1369 = or disjoint i32 %1368, %39
  %1370 = zext nneg i32 %1369 to i64
  %1371 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1370
  %1372 = shl nuw nsw i32 %128, 7
  %1373 = or disjoint i32 %1372, %39
  %1374 = zext nneg i32 %1373 to i64
  %1375 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1374
  %1376 = shl nuw nsw i32 %130, 7
  %1377 = or disjoint i32 %1376, %39
  %1378 = zext nneg i32 %1377 to i64
  %1379 = getelementptr float, ptr addrspace(3) @global_smem, i64 %1378
  %1380 = icmp ult i32 %35, 4
  %1381 = insertelement <4 x i32> poison, i32 %138, i64 1, !dbg !24
  %1382 = insertelement <4 x i32> %1381, i32 %137, i64 2, !dbg !24
  %1383 = insertelement <4 x i32> %1382, i32 %136, i64 3, !dbg !24
  %1384 = insertelement <4 x i32> poison, i32 %141, i64 1, !dbg !24
  %1385 = insertelement <4 x i32> %1384, i32 %140, i64 2, !dbg !24
  %1386 = insertelement <4 x i32> %1385, i32 %139, i64 3, !dbg !24
  %1387 = insertelement <4 x i32> poison, i32 %144, i64 1, !dbg !24
  %1388 = insertelement <4 x i32> %1387, i32 %143, i64 2, !dbg !24
  %1389 = insertelement <4 x i32> %1388, i32 %142, i64 3, !dbg !24
  %1390 = insertelement <4 x i32> poison, i32 %147, i64 1, !dbg !24
  %1391 = insertelement <4 x i32> %1390, i32 %146, i64 2, !dbg !24
  %1392 = insertelement <4 x i32> %1391, i32 %145, i64 3, !dbg !24
  %1393 = insertelement <4 x i32> %49, i32 %46, i64 1, !dbg !24
  %1394 = insertelement <4 x i32> %1393, i32 %47, i64 2, !dbg !24
  %1395 = insertelement <4 x i32> %1394, i32 %48, i64 3, !dbg !24
  %1396 = insertelement <4 x float> poison, float %3, i64 0
  %1397 = shufflevector <4 x float> %1396, <4 x float> poison, <4 x i32> zeroinitializer
  br label %1398, !dbg !19

1398:                                             ; preds = %.lr.ph290, %3613
  %1399 = phi i64 [ %160, %.lr.ph290 ], [ %3474, %3613 ]
  %1400 = phi i64 [ %160, %.lr.ph290 ], [ %3473, %3613 ]
  %1401 = phi i64 [ %160, %.lr.ph290 ], [ %3472, %3613 ]
  %1402 = phi i64 [ %160, %.lr.ph290 ], [ %3471, %3613 ]
  %1403 = phi i32 [ 0, %.lr.ph290 ], [ %3614, %3613 ]
  %1404 = shl i32 %1403, 7, !dbg !25
  %1405 = insertelement <4 x i32> poison, i32 %1404, i64 0, !dbg !24
  %1406 = shufflevector <4 x i32> %1405, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !24
  %1407 = or disjoint <4 x i32> %1406, %1395, !dbg !24
  %1408 = or disjoint <4 x i32> %1406, %51, !dbg !24
  %1409 = or disjoint <4 x i32> %1406, %52, !dbg !24
  %1410 = or disjoint <4 x i32> %1406, %53, !dbg !24
  %1411 = or disjoint <4 x i32> %1406, %54, !dbg !24
  %1412 = or disjoint <4 x i32> %1406, %55, !dbg !24
  %1413 = or disjoint <4 x i32> %1406, %56, !dbg !24
  %1414 = or disjoint <4 x i32> %1406, %57, !dbg !24
  %1415 = insertelement <4 x i32> <i32 64, i32 poison, i32 poison, i32 poison>, i32 %1404, i64 1, !dbg !24
  %1416 = shufflevector <4 x i32> %1415, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 1, i32 1>, !dbg !24
  %1417 = shufflevector <4 x i32> %1407, <4 x i32> %1392, <4 x i32> <i32 0, i32 5, i32 6, i32 7>, !dbg !24
  %1418 = or disjoint <4 x i32> %1416, %1417, !dbg !24
  %1419 = or disjoint <4 x i32> %1406, %58, !dbg !24
  %1420 = insertelement <4 x i32> <i32 80, i32 poison, i32 poison, i32 poison>, i32 %1404, i64 1, !dbg !24
  %1421 = shufflevector <4 x i32> %1420, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 1, i32 1>, !dbg !24
  %1422 = shufflevector <4 x i32> %1407, <4 x i32> %1389, <4 x i32> <i32 0, i32 5, i32 6, i32 7>, !dbg !24
  %1423 = or disjoint <4 x i32> %1421, %1422, !dbg !24
  %1424 = or disjoint <4 x i32> %1406, %59, !dbg !24
  %1425 = insertelement <4 x i32> <i32 96, i32 poison, i32 poison, i32 poison>, i32 %1404, i64 1, !dbg !24
  %1426 = shufflevector <4 x i32> %1425, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 1, i32 1>, !dbg !24
  %1427 = shufflevector <4 x i32> %1407, <4 x i32> %1386, <4 x i32> <i32 0, i32 5, i32 6, i32 7>, !dbg !24
  %1428 = or disjoint <4 x i32> %1426, %1427, !dbg !24
  %1429 = or disjoint <4 x i32> %1406, %60, !dbg !24
  %1430 = insertelement <4 x i32> <i32 112, i32 poison, i32 poison, i32 poison>, i32 %1404, i64 1, !dbg !24
  %1431 = shufflevector <4 x i32> %1430, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 1, i32 1>, !dbg !24
  %1432 = shufflevector <4 x i32> %1407, <4 x i32> %1383, <4 x i32> <i32 0, i32 5, i32 6, i32 7>, !dbg !24
  %1433 = or disjoint <4 x i32> %1431, %1432, !dbg !24
  %1434 = or disjoint <4 x i32> %1406, %61, !dbg !24
  %1435 = add i64 %1399, %70, !dbg !26
  %1436 = add i64 %1399, %71, !dbg !26
  %1437 = mul i64 %1436, %30, !dbg !26
  %gep282 = getelementptr half, ptr addrspace(1) %invariant.gep281, i64 %1437, !dbg !26
  %1438 = icmp sgt i64 %1435, -1, !dbg !26
  %1439 = icmp sgt i64 %1436, -1, !dbg !26
  %1440 = icmp slt i64 %1435, %28, !dbg !26
  %1441 = icmp slt i64 %1436, %28, !dbg !26
  %1442 = and i1 %1438, %1440, !dbg !26
  %1443 = and i1 %1439, %1441, !dbg !26
  br i1 %1442, label %1444, label %1448, !dbg !26

1444:                                             ; preds = %1398
  %1445 = mul i64 %1435, %30, !dbg !26
  %gep284 = getelementptr half, ptr addrspace(1) %invariant.gep281, i64 %1445, !dbg !26
  %1446 = addrspacecast ptr addrspace(1) %gep284 to ptr, !dbg !26
  %1447 = load <8 x half>, ptr %1446, align 16, !dbg !26
  br label %1448, !dbg !26

1448:                                             ; preds = %1398, %1444
  %1449 = phi <8 x half> [ %1447, %1444 ], [ zeroinitializer, %1398 ]
  br i1 %1443, label %1450, label %1453, !dbg !26

1450:                                             ; preds = %1448
  %1451 = addrspacecast ptr addrspace(1) %gep282 to ptr, !dbg !26
  %1452 = load <8 x half>, ptr %1451, align 16, !dbg !26
  br label %1453, !dbg !26

1453:                                             ; preds = %1448, %1450
  %1454 = phi <8 x half> [ %1452, %1450 ], [ zeroinitializer, %1448 ]
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  store <8 x half> %1449, ptr addrspace(3) %167, align 16, !dbg !26
  store <8 x half> %1454, ptr addrspace(3) %171, align 16, !dbg !26
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %1455 = load half, ptr addrspace(3) %302, align 2, !dbg !26
  %1456 = load half, ptr addrspace(3) %304, align 2, !dbg !26
  %1457 = load half, ptr addrspace(3) %306, align 2, !dbg !26
  %1458 = load half, ptr addrspace(3) %308, align 2, !dbg !26
  %1459 = load half, ptr addrspace(3) %310, align 2, !dbg !26
  %1460 = load half, ptr addrspace(3) %312, align 2, !dbg !26
  %1461 = load half, ptr addrspace(3) %314, align 2, !dbg !26
  %1462 = load half, ptr addrspace(3) %316, align 2, !dbg !26
  %1463 = load half, ptr addrspace(3) %318, align 2, !dbg !26
  %1464 = load half, ptr addrspace(3) %320, align 2, !dbg !26
  %1465 = load half, ptr addrspace(3) %322, align 2, !dbg !26
  %1466 = load half, ptr addrspace(3) %324, align 2, !dbg !26
  %1467 = load half, ptr addrspace(3) %326, align 2, !dbg !26
  %1468 = load half, ptr addrspace(3) %328, align 2, !dbg !26
  %1469 = load half, ptr addrspace(3) %330, align 2, !dbg !26
  %1470 = load half, ptr addrspace(3) %332, align 2, !dbg !26
  %1471 = load half, ptr addrspace(3) %334, align 2, !dbg !26
  %1472 = load half, ptr addrspace(3) %336, align 2, !dbg !26
  %1473 = load half, ptr addrspace(3) %338, align 2, !dbg !26
  %1474 = load half, ptr addrspace(3) %340, align 2, !dbg !26
  %1475 = load half, ptr addrspace(3) %342, align 2, !dbg !26
  %1476 = load half, ptr addrspace(3) %344, align 2, !dbg !26
  %1477 = load half, ptr addrspace(3) %346, align 2, !dbg !26
  %1478 = load half, ptr addrspace(3) %348, align 2, !dbg !26
  %1479 = load half, ptr addrspace(3) %350, align 2, !dbg !26
  %1480 = load half, ptr addrspace(3) %352, align 2, !dbg !26
  %1481 = load half, ptr addrspace(3) %354, align 2, !dbg !26
  %1482 = load half, ptr addrspace(3) %356, align 2, !dbg !26
  %1483 = load half, ptr addrspace(3) %358, align 2, !dbg !26
  %1484 = load half, ptr addrspace(3) %360, align 2, !dbg !26
  %1485 = load half, ptr addrspace(3) %362, align 2, !dbg !26
  %1486 = load half, ptr addrspace(3) %364, align 2, !dbg !26
  %1487 = load half, ptr addrspace(3) %366, align 2, !dbg !26
  %1488 = load half, ptr addrspace(3) %368, align 2, !dbg !26
  %1489 = load half, ptr addrspace(3) %370, align 2, !dbg !26
  %1490 = load half, ptr addrspace(3) %372, align 2, !dbg !26
  %1491 = load half, ptr addrspace(3) %374, align 2, !dbg !26
  %1492 = load half, ptr addrspace(3) %376, align 2, !dbg !26
  %1493 = load half, ptr addrspace(3) %378, align 2, !dbg !26
  %1494 = load half, ptr addrspace(3) %380, align 2, !dbg !26
  %1495 = load half, ptr addrspace(3) %382, align 2, !dbg !26
  %1496 = load half, ptr addrspace(3) %384, align 2, !dbg !26
  %1497 = load half, ptr addrspace(3) %386, align 2, !dbg !26
  %1498 = load half, ptr addrspace(3) %388, align 2, !dbg !26
  %1499 = load half, ptr addrspace(3) %390, align 2, !dbg !26
  %1500 = load half, ptr addrspace(3) %392, align 2, !dbg !26
  %1501 = load half, ptr addrspace(3) %394, align 2, !dbg !26
  %1502 = load half, ptr addrspace(3) %396, align 2, !dbg !26
  %1503 = load half, ptr addrspace(3) %398, align 2, !dbg !26
  %1504 = load half, ptr addrspace(3) %400, align 2, !dbg !26
  %1505 = load half, ptr addrspace(3) %402, align 2, !dbg !26
  %1506 = load half, ptr addrspace(3) %404, align 2, !dbg !26
  %1507 = load half, ptr addrspace(3) %406, align 2, !dbg !26
  %1508 = load half, ptr addrspace(3) %408, align 2, !dbg !26
  %1509 = load half, ptr addrspace(3) %410, align 2, !dbg !26
  %1510 = load half, ptr addrspace(3) %412, align 2, !dbg !26
  %1511 = load half, ptr addrspace(3) %414, align 2, !dbg !26
  %1512 = load half, ptr addrspace(3) %416, align 2, !dbg !26
  %1513 = load half, ptr addrspace(3) %418, align 2, !dbg !26
  %1514 = load half, ptr addrspace(3) %420, align 2, !dbg !26
  %1515 = load half, ptr addrspace(3) %422, align 2, !dbg !26
  %1516 = load half, ptr addrspace(3) %424, align 2, !dbg !26
  %1517 = load half, ptr addrspace(3) %426, align 2, !dbg !26
  %1518 = load half, ptr addrspace(3) %428, align 2, !dbg !26
  %1519 = load half, ptr addrspace(3) %430, align 2, !dbg !26
  %1520 = load half, ptr addrspace(3) %432, align 2, !dbg !26
  %1521 = load half, ptr addrspace(3) %434, align 2, !dbg !26
  %1522 = load half, ptr addrspace(3) %436, align 2, !dbg !26
  %1523 = load half, ptr addrspace(3) %438, align 2, !dbg !26
  %1524 = load half, ptr addrspace(3) %440, align 2, !dbg !26
  %1525 = load half, ptr addrspace(3) %442, align 2, !dbg !26
  %1526 = load half, ptr addrspace(3) %444, align 2, !dbg !26
  %1527 = load half, ptr addrspace(3) %446, align 2, !dbg !26
  %1528 = load half, ptr addrspace(3) %448, align 2, !dbg !26
  %1529 = load half, ptr addrspace(3) %450, align 2, !dbg !26
  %1530 = load half, ptr addrspace(3) %452, align 2, !dbg !26
  %1531 = load half, ptr addrspace(3) %454, align 2, !dbg !26
  %1532 = load half, ptr addrspace(3) %456, align 2, !dbg !26
  %1533 = load half, ptr addrspace(3) %458, align 2, !dbg !26
  %1534 = load half, ptr addrspace(3) %460, align 2, !dbg !26
  %1535 = load half, ptr addrspace(3) %462, align 2, !dbg !26
  %1536 = load half, ptr addrspace(3) %464, align 2, !dbg !26
  %1537 = load half, ptr addrspace(3) %466, align 2, !dbg !26
  %1538 = load half, ptr addrspace(3) %468, align 2, !dbg !26
  %1539 = load half, ptr addrspace(3) %470, align 2, !dbg !26
  %1540 = load half, ptr addrspace(3) %472, align 2, !dbg !26
  %1541 = load half, ptr addrspace(3) %474, align 2, !dbg !26
  %1542 = load half, ptr addrspace(3) %476, align 2, !dbg !26
  %1543 = load half, ptr addrspace(3) %478, align 2, !dbg !26
  %1544 = load half, ptr addrspace(3) %480, align 2, !dbg !26
  %1545 = load half, ptr addrspace(3) %482, align 2, !dbg !26
  %1546 = load half, ptr addrspace(3) %484, align 2, !dbg !26
  %1547 = load half, ptr addrspace(3) %486, align 2, !dbg !26
  %1548 = load half, ptr addrspace(3) %488, align 2, !dbg !26
  %1549 = load half, ptr addrspace(3) %490, align 2, !dbg !26
  %1550 = load half, ptr addrspace(3) %492, align 2, !dbg !26
  %1551 = load half, ptr addrspace(3) %494, align 2, !dbg !26
  %1552 = load half, ptr addrspace(3) %496, align 2, !dbg !26
  %1553 = load half, ptr addrspace(3) %498, align 2, !dbg !26
  %1554 = load half, ptr addrspace(3) %500, align 2, !dbg !26
  %1555 = load half, ptr addrspace(3) %502, align 2, !dbg !26
  %1556 = load half, ptr addrspace(3) %504, align 2, !dbg !26
  %1557 = load half, ptr addrspace(3) %506, align 2, !dbg !26
  %1558 = load half, ptr addrspace(3) %508, align 2, !dbg !26
  %1559 = load half, ptr addrspace(3) %510, align 2, !dbg !26
  %1560 = load half, ptr addrspace(3) %512, align 2, !dbg !26
  %1561 = load half, ptr addrspace(3) %514, align 2, !dbg !26
  %1562 = load half, ptr addrspace(3) %516, align 2, !dbg !26
  %1563 = load half, ptr addrspace(3) %518, align 2, !dbg !26
  %1564 = load half, ptr addrspace(3) %520, align 2, !dbg !26
  %1565 = load half, ptr addrspace(3) %522, align 2, !dbg !26
  %1566 = load half, ptr addrspace(3) %524, align 2, !dbg !26
  %1567 = load half, ptr addrspace(3) %526, align 2, !dbg !26
  %1568 = load half, ptr addrspace(3) %528, align 2, !dbg !26
  %1569 = load half, ptr addrspace(3) %530, align 2, !dbg !26
  %1570 = load half, ptr addrspace(3) %532, align 2, !dbg !26
  %1571 = load half, ptr addrspace(3) %534, align 2, !dbg !26
  %1572 = load half, ptr addrspace(3) %536, align 2, !dbg !26
  %1573 = load half, ptr addrspace(3) %538, align 2, !dbg !26
  %1574 = load half, ptr addrspace(3) %540, align 2, !dbg !26
  %1575 = load half, ptr addrspace(3) %542, align 2, !dbg !26
  %1576 = load half, ptr addrspace(3) %544, align 2, !dbg !26
  %1577 = load half, ptr addrspace(3) %546, align 2, !dbg !26
  %1578 = load half, ptr addrspace(3) %548, align 2, !dbg !26
  %1579 = load half, ptr addrspace(3) %550, align 2, !dbg !26
  %1580 = load half, ptr addrspace(3) %552, align 2, !dbg !26
  %1581 = load half, ptr addrspace(3) %554, align 2, !dbg !26
  %1582 = load half, ptr addrspace(3) %556, align 2, !dbg !26
  fence syncscope("workgroup") release, !dbg !27
  tail call void @llvm.amdgcn.s.barrier(), !dbg !27
  fence syncscope("workgroup") acquire, !dbg !27
  %1583 = shufflevector <8 x half> %1449, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !27
  store <4 x half> %1583, ptr addrspace(3) %562, align 8, !dbg !27
  %1584 = shufflevector <8 x half> %1449, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !27
  store <4 x half> %1584, ptr addrspace(3) %568, align 8, !dbg !27
  %1585 = shufflevector <8 x half> %1454, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !27
  store <4 x half> %1585, ptr addrspace(3) %571, align 8, !dbg !27
  %1586 = shufflevector <8 x half> %1454, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !27
  store <4 x half> %1586, ptr addrspace(3) %574, align 8, !dbg !27
  %1587 = mul i64 %1436, %31, !dbg !28
  %gep286 = getelementptr half, ptr addrspace(1) %invariant.gep285, i64 %1587, !dbg !28
  br i1 %1442, label %1588, label %1592, !dbg !28

1588:                                             ; preds = %1453
  %1589 = mul i64 %1435, %31, !dbg !28
  %gep288 = getelementptr half, ptr addrspace(1) %invariant.gep285, i64 %1589, !dbg !28
  %1590 = addrspacecast ptr addrspace(1) %gep288 to ptr, !dbg !28
  %1591 = load <8 x half>, ptr %1590, align 16, !dbg !28
  br label %1592, !dbg !28

1592:                                             ; preds = %1453, %1588
  %1593 = phi <8 x half> [ %1591, %1588 ], [ zeroinitializer, %1453 ]
  br i1 %1443, label %1594, label %1597, !dbg !28

1594:                                             ; preds = %1592
  %1595 = addrspacecast ptr addrspace(1) %gep286 to ptr, !dbg !28
  %1596 = load <8 x half>, ptr %1595, align 16, !dbg !28
  br label %1597, !dbg !28

1597:                                             ; preds = %1592, %1594
  %1598 = phi <8 x half> [ %1596, %1594 ], [ zeroinitializer, %1592 ]
  %1599 = shufflevector <8 x half> %1593, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  store <4 x half> %1599, ptr addrspace(3) %575, align 8, !dbg !29
  %1600 = shufflevector <8 x half> %1593, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  store <4 x half> %1600, ptr addrspace(3) %576, align 8, !dbg !29
  %1601 = shufflevector <8 x half> %1598, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  store <4 x half> %1601, ptr addrspace(3) %577, align 8, !dbg !29
  %1602 = shufflevector <8 x half> %1598, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !29
  store <4 x half> %1602, ptr addrspace(3) %578, align 8, !dbg !29
  fence syncscope("workgroup") release, !dbg !27
  tail call void @llvm.amdgcn.s.barrier(), !dbg !27
  fence syncscope("workgroup") acquire, !dbg !27
  %1603 = load <4 x half>, ptr addrspace(3) %643, align 8, !dbg !27
  %1604 = load <4 x half>, ptr addrspace(3) %645, align 8, !dbg !27
  %1605 = load <4 x half>, ptr addrspace(3) %647, align 8, !dbg !27
  %1606 = load <4 x half>, ptr addrspace(3) %649, align 8, !dbg !27
  %1607 = load <4 x half>, ptr addrspace(3) %651, align 8, !dbg !27
  %1608 = load <4 x half>, ptr addrspace(3) %653, align 8, !dbg !27
  %1609 = load <4 x half>, ptr addrspace(3) %655, align 8, !dbg !27
  %1610 = load <4 x half>, ptr addrspace(3) %657, align 8, !dbg !27
  %1611 = load <4 x half>, ptr addrspace(3) %659, align 8, !dbg !27
  %1612 = load <4 x half>, ptr addrspace(3) %661, align 8, !dbg !27
  %1613 = load <4 x half>, ptr addrspace(3) %663, align 8, !dbg !27
  %1614 = load <4 x half>, ptr addrspace(3) %665, align 8, !dbg !27
  %1615 = load <4 x half>, ptr addrspace(3) %667, align 8, !dbg !27
  %1616 = load <4 x half>, ptr addrspace(3) %669, align 8, !dbg !27
  %1617 = load <4 x half>, ptr addrspace(3) %671, align 8, !dbg !27
  %1618 = load <4 x half>, ptr addrspace(3) %673, align 8, !dbg !27
  %1619 = load <4 x half>, ptr addrspace(3) %675, align 8, !dbg !27
  %1620 = load <4 x half>, ptr addrspace(3) %677, align 8, !dbg !27
  %1621 = load <4 x half>, ptr addrspace(3) %679, align 8, !dbg !27
  %1622 = load <4 x half>, ptr addrspace(3) %681, align 8, !dbg !27
  %1623 = load <4 x half>, ptr addrspace(3) %683, align 8, !dbg !27
  %1624 = load <4 x half>, ptr addrspace(3) %685, align 8, !dbg !27
  %1625 = load <4 x half>, ptr addrspace(3) %687, align 8, !dbg !27
  %1626 = load <4 x half>, ptr addrspace(3) %689, align 8, !dbg !27
  %1627 = load <4 x half>, ptr addrspace(3) %691, align 8, !dbg !27
  %1628 = load <4 x half>, ptr addrspace(3) %693, align 8, !dbg !27
  %1629 = load <4 x half>, ptr addrspace(3) %695, align 8, !dbg !27
  %1630 = load <4 x half>, ptr addrspace(3) %697, align 8, !dbg !27
  %1631 = load <4 x half>, ptr addrspace(3) %699, align 8, !dbg !27
  %1632 = load <4 x half>, ptr addrspace(3) %701, align 8, !dbg !27
  %1633 = load <4 x half>, ptr addrspace(3) %703, align 8, !dbg !27
  %1634 = load <4 x half>, ptr addrspace(3) %705, align 8, !dbg !27
  %1635 = load <4 x half>, ptr addrspace(3) %706, align 8, !dbg !29
  %1636 = load <4 x half>, ptr addrspace(3) %707, align 8, !dbg !29
  %1637 = load <4 x half>, ptr addrspace(3) %708, align 8, !dbg !29
  %1638 = load <4 x half>, ptr addrspace(3) %709, align 8, !dbg !29
  %1639 = load <4 x half>, ptr addrspace(3) %710, align 8, !dbg !29
  %1640 = load <4 x half>, ptr addrspace(3) %711, align 8, !dbg !29
  %1641 = load <4 x half>, ptr addrspace(3) %712, align 8, !dbg !29
  %1642 = load <4 x half>, ptr addrspace(3) %713, align 8, !dbg !29
  %1643 = load <4 x half>, ptr addrspace(3) %714, align 8, !dbg !29
  %1644 = load <4 x half>, ptr addrspace(3) %715, align 8, !dbg !29
  %1645 = load <4 x half>, ptr addrspace(3) %716, align 8, !dbg !29
  %1646 = load <4 x half>, ptr addrspace(3) %717, align 8, !dbg !29
  %1647 = load <4 x half>, ptr addrspace(3) %718, align 8, !dbg !29
  %1648 = load <4 x half>, ptr addrspace(3) %719, align 8, !dbg !29
  %1649 = load <4 x half>, ptr addrspace(3) %720, align 8, !dbg !29
  %1650 = load <4 x half>, ptr addrspace(3) %721, align 8, !dbg !29
  %1651 = load <4 x half>, ptr addrspace(3) %722, align 8, !dbg !29
  %1652 = load <4 x half>, ptr addrspace(3) %723, align 8, !dbg !29
  %1653 = load <4 x half>, ptr addrspace(3) %724, align 8, !dbg !29
  %1654 = load <4 x half>, ptr addrspace(3) %725, align 8, !dbg !29
  %1655 = load <4 x half>, ptr addrspace(3) %726, align 8, !dbg !29
  %1656 = load <4 x half>, ptr addrspace(3) %727, align 8, !dbg !29
  %1657 = load <4 x half>, ptr addrspace(3) %728, align 8, !dbg !29
  %1658 = load <4 x half>, ptr addrspace(3) %729, align 8, !dbg !29
  %1659 = load <4 x half>, ptr addrspace(3) %730, align 8, !dbg !29
  %1660 = load <4 x half>, ptr addrspace(3) %731, align 8, !dbg !29
  %1661 = load <4 x half>, ptr addrspace(3) %732, align 8, !dbg !29
  %1662 = load <4 x half>, ptr addrspace(3) %733, align 8, !dbg !29
  %1663 = load <4 x half>, ptr addrspace(3) %734, align 8, !dbg !29
  %1664 = load <4 x half>, ptr addrspace(3) %735, align 8, !dbg !29
  %1665 = load <4 x half>, ptr addrspace(3) %736, align 8, !dbg !29
  %1666 = load <4 x half>, ptr addrspace(3) %737, align 8, !dbg !29
  %1667 = icmp slt i32 %1404, %134, !dbg !30
  br i1 %1667, label %.lr.ph, label %._crit_edge, !dbg !30

.lr.ph:                                           ; preds = %1597
  %1668 = insertelement <4 x half> poison, half %1455, i64 0
  %1669 = insertelement <4 x half> %1668, half %1456, i64 1
  %1670 = insertelement <4 x half> %1669, half %1457, i64 2
  %1671 = insertelement <4 x half> %1670, half %1458, i64 3
  %1672 = insertelement <4 x half> poison, half %1459, i64 0
  %1673 = insertelement <4 x half> %1672, half %1460, i64 1
  %1674 = insertelement <4 x half> %1673, half %1461, i64 2
  %1675 = insertelement <4 x half> %1674, half %1462, i64 3
  %1676 = insertelement <4 x half> poison, half %1463, i64 0
  %1677 = insertelement <4 x half> %1676, half %1464, i64 1
  %1678 = insertelement <4 x half> %1677, half %1465, i64 2
  %1679 = insertelement <4 x half> %1678, half %1466, i64 3
  %1680 = insertelement <4 x half> poison, half %1467, i64 0
  %1681 = insertelement <4 x half> %1680, half %1468, i64 1
  %1682 = insertelement <4 x half> %1681, half %1469, i64 2
  %1683 = insertelement <4 x half> %1682, half %1470, i64 3
  %1684 = insertelement <4 x half> poison, half %1471, i64 0
  %1685 = insertelement <4 x half> %1684, half %1472, i64 1
  %1686 = insertelement <4 x half> %1685, half %1473, i64 2
  %1687 = insertelement <4 x half> %1686, half %1474, i64 3
  %1688 = insertelement <4 x half> poison, half %1475, i64 0
  %1689 = insertelement <4 x half> %1688, half %1476, i64 1
  %1690 = insertelement <4 x half> %1689, half %1477, i64 2
  %1691 = insertelement <4 x half> %1690, half %1478, i64 3
  %1692 = insertelement <4 x half> poison, half %1479, i64 0
  %1693 = insertelement <4 x half> %1692, half %1480, i64 1
  %1694 = insertelement <4 x half> %1693, half %1481, i64 2
  %1695 = insertelement <4 x half> %1694, half %1482, i64 3
  %1696 = insertelement <4 x half> poison, half %1483, i64 0
  %1697 = insertelement <4 x half> %1696, half %1484, i64 1
  %1698 = insertelement <4 x half> %1697, half %1485, i64 2
  %1699 = insertelement <4 x half> %1698, half %1486, i64 3
  %1700 = insertelement <4 x half> poison, half %1487, i64 0
  %1701 = insertelement <4 x half> %1700, half %1488, i64 1
  %1702 = insertelement <4 x half> %1701, half %1489, i64 2
  %1703 = insertelement <4 x half> %1702, half %1490, i64 3
  %1704 = insertelement <4 x half> poison, half %1491, i64 0
  %1705 = insertelement <4 x half> %1704, half %1492, i64 1
  %1706 = insertelement <4 x half> %1705, half %1493, i64 2
  %1707 = insertelement <4 x half> %1706, half %1494, i64 3
  %1708 = insertelement <4 x half> poison, half %1495, i64 0
  %1709 = insertelement <4 x half> %1708, half %1496, i64 1
  %1710 = insertelement <4 x half> %1709, half %1497, i64 2
  %1711 = insertelement <4 x half> %1710, half %1498, i64 3
  %1712 = insertelement <4 x half> poison, half %1499, i64 0
  %1713 = insertelement <4 x half> %1712, half %1500, i64 1
  %1714 = insertelement <4 x half> %1713, half %1501, i64 2
  %1715 = insertelement <4 x half> %1714, half %1502, i64 3
  %1716 = insertelement <4 x half> poison, half %1503, i64 0
  %1717 = insertelement <4 x half> %1716, half %1504, i64 1
  %1718 = insertelement <4 x half> %1717, half %1505, i64 2
  %1719 = insertelement <4 x half> %1718, half %1506, i64 3
  %1720 = insertelement <4 x half> poison, half %1507, i64 0
  %1721 = insertelement <4 x half> %1720, half %1508, i64 1
  %1722 = insertelement <4 x half> %1721, half %1509, i64 2
  %1723 = insertelement <4 x half> %1722, half %1510, i64 3
  %1724 = insertelement <4 x half> poison, half %1511, i64 0
  %1725 = insertelement <4 x half> %1724, half %1512, i64 1
  %1726 = insertelement <4 x half> %1725, half %1513, i64 2
  %1727 = insertelement <4 x half> %1726, half %1514, i64 3
  %1728 = insertelement <4 x half> poison, half %1515, i64 0
  %1729 = insertelement <4 x half> %1728, half %1516, i64 1
  %1730 = insertelement <4 x half> %1729, half %1517, i64 2
  %1731 = insertelement <4 x half> %1730, half %1518, i64 3
  %1732 = insertelement <4 x half> poison, half %1519, i64 0
  %1733 = insertelement <4 x half> %1732, half %1520, i64 1
  %1734 = insertelement <4 x half> %1733, half %1521, i64 2
  %1735 = insertelement <4 x half> %1734, half %1522, i64 3
  %1736 = insertelement <4 x half> poison, half %1523, i64 0
  %1737 = insertelement <4 x half> %1736, half %1524, i64 1
  %1738 = insertelement <4 x half> %1737, half %1525, i64 2
  %1739 = insertelement <4 x half> %1738, half %1526, i64 3
  %1740 = insertelement <4 x half> poison, half %1527, i64 0
  %1741 = insertelement <4 x half> %1740, half %1528, i64 1
  %1742 = insertelement <4 x half> %1741, half %1529, i64 2
  %1743 = insertelement <4 x half> %1742, half %1530, i64 3
  %1744 = insertelement <4 x half> poison, half %1531, i64 0
  %1745 = insertelement <4 x half> %1744, half %1532, i64 1
  %1746 = insertelement <4 x half> %1745, half %1533, i64 2
  %1747 = insertelement <4 x half> %1746, half %1534, i64 3
  %1748 = insertelement <4 x half> poison, half %1535, i64 0
  %1749 = insertelement <4 x half> %1748, half %1536, i64 1
  %1750 = insertelement <4 x half> %1749, half %1537, i64 2
  %1751 = insertelement <4 x half> %1750, half %1538, i64 3
  %1752 = insertelement <4 x half> poison, half %1539, i64 0
  %1753 = insertelement <4 x half> %1752, half %1540, i64 1
  %1754 = insertelement <4 x half> %1753, half %1541, i64 2
  %1755 = insertelement <4 x half> %1754, half %1542, i64 3
  %1756 = insertelement <4 x half> poison, half %1543, i64 0
  %1757 = insertelement <4 x half> %1756, half %1544, i64 1
  %1758 = insertelement <4 x half> %1757, half %1545, i64 2
  %1759 = insertelement <4 x half> %1758, half %1546, i64 3
  %1760 = insertelement <4 x half> poison, half %1547, i64 0
  %1761 = insertelement <4 x half> %1760, half %1548, i64 1
  %1762 = insertelement <4 x half> %1761, half %1549, i64 2
  %1763 = insertelement <4 x half> %1762, half %1550, i64 3
  %1764 = insertelement <4 x half> poison, half %1551, i64 0
  %1765 = insertelement <4 x half> %1764, half %1552, i64 1
  %1766 = insertelement <4 x half> %1765, half %1553, i64 2
  %1767 = insertelement <4 x half> %1766, half %1554, i64 3
  %1768 = insertelement <4 x half> poison, half %1555, i64 0
  %1769 = insertelement <4 x half> %1768, half %1556, i64 1
  %1770 = insertelement <4 x half> %1769, half %1557, i64 2
  %1771 = insertelement <4 x half> %1770, half %1558, i64 3
  %1772 = insertelement <4 x half> poison, half %1559, i64 0
  %1773 = insertelement <4 x half> %1772, half %1560, i64 1
  %1774 = insertelement <4 x half> %1773, half %1561, i64 2
  %1775 = insertelement <4 x half> %1774, half %1562, i64 3
  %1776 = insertelement <4 x half> poison, half %1563, i64 0
  %1777 = insertelement <4 x half> %1776, half %1564, i64 1
  %1778 = insertelement <4 x half> %1777, half %1565, i64 2
  %1779 = insertelement <4 x half> %1778, half %1566, i64 3
  %1780 = insertelement <4 x half> poison, half %1567, i64 0
  %1781 = insertelement <4 x half> %1780, half %1568, i64 1
  %1782 = insertelement <4 x half> %1781, half %1569, i64 2
  %1783 = insertelement <4 x half> %1782, half %1570, i64 3
  %1784 = insertelement <4 x half> poison, half %1571, i64 0
  %1785 = insertelement <4 x half> %1784, half %1572, i64 1
  %1786 = insertelement <4 x half> %1785, half %1573, i64 2
  %1787 = insertelement <4 x half> %1786, half %1574, i64 3
  %1788 = insertelement <4 x half> poison, half %1575, i64 0
  %1789 = insertelement <4 x half> %1788, half %1576, i64 1
  %1790 = insertelement <4 x half> %1789, half %1577, i64 2
  %1791 = insertelement <4 x half> %1790, half %1578, i64 3
  %1792 = insertelement <4 x half> poison, half %1579, i64 0
  %1793 = insertelement <4 x half> %1792, half %1580, i64 1
  %1794 = insertelement <4 x half> %1793, half %1581, i64 2
  %1795 = insertelement <4 x half> %1794, half %1582, i64 3
  br label %1796, !dbg !30

1796:                                             ; preds = %.lr.ph, %.critedge156
  %1797 = phi i64 [ %1400, %.lr.ph ], [ %3401, %.critedge156 ]
  %1798 = phi i64 [ %1401, %.lr.ph ], [ %3400, %.critedge156 ]
  %1799 = phi i64 [ %1402, %.lr.ph ], [ %3399, %.critedge156 ]
  %1800 = phi float [ 0.000000e+00, %.lr.ph ], [ %3144, %.critedge156 ]
  %1801 = phi float [ 0.000000e+00, %.lr.ph ], [ %3145, %.critedge156 ]
  %1802 = phi float [ 0.000000e+00, %.lr.ph ], [ %3146, %.critedge156 ]
  %1803 = phi float [ 0.000000e+00, %.lr.ph ], [ %3147, %.critedge156 ]
  %1804 = phi float [ 0.000000e+00, %.lr.ph ], [ %3148, %.critedge156 ]
  %1805 = phi float [ 0.000000e+00, %.lr.ph ], [ %3149, %.critedge156 ]
  %1806 = phi float [ 0.000000e+00, %.lr.ph ], [ %3150, %.critedge156 ]
  %1807 = phi float [ 0.000000e+00, %.lr.ph ], [ %3151, %.critedge156 ]
  %1808 = phi float [ 0.000000e+00, %.lr.ph ], [ %3152, %.critedge156 ]
  %1809 = phi float [ 0.000000e+00, %.lr.ph ], [ %3153, %.critedge156 ]
  %1810 = phi float [ 0.000000e+00, %.lr.ph ], [ %3154, %.critedge156 ]
  %1811 = phi float [ 0.000000e+00, %.lr.ph ], [ %3155, %.critedge156 ]
  %1812 = phi float [ 0.000000e+00, %.lr.ph ], [ %3156, %.critedge156 ]
  %1813 = phi float [ 0.000000e+00, %.lr.ph ], [ %3157, %.critedge156 ]
  %1814 = phi float [ 0.000000e+00, %.lr.ph ], [ %3158, %.critedge156 ]
  %1815 = phi float [ 0.000000e+00, %.lr.ph ], [ %3159, %.critedge156 ]
  %1816 = phi float [ 0.000000e+00, %.lr.ph ], [ %3192, %.critedge156 ]
  %1817 = phi float [ 0.000000e+00, %.lr.ph ], [ %3193, %.critedge156 ]
  %1818 = phi float [ 0.000000e+00, %.lr.ph ], [ %3194, %.critedge156 ]
  %1819 = phi float [ 0.000000e+00, %.lr.ph ], [ %3195, %.critedge156 ]
  %1820 = phi float [ 0.000000e+00, %.lr.ph ], [ %3196, %.critedge156 ]
  %1821 = phi float [ 0.000000e+00, %.lr.ph ], [ %3197, %.critedge156 ]
  %1822 = phi float [ 0.000000e+00, %.lr.ph ], [ %3198, %.critedge156 ]
  %1823 = phi float [ 0.000000e+00, %.lr.ph ], [ %3199, %.critedge156 ]
  %1824 = phi float [ 0.000000e+00, %.lr.ph ], [ %3200, %.critedge156 ]
  %1825 = phi float [ 0.000000e+00, %.lr.ph ], [ %3201, %.critedge156 ]
  %1826 = phi float [ 0.000000e+00, %.lr.ph ], [ %3202, %.critedge156 ]
  %1827 = phi float [ 0.000000e+00, %.lr.ph ], [ %3203, %.critedge156 ]
  %1828 = phi float [ 0.000000e+00, %.lr.ph ], [ %3204, %.critedge156 ]
  %1829 = phi float [ 0.000000e+00, %.lr.ph ], [ %3205, %.critedge156 ]
  %1830 = phi float [ 0.000000e+00, %.lr.ph ], [ %3206, %.critedge156 ]
  %1831 = phi float [ 0.000000e+00, %.lr.ph ], [ %3207, %.critedge156 ]
  %1832 = phi float [ 0.000000e+00, %.lr.ph ], [ %2738, %.critedge156 ]
  %1833 = phi float [ 0.000000e+00, %.lr.ph ], [ %2739, %.critedge156 ]
  %1834 = phi float [ 0.000000e+00, %.lr.ph ], [ %2740, %.critedge156 ]
  %1835 = phi float [ 0.000000e+00, %.lr.ph ], [ %2741, %.critedge156 ]
  %1836 = phi float [ 0.000000e+00, %.lr.ph ], [ %2742, %.critedge156 ]
  %1837 = phi float [ 0.000000e+00, %.lr.ph ], [ %2743, %.critedge156 ]
  %1838 = phi float [ 0.000000e+00, %.lr.ph ], [ %2744, %.critedge156 ]
  %1839 = phi float [ 0.000000e+00, %.lr.ph ], [ %2745, %.critedge156 ]
  %1840 = phi float [ 0.000000e+00, %.lr.ph ], [ %2746, %.critedge156 ]
  %1841 = phi float [ 0.000000e+00, %.lr.ph ], [ %2747, %.critedge156 ]
  %1842 = phi float [ 0.000000e+00, %.lr.ph ], [ %2748, %.critedge156 ]
  %1843 = phi float [ 0.000000e+00, %.lr.ph ], [ %2749, %.critedge156 ]
  %1844 = phi float [ 0.000000e+00, %.lr.ph ], [ %2750, %.critedge156 ]
  %1845 = phi float [ 0.000000e+00, %.lr.ph ], [ %2751, %.critedge156 ]
  %1846 = phi float [ 0.000000e+00, %.lr.ph ], [ %2752, %.critedge156 ]
  %1847 = phi float [ 0.000000e+00, %.lr.ph ], [ %2753, %.critedge156 ]
  %1848 = phi float [ 0.000000e+00, %.lr.ph ], [ %2786, %.critedge156 ]
  %1849 = phi float [ 0.000000e+00, %.lr.ph ], [ %2787, %.critedge156 ]
  %1850 = phi float [ 0.000000e+00, %.lr.ph ], [ %2788, %.critedge156 ]
  %1851 = phi float [ 0.000000e+00, %.lr.ph ], [ %2789, %.critedge156 ]
  %1852 = phi float [ 0.000000e+00, %.lr.ph ], [ %2790, %.critedge156 ]
  %1853 = phi float [ 0.000000e+00, %.lr.ph ], [ %2791, %.critedge156 ]
  %1854 = phi float [ 0.000000e+00, %.lr.ph ], [ %2792, %.critedge156 ]
  %1855 = phi float [ 0.000000e+00, %.lr.ph ], [ %2793, %.critedge156 ]
  %1856 = phi float [ 0.000000e+00, %.lr.ph ], [ %2794, %.critedge156 ]
  %1857 = phi float [ 0.000000e+00, %.lr.ph ], [ %2795, %.critedge156 ]
  %1858 = phi float [ 0.000000e+00, %.lr.ph ], [ %2796, %.critedge156 ]
  %1859 = phi float [ 0.000000e+00, %.lr.ph ], [ %2797, %.critedge156 ]
  %1860 = phi float [ 0.000000e+00, %.lr.ph ], [ %2798, %.critedge156 ]
  %1861 = phi float [ 0.000000e+00, %.lr.ph ], [ %2799, %.critedge156 ]
  %1862 = phi float [ 0.000000e+00, %.lr.ph ], [ %2800, %.critedge156 ]
  %1863 = phi float [ 0.000000e+00, %.lr.ph ], [ %2801, %.critedge156 ]
  %1864 = phi i32 [ %1404, %.lr.ph ], [ %3402, %.critedge156 ]
  %1865 = or disjoint i32 %1864, %39, !dbg !31
  %1866 = add i64 %1799, %70, !dbg !32
  %1867 = add i64 %1799, %71, !dbg !32
  %1868 = mul i64 %1867, %29, !dbg !32
  %gep = getelementptr half, ptr addrspace(1) %invariant.gep, i64 %1868, !dbg !32
  %1869 = icmp sgt i64 %1866, -1, !dbg !32
  %1870 = icmp sgt i64 %1867, -1, !dbg !32
  %1871 = icmp slt i64 %1866, %28, !dbg !32
  %1872 = icmp slt i64 %1867, %28, !dbg !32
  %1873 = and i1 %1869, %1871, !dbg !32
  %1874 = and i1 %1870, %1872, !dbg !32
  br i1 %1873, label %1875, label %1879, !dbg !32

1875:                                             ; preds = %1796
  %1876 = mul i64 %1866, %29, !dbg !32
  %gep223 = getelementptr half, ptr addrspace(1) %invariant.gep, i64 %1876, !dbg !32
  %1877 = addrspacecast ptr addrspace(1) %gep223 to ptr, !dbg !32
  %1878 = load <8 x half>, ptr %1877, align 16, !dbg !32
  br label %1879, !dbg !32

1879:                                             ; preds = %1796, %1875
  %1880 = phi <8 x half> [ %1878, %1875 ], [ zeroinitializer, %1796 ]
  br i1 %1874, label %1881, label %1884, !dbg !32

1881:                                             ; preds = %1879
  %1882 = addrspacecast ptr addrspace(1) %gep to ptr, !dbg !32
  %1883 = load <8 x half>, ptr %1882, align 16, !dbg !32
  br label %1884, !dbg !32

1884:                                             ; preds = %1879, %1881
  %1885 = phi <8 x half> [ %1883, %1881 ], [ zeroinitializer, %1879 ]
  fence syncscope("workgroup") release, !dbg !32
  tail call void @llvm.amdgcn.s.barrier(), !dbg !32
  fence syncscope("workgroup") acquire, !dbg !32
  store <8 x half> %1880, ptr addrspace(3) %167, align 16, !dbg !32
  store <8 x half> %1885, ptr addrspace(3) %171, align 16, !dbg !32
  fence syncscope("workgroup") release, !dbg !32
  tail call void @llvm.amdgcn.s.barrier(), !dbg !32
  fence syncscope("workgroup") acquire, !dbg !32
  %1886 = load half, ptr addrspace(3) %302, align 2, !dbg !32
  %1887 = load half, ptr addrspace(3) %304, align 2, !dbg !32
  %1888 = load half, ptr addrspace(3) %306, align 2, !dbg !32
  %1889 = load half, ptr addrspace(3) %308, align 2, !dbg !32
  %1890 = load half, ptr addrspace(3) %310, align 2, !dbg !32
  %1891 = load half, ptr addrspace(3) %312, align 2, !dbg !32
  %1892 = load half, ptr addrspace(3) %314, align 2, !dbg !32
  %1893 = load half, ptr addrspace(3) %316, align 2, !dbg !32
  %1894 = load half, ptr addrspace(3) %318, align 2, !dbg !32
  %1895 = load half, ptr addrspace(3) %320, align 2, !dbg !32
  %1896 = load half, ptr addrspace(3) %322, align 2, !dbg !32
  %1897 = load half, ptr addrspace(3) %324, align 2, !dbg !32
  %1898 = load half, ptr addrspace(3) %326, align 2, !dbg !32
  %1899 = load half, ptr addrspace(3) %328, align 2, !dbg !32
  %1900 = load half, ptr addrspace(3) %330, align 2, !dbg !32
  %1901 = load half, ptr addrspace(3) %332, align 2, !dbg !32
  %1902 = load half, ptr addrspace(3) %334, align 2, !dbg !32
  %1903 = load half, ptr addrspace(3) %336, align 2, !dbg !32
  %1904 = load half, ptr addrspace(3) %338, align 2, !dbg !32
  %1905 = load half, ptr addrspace(3) %340, align 2, !dbg !32
  %1906 = load half, ptr addrspace(3) %342, align 2, !dbg !32
  %1907 = load half, ptr addrspace(3) %344, align 2, !dbg !32
  %1908 = load half, ptr addrspace(3) %346, align 2, !dbg !32
  %1909 = load half, ptr addrspace(3) %348, align 2, !dbg !32
  %1910 = load half, ptr addrspace(3) %350, align 2, !dbg !32
  %1911 = load half, ptr addrspace(3) %352, align 2, !dbg !32
  %1912 = load half, ptr addrspace(3) %354, align 2, !dbg !32
  %1913 = load half, ptr addrspace(3) %356, align 2, !dbg !32
  %1914 = load half, ptr addrspace(3) %358, align 2, !dbg !32
  %1915 = load half, ptr addrspace(3) %360, align 2, !dbg !32
  %1916 = load half, ptr addrspace(3) %362, align 2, !dbg !32
  %1917 = load half, ptr addrspace(3) %364, align 2, !dbg !32
  %1918 = load half, ptr addrspace(3) %366, align 2, !dbg !32
  %1919 = load half, ptr addrspace(3) %368, align 2, !dbg !32
  %1920 = load half, ptr addrspace(3) %370, align 2, !dbg !32
  %1921 = load half, ptr addrspace(3) %372, align 2, !dbg !32
  %1922 = load half, ptr addrspace(3) %374, align 2, !dbg !32
  %1923 = load half, ptr addrspace(3) %376, align 2, !dbg !32
  %1924 = load half, ptr addrspace(3) %378, align 2, !dbg !32
  %1925 = load half, ptr addrspace(3) %380, align 2, !dbg !32
  %1926 = load half, ptr addrspace(3) %382, align 2, !dbg !32
  %1927 = load half, ptr addrspace(3) %384, align 2, !dbg !32
  %1928 = load half, ptr addrspace(3) %386, align 2, !dbg !32
  %1929 = load half, ptr addrspace(3) %388, align 2, !dbg !32
  %1930 = load half, ptr addrspace(3) %390, align 2, !dbg !32
  %1931 = load half, ptr addrspace(3) %392, align 2, !dbg !32
  %1932 = load half, ptr addrspace(3) %394, align 2, !dbg !32
  %1933 = load half, ptr addrspace(3) %396, align 2, !dbg !32
  %1934 = load half, ptr addrspace(3) %398, align 2, !dbg !32
  %1935 = load half, ptr addrspace(3) %400, align 2, !dbg !32
  %1936 = load half, ptr addrspace(3) %402, align 2, !dbg !32
  %1937 = load half, ptr addrspace(3) %404, align 2, !dbg !32
  %1938 = load half, ptr addrspace(3) %406, align 2, !dbg !32
  %1939 = load half, ptr addrspace(3) %408, align 2, !dbg !32
  %1940 = load half, ptr addrspace(3) %410, align 2, !dbg !32
  %1941 = load half, ptr addrspace(3) %412, align 2, !dbg !32
  %1942 = load half, ptr addrspace(3) %414, align 2, !dbg !32
  %1943 = load half, ptr addrspace(3) %416, align 2, !dbg !32
  %1944 = load half, ptr addrspace(3) %418, align 2, !dbg !32
  %1945 = load half, ptr addrspace(3) %420, align 2, !dbg !32
  %1946 = load half, ptr addrspace(3) %422, align 2, !dbg !32
  %1947 = load half, ptr addrspace(3) %424, align 2, !dbg !32
  %1948 = load half, ptr addrspace(3) %426, align 2, !dbg !32
  %1949 = load half, ptr addrspace(3) %428, align 2, !dbg !32
  %1950 = load half, ptr addrspace(3) %430, align 2, !dbg !32
  %1951 = load half, ptr addrspace(3) %432, align 2, !dbg !32
  %1952 = load half, ptr addrspace(3) %434, align 2, !dbg !32
  %1953 = load half, ptr addrspace(3) %436, align 2, !dbg !32
  %1954 = load half, ptr addrspace(3) %438, align 2, !dbg !32
  %1955 = load half, ptr addrspace(3) %440, align 2, !dbg !32
  %1956 = load half, ptr addrspace(3) %442, align 2, !dbg !32
  %1957 = load half, ptr addrspace(3) %444, align 2, !dbg !32
  %1958 = load half, ptr addrspace(3) %446, align 2, !dbg !32
  %1959 = load half, ptr addrspace(3) %448, align 2, !dbg !32
  %1960 = load half, ptr addrspace(3) %450, align 2, !dbg !32
  %1961 = load half, ptr addrspace(3) %452, align 2, !dbg !32
  %1962 = load half, ptr addrspace(3) %454, align 2, !dbg !32
  %1963 = load half, ptr addrspace(3) %456, align 2, !dbg !32
  %1964 = load half, ptr addrspace(3) %458, align 2, !dbg !32
  %1965 = load half, ptr addrspace(3) %460, align 2, !dbg !32
  %1966 = load half, ptr addrspace(3) %462, align 2, !dbg !32
  %1967 = load half, ptr addrspace(3) %464, align 2, !dbg !32
  %1968 = load half, ptr addrspace(3) %466, align 2, !dbg !32
  %1969 = load half, ptr addrspace(3) %468, align 2, !dbg !32
  %1970 = load half, ptr addrspace(3) %470, align 2, !dbg !32
  %1971 = load half, ptr addrspace(3) %472, align 2, !dbg !32
  %1972 = load half, ptr addrspace(3) %474, align 2, !dbg !32
  %1973 = load half, ptr addrspace(3) %476, align 2, !dbg !32
  %1974 = load half, ptr addrspace(3) %478, align 2, !dbg !32
  %1975 = load half, ptr addrspace(3) %480, align 2, !dbg !32
  %1976 = load half, ptr addrspace(3) %482, align 2, !dbg !32
  %1977 = load half, ptr addrspace(3) %484, align 2, !dbg !32
  %1978 = load half, ptr addrspace(3) %486, align 2, !dbg !32
  %1979 = load half, ptr addrspace(3) %488, align 2, !dbg !32
  %1980 = load half, ptr addrspace(3) %490, align 2, !dbg !32
  %1981 = load half, ptr addrspace(3) %492, align 2, !dbg !32
  %1982 = load half, ptr addrspace(3) %494, align 2, !dbg !32
  %1983 = load half, ptr addrspace(3) %496, align 2, !dbg !32
  %1984 = load half, ptr addrspace(3) %498, align 2, !dbg !32
  %1985 = load half, ptr addrspace(3) %500, align 2, !dbg !32
  %1986 = load half, ptr addrspace(3) %502, align 2, !dbg !32
  %1987 = load half, ptr addrspace(3) %504, align 2, !dbg !32
  %1988 = load half, ptr addrspace(3) %506, align 2, !dbg !32
  %1989 = load half, ptr addrspace(3) %508, align 2, !dbg !32
  %1990 = load half, ptr addrspace(3) %510, align 2, !dbg !32
  %1991 = load half, ptr addrspace(3) %512, align 2, !dbg !32
  %1992 = load half, ptr addrspace(3) %514, align 2, !dbg !32
  %1993 = load half, ptr addrspace(3) %516, align 2, !dbg !32
  %1994 = load half, ptr addrspace(3) %518, align 2, !dbg !32
  %1995 = load half, ptr addrspace(3) %520, align 2, !dbg !32
  %1996 = load half, ptr addrspace(3) %522, align 2, !dbg !32
  %1997 = load half, ptr addrspace(3) %524, align 2, !dbg !32
  %1998 = load half, ptr addrspace(3) %526, align 2, !dbg !32
  %1999 = load half, ptr addrspace(3) %528, align 2, !dbg !32
  %2000 = load half, ptr addrspace(3) %530, align 2, !dbg !32
  %2001 = load half, ptr addrspace(3) %532, align 2, !dbg !32
  %2002 = load half, ptr addrspace(3) %534, align 2, !dbg !32
  %2003 = load half, ptr addrspace(3) %536, align 2, !dbg !32
  %2004 = load half, ptr addrspace(3) %538, align 2, !dbg !32
  %2005 = load half, ptr addrspace(3) %540, align 2, !dbg !32
  %2006 = load half, ptr addrspace(3) %542, align 2, !dbg !32
  %2007 = load half, ptr addrspace(3) %544, align 2, !dbg !32
  %2008 = load half, ptr addrspace(3) %546, align 2, !dbg !32
  %2009 = load half, ptr addrspace(3) %548, align 2, !dbg !32
  %2010 = load half, ptr addrspace(3) %550, align 2, !dbg !32
  %2011 = load half, ptr addrspace(3) %552, align 2, !dbg !32
  %2012 = load half, ptr addrspace(3) %554, align 2, !dbg !32
  %2013 = load half, ptr addrspace(3) %556, align 2, !dbg !32
  fence syncscope("workgroup") release, !dbg !32
  tail call void @llvm.amdgcn.s.barrier(), !dbg !32
  fence syncscope("workgroup") acquire, !dbg !32
  %2014 = shufflevector <8 x half> %1880, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !32
  store <4 x half> %2014, ptr addrspace(3) %562, align 8, !dbg !32
  %2015 = shufflevector <8 x half> %1880, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !32
  store <4 x half> %2015, ptr addrspace(3) %568, align 8, !dbg !32
  %2016 = shufflevector <8 x half> %1885, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !32
  store <4 x half> %2016, ptr addrspace(3) %571, align 8, !dbg !32
  %2017 = shufflevector <8 x half> %1885, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !32
  store <4 x half> %2017, ptr addrspace(3) %574, align 8, !dbg !32
  fence syncscope("workgroup") release, !dbg !32
  tail call void @llvm.amdgcn.s.barrier(), !dbg !32
  fence syncscope("workgroup") acquire, !dbg !32
  %2018 = load <4 x half>, ptr addrspace(3) %748, align 8, !dbg !32
  %2019 = load <4 x half>, ptr addrspace(3) %750, align 8, !dbg !32
  %2020 = load <4 x half>, ptr addrspace(3) %752, align 8, !dbg !32
  %2021 = load <4 x half>, ptr addrspace(3) %754, align 8, !dbg !32
  %2022 = load <4 x half>, ptr addrspace(3) %756, align 8, !dbg !32
  %2023 = load <4 x half>, ptr addrspace(3) %758, align 8, !dbg !32
  %2024 = load <4 x half>, ptr addrspace(3) %760, align 8, !dbg !32
  %2025 = load <4 x half>, ptr addrspace(3) %762, align 8, !dbg !32
  %2026 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1603, <4 x half> %2018, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !33
  %2027 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1604, <4 x half> %2019, <16 x float> %2026, i32 0, i32 0, i32 0), !dbg !33
  %2028 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1605, <4 x half> %2020, <16 x float> %2027, i32 0, i32 0, i32 0), !dbg !33
  %2029 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1606, <4 x half> %2021, <16 x float> %2028, i32 0, i32 0, i32 0), !dbg !33
  %2030 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1607, <4 x half> %2022, <16 x float> %2029, i32 0, i32 0, i32 0), !dbg !33
  %2031 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1608, <4 x half> %2023, <16 x float> %2030, i32 0, i32 0, i32 0), !dbg !33
  %2032 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1609, <4 x half> %2024, <16 x float> %2031, i32 0, i32 0, i32 0), !dbg !33
  %2033 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1610, <4 x half> %2025, <16 x float> %2032, i32 0, i32 0, i32 0), !dbg !33
  %2034 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1611, <4 x half> %2018, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !33
  %2035 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1612, <4 x half> %2019, <16 x float> %2034, i32 0, i32 0, i32 0), !dbg !33
  %2036 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1613, <4 x half> %2020, <16 x float> %2035, i32 0, i32 0, i32 0), !dbg !33
  %2037 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1614, <4 x half> %2021, <16 x float> %2036, i32 0, i32 0, i32 0), !dbg !33
  %2038 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1615, <4 x half> %2022, <16 x float> %2037, i32 0, i32 0, i32 0), !dbg !33
  %2039 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1616, <4 x half> %2023, <16 x float> %2038, i32 0, i32 0, i32 0), !dbg !33
  %2040 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1617, <4 x half> %2024, <16 x float> %2039, i32 0, i32 0, i32 0), !dbg !33
  %2041 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1618, <4 x half> %2025, <16 x float> %2040, i32 0, i32 0, i32 0), !dbg !33
  %2042 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1619, <4 x half> %2018, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !33
  %2043 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1620, <4 x half> %2019, <16 x float> %2042, i32 0, i32 0, i32 0), !dbg !33
  %2044 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1621, <4 x half> %2020, <16 x float> %2043, i32 0, i32 0, i32 0), !dbg !33
  %2045 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1622, <4 x half> %2021, <16 x float> %2044, i32 0, i32 0, i32 0), !dbg !33
  %2046 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1623, <4 x half> %2022, <16 x float> %2045, i32 0, i32 0, i32 0), !dbg !33
  %2047 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1624, <4 x half> %2023, <16 x float> %2046, i32 0, i32 0, i32 0), !dbg !33
  %2048 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1625, <4 x half> %2024, <16 x float> %2047, i32 0, i32 0, i32 0), !dbg !33
  %2049 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1626, <4 x half> %2025, <16 x float> %2048, i32 0, i32 0, i32 0), !dbg !33
  %2050 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1627, <4 x half> %2018, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !33
  %2051 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1628, <4 x half> %2019, <16 x float> %2050, i32 0, i32 0, i32 0), !dbg !33
  %2052 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1629, <4 x half> %2020, <16 x float> %2051, i32 0, i32 0, i32 0), !dbg !33
  %2053 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1630, <4 x half> %2021, <16 x float> %2052, i32 0, i32 0, i32 0), !dbg !33
  %2054 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1631, <4 x half> %2022, <16 x float> %2053, i32 0, i32 0, i32 0), !dbg !33
  %2055 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1632, <4 x half> %2023, <16 x float> %2054, i32 0, i32 0, i32 0), !dbg !33
  %2056 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1633, <4 x half> %2024, <16 x float> %2055, i32 0, i32 0, i32 0), !dbg !33
  %2057 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1634, <4 x half> %2025, <16 x float> %2056, i32 0, i32 0, i32 0), !dbg !33
  %2058 = insertelement <4 x i32> poison, i32 %1865, i64 0, !dbg !34
  %2059 = shufflevector <4 x i32> %2058, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !34
  %2060 = icmp slt <4 x i32> %2059, %1407, !dbg !34
  %2061 = icmp slt <4 x i32> %2059, %1408, !dbg !34
  %2062 = icmp slt <4 x i32> %2059, %1409, !dbg !34
  %2063 = icmp slt <4 x i32> %2059, %1410, !dbg !34
  %2064 = icmp slt <4 x i32> %2059, %1411, !dbg !34
  %2065 = icmp slt <4 x i32> %2059, %1412, !dbg !34
  %2066 = icmp slt <4 x i32> %2059, %1413, !dbg !34
  %2067 = icmp slt <4 x i32> %2059, %1414, !dbg !34
  %2068 = icmp slt <4 x i32> %2059, %1418, !dbg !34
  %2069 = icmp slt <4 x i32> %2059, %1419, !dbg !34
  %2070 = icmp slt <4 x i32> %2059, %1423, !dbg !34
  %2071 = icmp slt <4 x i32> %2059, %1424, !dbg !34
  %2072 = icmp slt <4 x i32> %2059, %1428, !dbg !34
  %2073 = icmp slt <4 x i32> %2059, %1429, !dbg !34
  %2074 = icmp slt <4 x i32> %2059, %1433, !dbg !34
  %2075 = icmp slt <4 x i32> %2059, %1434, !dbg !34
  %2076 = sext i32 %1865 to i64, !dbg !35
  %2077 = getelementptr float, ptr addrspace(1) %68, i64 %2076, !dbg !35
  %2078 = addrspacecast ptr addrspace(1) %2077 to ptr, !dbg !36
  %2079 = load float, ptr %2078, align 4, !dbg !36
  %2080 = shufflevector <16 x float> %2033, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !37
  %2081 = select <4 x i1> %2060, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2080, !dbg !37
  %2082 = fmul <4 x float> %2081, %1397, !dbg !38
  %2083 = insertelement <4 x float> poison, float %2079, i64 0, !dbg !39
  %2084 = shufflevector <4 x float> %2083, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %2085 = fsub <4 x float> %2082, %2084, !dbg !39
  %2086 = fmul <4 x float> %2085, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2087 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2086), !dbg !40
  %2088 = shufflevector <16 x float> %2033, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !37
  %2089 = select <4 x i1> %2061, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2088, !dbg !37
  %2090 = fmul <4 x float> %2089, %1397, !dbg !38
  %2091 = fsub <4 x float> %2090, %2084, !dbg !39
  %2092 = fmul <4 x float> %2091, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2093 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2092), !dbg !40
  %2094 = shufflevector <16 x float> %2033, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !37
  %2095 = select <4 x i1> %2062, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2094, !dbg !37
  %2096 = fmul <4 x float> %2095, %1397, !dbg !38
  %2097 = fsub <4 x float> %2096, %2084, !dbg !39
  %2098 = fmul <4 x float> %2097, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2099 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2098), !dbg !40
  %2100 = shufflevector <16 x float> %2033, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !37
  %2101 = select <4 x i1> %2063, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2100, !dbg !37
  %2102 = fmul <4 x float> %2101, %1397, !dbg !38
  %2103 = fsub <4 x float> %2102, %2084, !dbg !39
  %2104 = fmul <4 x float> %2103, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2105 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2104), !dbg !40
  %2106 = shufflevector <16 x float> %2041, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !37
  %2107 = select <4 x i1> %2064, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2106, !dbg !37
  %2108 = fmul <4 x float> %2107, %1397, !dbg !38
  %2109 = fsub <4 x float> %2108, %2084, !dbg !39
  %2110 = fmul <4 x float> %2109, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2111 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2110), !dbg !40
  %2112 = shufflevector <16 x float> %2041, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !37
  %2113 = select <4 x i1> %2065, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2112, !dbg !37
  %2114 = fmul <4 x float> %2113, %1397, !dbg !38
  %2115 = fsub <4 x float> %2114, %2084, !dbg !39
  %2116 = fmul <4 x float> %2115, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2117 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2116), !dbg !40
  %2118 = shufflevector <16 x float> %2041, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !37
  %2119 = select <4 x i1> %2066, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2118, !dbg !37
  %2120 = fmul <4 x float> %2119, %1397, !dbg !38
  %2121 = fsub <4 x float> %2120, %2084, !dbg !39
  %2122 = fmul <4 x float> %2121, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2123 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2122), !dbg !40
  %2124 = shufflevector <16 x float> %2041, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !37
  %2125 = select <4 x i1> %2067, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2124, !dbg !37
  %2126 = fmul <4 x float> %2125, %1397, !dbg !38
  %2127 = fsub <4 x float> %2126, %2084, !dbg !39
  %2128 = fmul <4 x float> %2127, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2129 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2128), !dbg !40
  %2130 = shufflevector <16 x float> %2049, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !37
  %2131 = select <4 x i1> %2068, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2130, !dbg !37
  %2132 = fmul <4 x float> %2131, %1397, !dbg !38
  %2133 = fsub <4 x float> %2132, %2084, !dbg !39
  %2134 = fmul <4 x float> %2133, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2135 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2134), !dbg !40
  %2136 = shufflevector <16 x float> %2049, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !37
  %2137 = select <4 x i1> %2069, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2136, !dbg !37
  %2138 = fmul <4 x float> %2137, %1397, !dbg !38
  %2139 = fsub <4 x float> %2138, %2084, !dbg !39
  %2140 = fmul <4 x float> %2139, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2141 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2140), !dbg !40
  %2142 = shufflevector <16 x float> %2049, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !37
  %2143 = select <4 x i1> %2070, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2142, !dbg !37
  %2144 = fmul <4 x float> %2143, %1397, !dbg !38
  %2145 = fsub <4 x float> %2144, %2084, !dbg !39
  %2146 = fmul <4 x float> %2145, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2147 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2146), !dbg !40
  %2148 = shufflevector <16 x float> %2049, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !37
  %2149 = select <4 x i1> %2071, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2148, !dbg !37
  %2150 = fmul <4 x float> %2149, %1397, !dbg !38
  %2151 = fsub <4 x float> %2150, %2084, !dbg !39
  %2152 = fmul <4 x float> %2151, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2153 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2152), !dbg !40
  %2154 = shufflevector <16 x float> %2057, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !37
  %2155 = select <4 x i1> %2072, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2154, !dbg !37
  %2156 = fmul <4 x float> %2155, %1397, !dbg !38
  %2157 = fsub <4 x float> %2156, %2084, !dbg !39
  %2158 = fmul <4 x float> %2157, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2159 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2158), !dbg !40
  %2160 = shufflevector <16 x float> %2057, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !37
  %2161 = select <4 x i1> %2073, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2160, !dbg !37
  %2162 = fmul <4 x float> %2161, %1397, !dbg !38
  %2163 = fsub <4 x float> %2162, %2084, !dbg !39
  %2164 = fmul <4 x float> %2163, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2165 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2164), !dbg !40
  %2166 = shufflevector <16 x float> %2057, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !37
  %2167 = select <4 x i1> %2074, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2166, !dbg !37
  %2168 = fmul <4 x float> %2167, %1397, !dbg !38
  %2169 = fsub <4 x float> %2168, %2084, !dbg !39
  %2170 = fmul <4 x float> %2169, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2171 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2170), !dbg !40
  %2172 = shufflevector <16 x float> %2057, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !37
  %2173 = select <4 x i1> %2075, <4 x float> <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, <4 x float> %2172, !dbg !37
  %2174 = fmul <4 x float> %2173, %1397, !dbg !38
  %2175 = fsub <4 x float> %2174, %2084, !dbg !39
  %2176 = fmul <4 x float> %2175, <float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000, float 0x3FF7154760000000>, !dbg !40
  %2177 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %2176), !dbg !40
  %2178 = add i64 %1798, %70, !dbg !41
  %2179 = add i64 %1798, %71, !dbg !41
  %2180 = mul i64 %2179, %29, !dbg !41
  %gep225 = getelementptr half, ptr addrspace(1) %invariant.gep224, i64 %2180, !dbg !41
  %2181 = icmp sgt i64 %2178, -1, !dbg !41
  %2182 = icmp sgt i64 %2179, -1, !dbg !41
  %2183 = icmp slt i64 %2178, %28, !dbg !41
  %2184 = icmp slt i64 %2179, %28, !dbg !41
  %2185 = and i1 %2181, %2183, !dbg !41
  %2186 = and i1 %2182, %2184, !dbg !41
  br i1 %2185, label %2187, label %2191, !dbg !41

2187:                                             ; preds = %1884
  %2188 = mul i64 %2178, %29, !dbg !41
  %gep227 = getelementptr half, ptr addrspace(1) %invariant.gep224, i64 %2188, !dbg !41
  %2189 = addrspacecast ptr addrspace(1) %gep227 to ptr, !dbg !41
  %2190 = load <8 x half>, ptr %2189, align 16, !dbg !41
  br label %2191, !dbg !41

2191:                                             ; preds = %1884, %2187
  %2192 = phi <8 x half> [ %2190, %2187 ], [ zeroinitializer, %1884 ]
  br i1 %2186, label %2193, label %2196, !dbg !41

2193:                                             ; preds = %2191
  %2194 = addrspacecast ptr addrspace(1) %gep225 to ptr, !dbg !41
  %2195 = load <8 x half>, ptr %2194, align 16, !dbg !41
  br label %2196, !dbg !41

2196:                                             ; preds = %2191, %2193
  %2197 = phi <8 x half> [ %2195, %2193 ], [ zeroinitializer, %2191 ]
  fence syncscope("workgroup") release, !dbg !41
  tail call void @llvm.amdgcn.s.barrier(), !dbg !41
  fence syncscope("workgroup") acquire, !dbg !41
  %2198 = shufflevector <8 x half> %2192, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !41
  store <4 x half> %2198, ptr addrspace(3) %562, align 8, !dbg !41
  %2199 = shufflevector <8 x half> %2192, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !41
  store <4 x half> %2199, ptr addrspace(3) %568, align 8, !dbg !41
  %2200 = shufflevector <8 x half> %2197, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !41
  store <4 x half> %2200, ptr addrspace(3) %571, align 8, !dbg !41
  %2201 = shufflevector <8 x half> %2197, <8 x half> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !41
  store <4 x half> %2201, ptr addrspace(3) %574, align 8, !dbg !41
  fence syncscope("workgroup") release, !dbg !41
  tail call void @llvm.amdgcn.s.barrier(), !dbg !41
  fence syncscope("workgroup") acquire, !dbg !41
  %2202 = load <4 x half>, ptr addrspace(3) %748, align 8, !dbg !41
  %2203 = load <4 x half>, ptr addrspace(3) %750, align 8, !dbg !41
  %2204 = load <4 x half>, ptr addrspace(3) %752, align 8, !dbg !41
  %2205 = load <4 x half>, ptr addrspace(3) %754, align 8, !dbg !41
  %2206 = load <4 x half>, ptr addrspace(3) %756, align 8, !dbg !41
  %2207 = load <4 x half>, ptr addrspace(3) %758, align 8, !dbg !41
  %2208 = load <4 x half>, ptr addrspace(3) %760, align 8, !dbg !41
  %2209 = load <4 x half>, ptr addrspace(3) %762, align 8, !dbg !41
  fence syncscope("workgroup") release, !dbg !41
  tail call void @llvm.amdgcn.s.barrier(), !dbg !41
  fence syncscope("workgroup") acquire, !dbg !41
  store <8 x half> %2192, ptr addrspace(3) %167, align 16, !dbg !41
  store <8 x half> %2197, ptr addrspace(3) %171, align 16, !dbg !41
  fence syncscope("workgroup") release, !dbg !41
  tail call void @llvm.amdgcn.s.barrier(), !dbg !41
  fence syncscope("workgroup") acquire, !dbg !41
  %2210 = load <1 x half>, ptr addrspace(3) %302, align 2, !dbg !41
  %2211 = load <1 x half>, ptr addrspace(3) %304, align 2, !dbg !41
  %2212 = load <1 x half>, ptr addrspace(3) %306, align 2, !dbg !41
  %2213 = shufflevector <1 x half> %2212, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2214 = load <1 x half>, ptr addrspace(3) %308, align 2, !dbg !41
  %2215 = shufflevector <1 x half> %2214, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2216 = load <1 x half>, ptr addrspace(3) %310, align 2, !dbg !41
  %2217 = load <1 x half>, ptr addrspace(3) %312, align 2, !dbg !41
  %2218 = load <1 x half>, ptr addrspace(3) %314, align 2, !dbg !41
  %2219 = shufflevector <1 x half> %2218, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2220 = load <1 x half>, ptr addrspace(3) %316, align 2, !dbg !41
  %2221 = shufflevector <1 x half> %2220, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2222 = load <1 x half>, ptr addrspace(3) %318, align 2, !dbg !41
  %2223 = load <1 x half>, ptr addrspace(3) %320, align 2, !dbg !41
  %2224 = load <1 x half>, ptr addrspace(3) %322, align 2, !dbg !41
  %2225 = shufflevector <1 x half> %2224, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2226 = load <1 x half>, ptr addrspace(3) %324, align 2, !dbg !41
  %2227 = shufflevector <1 x half> %2226, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2228 = load <1 x half>, ptr addrspace(3) %326, align 2, !dbg !41
  %2229 = load <1 x half>, ptr addrspace(3) %328, align 2, !dbg !41
  %2230 = load <1 x half>, ptr addrspace(3) %330, align 2, !dbg !41
  %2231 = shufflevector <1 x half> %2230, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2232 = load <1 x half>, ptr addrspace(3) %332, align 2, !dbg !41
  %2233 = shufflevector <1 x half> %2232, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2234 = load <1 x half>, ptr addrspace(3) %334, align 2, !dbg !41
  %2235 = load <1 x half>, ptr addrspace(3) %336, align 2, !dbg !41
  %2236 = load <1 x half>, ptr addrspace(3) %338, align 2, !dbg !41
  %2237 = shufflevector <1 x half> %2236, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2238 = load <1 x half>, ptr addrspace(3) %340, align 2, !dbg !41
  %2239 = shufflevector <1 x half> %2238, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2240 = load <1 x half>, ptr addrspace(3) %342, align 2, !dbg !41
  %2241 = load <1 x half>, ptr addrspace(3) %344, align 2, !dbg !41
  %2242 = load <1 x half>, ptr addrspace(3) %346, align 2, !dbg !41
  %2243 = shufflevector <1 x half> %2242, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2244 = load <1 x half>, ptr addrspace(3) %348, align 2, !dbg !41
  %2245 = shufflevector <1 x half> %2244, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2246 = load <1 x half>, ptr addrspace(3) %350, align 2, !dbg !41
  %2247 = load <1 x half>, ptr addrspace(3) %352, align 2, !dbg !41
  %2248 = load <1 x half>, ptr addrspace(3) %354, align 2, !dbg !41
  %2249 = shufflevector <1 x half> %2248, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2250 = load <1 x half>, ptr addrspace(3) %356, align 2, !dbg !41
  %2251 = shufflevector <1 x half> %2250, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2252 = load <1 x half>, ptr addrspace(3) %358, align 2, !dbg !41
  %2253 = load <1 x half>, ptr addrspace(3) %360, align 2, !dbg !41
  %2254 = load <1 x half>, ptr addrspace(3) %362, align 2, !dbg !41
  %2255 = shufflevector <1 x half> %2254, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2256 = load <1 x half>, ptr addrspace(3) %364, align 2, !dbg !41
  %2257 = shufflevector <1 x half> %2256, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2258 = load <1 x half>, ptr addrspace(3) %366, align 2, !dbg !41
  %2259 = load <1 x half>, ptr addrspace(3) %368, align 2, !dbg !41
  %2260 = load <1 x half>, ptr addrspace(3) %370, align 2, !dbg !41
  %2261 = shufflevector <1 x half> %2260, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2262 = load <1 x half>, ptr addrspace(3) %372, align 2, !dbg !41
  %2263 = shufflevector <1 x half> %2262, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2264 = load <1 x half>, ptr addrspace(3) %374, align 2, !dbg !41
  %2265 = load <1 x half>, ptr addrspace(3) %376, align 2, !dbg !41
  %2266 = load <1 x half>, ptr addrspace(3) %378, align 2, !dbg !41
  %2267 = shufflevector <1 x half> %2266, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2268 = load <1 x half>, ptr addrspace(3) %380, align 2, !dbg !41
  %2269 = shufflevector <1 x half> %2268, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2270 = load <1 x half>, ptr addrspace(3) %382, align 2, !dbg !41
  %2271 = load <1 x half>, ptr addrspace(3) %384, align 2, !dbg !41
  %2272 = load <1 x half>, ptr addrspace(3) %386, align 2, !dbg !41
  %2273 = shufflevector <1 x half> %2272, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2274 = load <1 x half>, ptr addrspace(3) %388, align 2, !dbg !41
  %2275 = shufflevector <1 x half> %2274, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2276 = load <1 x half>, ptr addrspace(3) %390, align 2, !dbg !41
  %2277 = load <1 x half>, ptr addrspace(3) %392, align 2, !dbg !41
  %2278 = load <1 x half>, ptr addrspace(3) %394, align 2, !dbg !41
  %2279 = shufflevector <1 x half> %2278, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2280 = load <1 x half>, ptr addrspace(3) %396, align 2, !dbg !41
  %2281 = shufflevector <1 x half> %2280, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2282 = load <1 x half>, ptr addrspace(3) %398, align 2, !dbg !41
  %2283 = load <1 x half>, ptr addrspace(3) %400, align 2, !dbg !41
  %2284 = load <1 x half>, ptr addrspace(3) %402, align 2, !dbg !41
  %2285 = shufflevector <1 x half> %2284, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2286 = load <1 x half>, ptr addrspace(3) %404, align 2, !dbg !41
  %2287 = shufflevector <1 x half> %2286, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2288 = load <1 x half>, ptr addrspace(3) %406, align 2, !dbg !41
  %2289 = load <1 x half>, ptr addrspace(3) %408, align 2, !dbg !41
  %2290 = load <1 x half>, ptr addrspace(3) %410, align 2, !dbg !41
  %2291 = shufflevector <1 x half> %2290, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2292 = load <1 x half>, ptr addrspace(3) %412, align 2, !dbg !41
  %2293 = shufflevector <1 x half> %2292, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2294 = load <1 x half>, ptr addrspace(3) %414, align 2, !dbg !41
  %2295 = load <1 x half>, ptr addrspace(3) %416, align 2, !dbg !41
  %2296 = load <1 x half>, ptr addrspace(3) %418, align 2, !dbg !41
  %2297 = shufflevector <1 x half> %2296, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2298 = load <1 x half>, ptr addrspace(3) %420, align 2, !dbg !41
  %2299 = shufflevector <1 x half> %2298, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2300 = load <1 x half>, ptr addrspace(3) %422, align 2, !dbg !41
  %2301 = load <1 x half>, ptr addrspace(3) %424, align 2, !dbg !41
  %2302 = load <1 x half>, ptr addrspace(3) %426, align 2, !dbg !41
  %2303 = shufflevector <1 x half> %2302, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2304 = load <1 x half>, ptr addrspace(3) %428, align 2, !dbg !41
  %2305 = shufflevector <1 x half> %2304, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2306 = load <1 x half>, ptr addrspace(3) %430, align 2, !dbg !41
  %2307 = load <1 x half>, ptr addrspace(3) %432, align 2, !dbg !41
  %2308 = load <1 x half>, ptr addrspace(3) %434, align 2, !dbg !41
  %2309 = shufflevector <1 x half> %2308, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2310 = load <1 x half>, ptr addrspace(3) %436, align 2, !dbg !41
  %2311 = shufflevector <1 x half> %2310, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2312 = load <1 x half>, ptr addrspace(3) %438, align 2, !dbg !41
  %2313 = load <1 x half>, ptr addrspace(3) %440, align 2, !dbg !41
  %2314 = load <1 x half>, ptr addrspace(3) %442, align 2, !dbg !41
  %2315 = shufflevector <1 x half> %2314, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2316 = load <1 x half>, ptr addrspace(3) %444, align 2, !dbg !41
  %2317 = shufflevector <1 x half> %2316, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2318 = load <1 x half>, ptr addrspace(3) %446, align 2, !dbg !41
  %2319 = load <1 x half>, ptr addrspace(3) %448, align 2, !dbg !41
  %2320 = load <1 x half>, ptr addrspace(3) %450, align 2, !dbg !41
  %2321 = shufflevector <1 x half> %2320, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2322 = load <1 x half>, ptr addrspace(3) %452, align 2, !dbg !41
  %2323 = shufflevector <1 x half> %2322, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2324 = load <1 x half>, ptr addrspace(3) %454, align 2, !dbg !41
  %2325 = load <1 x half>, ptr addrspace(3) %456, align 2, !dbg !41
  %2326 = load <1 x half>, ptr addrspace(3) %458, align 2, !dbg !41
  %2327 = shufflevector <1 x half> %2326, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2328 = load <1 x half>, ptr addrspace(3) %460, align 2, !dbg !41
  %2329 = shufflevector <1 x half> %2328, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2330 = load <1 x half>, ptr addrspace(3) %462, align 2, !dbg !41
  %2331 = load <1 x half>, ptr addrspace(3) %464, align 2, !dbg !41
  %2332 = load <1 x half>, ptr addrspace(3) %466, align 2, !dbg !41
  %2333 = shufflevector <1 x half> %2332, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2334 = load <1 x half>, ptr addrspace(3) %468, align 2, !dbg !41
  %2335 = shufflevector <1 x half> %2334, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2336 = load <1 x half>, ptr addrspace(3) %470, align 2, !dbg !41
  %2337 = load <1 x half>, ptr addrspace(3) %472, align 2, !dbg !41
  %2338 = load <1 x half>, ptr addrspace(3) %474, align 2, !dbg !41
  %2339 = shufflevector <1 x half> %2338, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2340 = load <1 x half>, ptr addrspace(3) %476, align 2, !dbg !41
  %2341 = shufflevector <1 x half> %2340, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2342 = load <1 x half>, ptr addrspace(3) %478, align 2, !dbg !41
  %2343 = load <1 x half>, ptr addrspace(3) %480, align 2, !dbg !41
  %2344 = load <1 x half>, ptr addrspace(3) %482, align 2, !dbg !41
  %2345 = shufflevector <1 x half> %2344, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2346 = load <1 x half>, ptr addrspace(3) %484, align 2, !dbg !41
  %2347 = shufflevector <1 x half> %2346, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2348 = load <1 x half>, ptr addrspace(3) %486, align 2, !dbg !41
  %2349 = load <1 x half>, ptr addrspace(3) %488, align 2, !dbg !41
  %2350 = load <1 x half>, ptr addrspace(3) %490, align 2, !dbg !41
  %2351 = shufflevector <1 x half> %2350, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2352 = load <1 x half>, ptr addrspace(3) %492, align 2, !dbg !41
  %2353 = shufflevector <1 x half> %2352, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2354 = load <1 x half>, ptr addrspace(3) %494, align 2, !dbg !41
  %2355 = load <1 x half>, ptr addrspace(3) %496, align 2, !dbg !41
  %2356 = load <1 x half>, ptr addrspace(3) %498, align 2, !dbg !41
  %2357 = shufflevector <1 x half> %2356, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2358 = load <1 x half>, ptr addrspace(3) %500, align 2, !dbg !41
  %2359 = shufflevector <1 x half> %2358, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2360 = load <1 x half>, ptr addrspace(3) %502, align 2, !dbg !41
  %2361 = load <1 x half>, ptr addrspace(3) %504, align 2, !dbg !41
  %2362 = load <1 x half>, ptr addrspace(3) %506, align 2, !dbg !41
  %2363 = shufflevector <1 x half> %2362, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2364 = load <1 x half>, ptr addrspace(3) %508, align 2, !dbg !41
  %2365 = shufflevector <1 x half> %2364, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2366 = load <1 x half>, ptr addrspace(3) %510, align 2, !dbg !41
  %2367 = load <1 x half>, ptr addrspace(3) %512, align 2, !dbg !41
  %2368 = load <1 x half>, ptr addrspace(3) %514, align 2, !dbg !41
  %2369 = shufflevector <1 x half> %2368, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2370 = load <1 x half>, ptr addrspace(3) %516, align 2, !dbg !41
  %2371 = shufflevector <1 x half> %2370, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2372 = load <1 x half>, ptr addrspace(3) %518, align 2, !dbg !41
  %2373 = load <1 x half>, ptr addrspace(3) %520, align 2, !dbg !41
  %2374 = load <1 x half>, ptr addrspace(3) %522, align 2, !dbg !41
  %2375 = shufflevector <1 x half> %2374, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2376 = load <1 x half>, ptr addrspace(3) %524, align 2, !dbg !41
  %2377 = shufflevector <1 x half> %2376, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2378 = load <1 x half>, ptr addrspace(3) %526, align 2, !dbg !41
  %2379 = load <1 x half>, ptr addrspace(3) %528, align 2, !dbg !41
  %2380 = load <1 x half>, ptr addrspace(3) %530, align 2, !dbg !41
  %2381 = shufflevector <1 x half> %2380, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2382 = load <1 x half>, ptr addrspace(3) %532, align 2, !dbg !41
  %2383 = shufflevector <1 x half> %2382, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2384 = load <1 x half>, ptr addrspace(3) %534, align 2, !dbg !41
  %2385 = load <1 x half>, ptr addrspace(3) %536, align 2, !dbg !41
  %2386 = load <1 x half>, ptr addrspace(3) %538, align 2, !dbg !41
  %2387 = shufflevector <1 x half> %2386, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2388 = load <1 x half>, ptr addrspace(3) %540, align 2, !dbg !41
  %2389 = shufflevector <1 x half> %2388, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2390 = load <1 x half>, ptr addrspace(3) %542, align 2, !dbg !41
  %2391 = load <1 x half>, ptr addrspace(3) %544, align 2, !dbg !41
  %2392 = load <1 x half>, ptr addrspace(3) %546, align 2, !dbg !41
  %2393 = shufflevector <1 x half> %2392, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2394 = load <1 x half>, ptr addrspace(3) %548, align 2, !dbg !41
  %2395 = shufflevector <1 x half> %2394, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2396 = load <1 x half>, ptr addrspace(3) %550, align 2, !dbg !41
  %2397 = load <1 x half>, ptr addrspace(3) %552, align 2, !dbg !41
  %2398 = load <1 x half>, ptr addrspace(3) %554, align 2, !dbg !41
  %2399 = shufflevector <1 x half> %2398, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2400 = load <1 x half>, ptr addrspace(3) %556, align 2, !dbg !41
  %2401 = shufflevector <1 x half> %2400, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %2402 = extractelement <4 x float> %2087, i64 0, !dbg !42
  %2403 = fptrunc float %2402 to half, !dbg !42
  %2404 = extractelement <4 x float> %2087, i64 1, !dbg !42
  %2405 = fptrunc float %2404 to half, !dbg !42
  %2406 = extractelement <4 x float> %2087, i64 2, !dbg !42
  %2407 = fptrunc float %2406 to half, !dbg !42
  %2408 = extractelement <4 x float> %2087, i64 3, !dbg !42
  %2409 = fptrunc float %2408 to half, !dbg !42
  %2410 = extractelement <4 x float> %2093, i64 0, !dbg !42
  %2411 = fptrunc float %2410 to half, !dbg !42
  %2412 = extractelement <4 x float> %2093, i64 1, !dbg !42
  %2413 = fptrunc float %2412 to half, !dbg !42
  %2414 = extractelement <4 x float> %2093, i64 2, !dbg !42
  %2415 = fptrunc float %2414 to half, !dbg !42
  %2416 = extractelement <4 x float> %2093, i64 3, !dbg !42
  %2417 = fptrunc float %2416 to half, !dbg !42
  %2418 = extractelement <4 x float> %2099, i64 0, !dbg !42
  %2419 = fptrunc float %2418 to half, !dbg !42
  %2420 = extractelement <4 x float> %2099, i64 1, !dbg !42
  %2421 = fptrunc float %2420 to half, !dbg !42
  %2422 = extractelement <4 x float> %2099, i64 2, !dbg !42
  %2423 = fptrunc float %2422 to half, !dbg !42
  %2424 = extractelement <4 x float> %2099, i64 3, !dbg !42
  %2425 = fptrunc float %2424 to half, !dbg !42
  %2426 = extractelement <4 x float> %2105, i64 0, !dbg !42
  %2427 = fptrunc float %2426 to half, !dbg !42
  %2428 = extractelement <4 x float> %2105, i64 1, !dbg !42
  %2429 = fptrunc float %2428 to half, !dbg !42
  %2430 = extractelement <4 x float> %2105, i64 2, !dbg !42
  %2431 = fptrunc float %2430 to half, !dbg !42
  %2432 = extractelement <4 x float> %2105, i64 3, !dbg !42
  %2433 = fptrunc float %2432 to half, !dbg !42
  %2434 = extractelement <4 x float> %2111, i64 0, !dbg !42
  %2435 = fptrunc float %2434 to half, !dbg !42
  %2436 = extractelement <4 x float> %2111, i64 1, !dbg !42
  %2437 = fptrunc float %2436 to half, !dbg !42
  %2438 = extractelement <4 x float> %2111, i64 2, !dbg !42
  %2439 = fptrunc float %2438 to half, !dbg !42
  %2440 = extractelement <4 x float> %2111, i64 3, !dbg !42
  %2441 = fptrunc float %2440 to half, !dbg !42
  %2442 = extractelement <4 x float> %2117, i64 0, !dbg !42
  %2443 = fptrunc float %2442 to half, !dbg !42
  %2444 = extractelement <4 x float> %2117, i64 1, !dbg !42
  %2445 = fptrunc float %2444 to half, !dbg !42
  %2446 = extractelement <4 x float> %2117, i64 2, !dbg !42
  %2447 = fptrunc float %2446 to half, !dbg !42
  %2448 = extractelement <4 x float> %2117, i64 3, !dbg !42
  %2449 = fptrunc float %2448 to half, !dbg !42
  %2450 = extractelement <4 x float> %2123, i64 0, !dbg !42
  %2451 = fptrunc float %2450 to half, !dbg !42
  %2452 = extractelement <4 x float> %2123, i64 1, !dbg !42
  %2453 = fptrunc float %2452 to half, !dbg !42
  %2454 = extractelement <4 x float> %2123, i64 2, !dbg !42
  %2455 = fptrunc float %2454 to half, !dbg !42
  %2456 = extractelement <4 x float> %2123, i64 3, !dbg !42
  %2457 = fptrunc float %2456 to half, !dbg !42
  %2458 = extractelement <4 x float> %2129, i64 0, !dbg !42
  %2459 = fptrunc float %2458 to half, !dbg !42
  %2460 = extractelement <4 x float> %2129, i64 1, !dbg !42
  %2461 = fptrunc float %2460 to half, !dbg !42
  %2462 = extractelement <4 x float> %2129, i64 2, !dbg !42
  %2463 = fptrunc float %2462 to half, !dbg !42
  %2464 = extractelement <4 x float> %2129, i64 3, !dbg !42
  %2465 = fptrunc float %2464 to half, !dbg !42
  %2466 = extractelement <4 x float> %2135, i64 0, !dbg !42
  %2467 = fptrunc float %2466 to half, !dbg !42
  %2468 = extractelement <4 x float> %2135, i64 1, !dbg !42
  %2469 = fptrunc float %2468 to half, !dbg !42
  %2470 = extractelement <4 x float> %2135, i64 2, !dbg !42
  %2471 = fptrunc float %2470 to half, !dbg !42
  %2472 = extractelement <4 x float> %2135, i64 3, !dbg !42
  %2473 = fptrunc float %2472 to half, !dbg !42
  %2474 = extractelement <4 x float> %2141, i64 0, !dbg !42
  %2475 = fptrunc float %2474 to half, !dbg !42
  %2476 = extractelement <4 x float> %2141, i64 1, !dbg !42
  %2477 = fptrunc float %2476 to half, !dbg !42
  %2478 = extractelement <4 x float> %2141, i64 2, !dbg !42
  %2479 = fptrunc float %2478 to half, !dbg !42
  %2480 = extractelement <4 x float> %2141, i64 3, !dbg !42
  %2481 = fptrunc float %2480 to half, !dbg !42
  %2482 = extractelement <4 x float> %2147, i64 0, !dbg !42
  %2483 = fptrunc float %2482 to half, !dbg !42
  %2484 = extractelement <4 x float> %2147, i64 1, !dbg !42
  %2485 = fptrunc float %2484 to half, !dbg !42
  %2486 = extractelement <4 x float> %2147, i64 2, !dbg !42
  %2487 = fptrunc float %2486 to half, !dbg !42
  %2488 = extractelement <4 x float> %2147, i64 3, !dbg !42
  %2489 = fptrunc float %2488 to half, !dbg !42
  %2490 = extractelement <4 x float> %2153, i64 0, !dbg !42
  %2491 = fptrunc float %2490 to half, !dbg !42
  %2492 = extractelement <4 x float> %2153, i64 1, !dbg !42
  %2493 = fptrunc float %2492 to half, !dbg !42
  %2494 = extractelement <4 x float> %2153, i64 2, !dbg !42
  %2495 = fptrunc float %2494 to half, !dbg !42
  %2496 = extractelement <4 x float> %2153, i64 3, !dbg !42
  %2497 = fptrunc float %2496 to half, !dbg !42
  %2498 = extractelement <4 x float> %2159, i64 0, !dbg !42
  %2499 = fptrunc float %2498 to half, !dbg !42
  %2500 = extractelement <4 x float> %2159, i64 1, !dbg !42
  %2501 = fptrunc float %2500 to half, !dbg !42
  %2502 = extractelement <4 x float> %2159, i64 2, !dbg !42
  %2503 = fptrunc float %2502 to half, !dbg !42
  %2504 = extractelement <4 x float> %2159, i64 3, !dbg !42
  %2505 = fptrunc float %2504 to half, !dbg !42
  %2506 = extractelement <4 x float> %2165, i64 0, !dbg !42
  %2507 = fptrunc float %2506 to half, !dbg !42
  %2508 = extractelement <4 x float> %2165, i64 1, !dbg !42
  %2509 = fptrunc float %2508 to half, !dbg !42
  %2510 = extractelement <4 x float> %2165, i64 2, !dbg !42
  %2511 = fptrunc float %2510 to half, !dbg !42
  %2512 = extractelement <4 x float> %2165, i64 3, !dbg !42
  %2513 = fptrunc float %2512 to half, !dbg !42
  %2514 = extractelement <4 x float> %2171, i64 0, !dbg !42
  %2515 = fptrunc float %2514 to half, !dbg !42
  %2516 = extractelement <4 x float> %2171, i64 1, !dbg !42
  %2517 = fptrunc float %2516 to half, !dbg !42
  %2518 = extractelement <4 x float> %2171, i64 2, !dbg !42
  %2519 = fptrunc float %2518 to half, !dbg !42
  %2520 = extractelement <4 x float> %2171, i64 3, !dbg !42
  %2521 = fptrunc float %2520 to half, !dbg !42
  %2522 = extractelement <4 x float> %2177, i64 0, !dbg !42
  %2523 = fptrunc float %2522 to half, !dbg !42
  %2524 = extractelement <4 x float> %2177, i64 1, !dbg !42
  %2525 = fptrunc float %2524 to half, !dbg !42
  %2526 = extractelement <4 x float> %2177, i64 2, !dbg !42
  %2527 = fptrunc float %2526 to half, !dbg !42
  %2528 = extractelement <4 x float> %2177, i64 3, !dbg !42
  %2529 = fptrunc float %2528 to half, !dbg !42
  fence syncscope("workgroup") release, !dbg !43
  tail call void @llvm.amdgcn.s.barrier(), !dbg !43
  fence syncscope("workgroup") acquire, !dbg !43
  %2530 = insertelement <1 x half> poison, half %2403, i64 0, !dbg !43
  store <1 x half> %2530, ptr addrspace(3) %771, align 2, !dbg !43
  %2531 = insertelement <1 x half> poison, half %2405, i64 0, !dbg !43
  store <1 x half> %2531, ptr addrspace(3) %778, align 2, !dbg !43
  %2532 = insertelement <1 x half> poison, half %2407, i64 0, !dbg !43
  store <1 x half> %2532, ptr addrspace(3) %785, align 2, !dbg !43
  %2533 = insertelement <1 x half> poison, half %2409, i64 0, !dbg !43
  store <1 x half> %2533, ptr addrspace(3) %792, align 2, !dbg !43
  %2534 = insertelement <1 x half> poison, half %2411, i64 0, !dbg !43
  store <1 x half> %2534, ptr addrspace(3) %799, align 2, !dbg !43
  %2535 = insertelement <1 x half> poison, half %2413, i64 0, !dbg !43
  store <1 x half> %2535, ptr addrspace(3) %806, align 2, !dbg !43
  %2536 = insertelement <1 x half> poison, half %2415, i64 0, !dbg !43
  store <1 x half> %2536, ptr addrspace(3) %813, align 2, !dbg !43
  %2537 = insertelement <1 x half> poison, half %2417, i64 0, !dbg !43
  store <1 x half> %2537, ptr addrspace(3) %820, align 2, !dbg !43
  %2538 = insertelement <1 x half> poison, half %2419, i64 0, !dbg !43
  store <1 x half> %2538, ptr addrspace(3) %821, align 2, !dbg !43
  %2539 = insertelement <1 x half> poison, half %2421, i64 0, !dbg !43
  store <1 x half> %2539, ptr addrspace(3) %gep228, align 2, !dbg !43
  %2540 = insertelement <1 x half> poison, half %2423, i64 0, !dbg !43
  store <1 x half> %2540, ptr addrspace(3) %gep229, align 2, !dbg !43
  %2541 = insertelement <1 x half> poison, half %2425, i64 0, !dbg !43
  store <1 x half> %2541, ptr addrspace(3) %gep230, align 2, !dbg !43
  %2542 = insertelement <1 x half> poison, half %2427, i64 0, !dbg !43
  store <1 x half> %2542, ptr addrspace(3) %gep231, align 2, !dbg !43
  %2543 = insertelement <1 x half> poison, half %2429, i64 0, !dbg !43
  store <1 x half> %2543, ptr addrspace(3) %gep232, align 2, !dbg !43
  %2544 = insertelement <1 x half> poison, half %2431, i64 0, !dbg !43
  store <1 x half> %2544, ptr addrspace(3) %gep233, align 2, !dbg !43
  %2545 = insertelement <1 x half> poison, half %2433, i64 0, !dbg !43
  store <1 x half> %2545, ptr addrspace(3) %gep234, align 2, !dbg !43
  %2546 = insertelement <1 x half> poison, half %2435, i64 0, !dbg !43
  store <1 x half> %2546, ptr addrspace(3) %864, align 2, !dbg !43
  %2547 = insertelement <1 x half> poison, half %2437, i64 0, !dbg !43
  store <1 x half> %2547, ptr addrspace(3) %gep235, align 2, !dbg !43
  %2548 = insertelement <1 x half> poison, half %2439, i64 0, !dbg !43
  store <1 x half> %2548, ptr addrspace(3) %gep236, align 2, !dbg !43
  %2549 = insertelement <1 x half> poison, half %2441, i64 0, !dbg !43
  store <1 x half> %2549, ptr addrspace(3) %gep237, align 2, !dbg !43
  %2550 = insertelement <1 x half> poison, half %2443, i64 0, !dbg !43
  store <1 x half> %2550, ptr addrspace(3) %gep238, align 2, !dbg !43
  %2551 = insertelement <1 x half> poison, half %2445, i64 0, !dbg !43
  store <1 x half> %2551, ptr addrspace(3) %gep239, align 2, !dbg !43
  %2552 = insertelement <1 x half> poison, half %2447, i64 0, !dbg !43
  store <1 x half> %2552, ptr addrspace(3) %gep240, align 2, !dbg !43
  %2553 = insertelement <1 x half> poison, half %2449, i64 0, !dbg !43
  store <1 x half> %2553, ptr addrspace(3) %gep241, align 2, !dbg !43
  %2554 = insertelement <1 x half> poison, half %2451, i64 0, !dbg !43
  store <1 x half> %2554, ptr addrspace(3) %907, align 2, !dbg !43
  %2555 = insertelement <1 x half> poison, half %2453, i64 0, !dbg !43
  store <1 x half> %2555, ptr addrspace(3) %gep242, align 2, !dbg !43
  %2556 = insertelement <1 x half> poison, half %2455, i64 0, !dbg !43
  store <1 x half> %2556, ptr addrspace(3) %gep243, align 2, !dbg !43
  %2557 = insertelement <1 x half> poison, half %2457, i64 0, !dbg !43
  store <1 x half> %2557, ptr addrspace(3) %gep244, align 2, !dbg !43
  %2558 = insertelement <1 x half> poison, half %2459, i64 0, !dbg !43
  store <1 x half> %2558, ptr addrspace(3) %gep245, align 2, !dbg !43
  %2559 = insertelement <1 x half> poison, half %2461, i64 0, !dbg !43
  store <1 x half> %2559, ptr addrspace(3) %gep246, align 2, !dbg !43
  %2560 = insertelement <1 x half> poison, half %2463, i64 0, !dbg !43
  store <1 x half> %2560, ptr addrspace(3) %gep247, align 2, !dbg !43
  %2561 = insertelement <1 x half> poison, half %2465, i64 0, !dbg !43
  store <1 x half> %2561, ptr addrspace(3) %gep248, align 2, !dbg !43
  %2562 = insertelement <1 x half> poison, half %2467, i64 0, !dbg !43
  store <1 x half> %2562, ptr addrspace(3) %950, align 2, !dbg !43
  %2563 = insertelement <1 x half> poison, half %2469, i64 0, !dbg !43
  store <1 x half> %2563, ptr addrspace(3) %gep249, align 2, !dbg !43
  %2564 = insertelement <1 x half> poison, half %2471, i64 0, !dbg !43
  store <1 x half> %2564, ptr addrspace(3) %gep250, align 2, !dbg !43
  %2565 = insertelement <1 x half> poison, half %2473, i64 0, !dbg !43
  store <1 x half> %2565, ptr addrspace(3) %gep251, align 2, !dbg !43
  %2566 = insertelement <1 x half> poison, half %2475, i64 0, !dbg !43
  store <1 x half> %2566, ptr addrspace(3) %gep252, align 2, !dbg !43
  %2567 = insertelement <1 x half> poison, half %2477, i64 0, !dbg !43
  store <1 x half> %2567, ptr addrspace(3) %gep253, align 2, !dbg !43
  %2568 = insertelement <1 x half> poison, half %2479, i64 0, !dbg !43
  store <1 x half> %2568, ptr addrspace(3) %gep254, align 2, !dbg !43
  %2569 = insertelement <1 x half> poison, half %2481, i64 0, !dbg !43
  store <1 x half> %2569, ptr addrspace(3) %gep255, align 2, !dbg !43
  %2570 = insertelement <1 x half> poison, half %2483, i64 0, !dbg !43
  store <1 x half> %2570, ptr addrspace(3) %997, align 2, !dbg !43
  %2571 = insertelement <1 x half> poison, half %2485, i64 0, !dbg !43
  store <1 x half> %2571, ptr addrspace(3) %gep256, align 2, !dbg !43
  %2572 = insertelement <1 x half> poison, half %2487, i64 0, !dbg !43
  store <1 x half> %2572, ptr addrspace(3) %gep257, align 2, !dbg !43
  %2573 = insertelement <1 x half> poison, half %2489, i64 0, !dbg !43
  store <1 x half> %2573, ptr addrspace(3) %gep258, align 2, !dbg !43
  %2574 = insertelement <1 x half> poison, half %2491, i64 0, !dbg !43
  store <1 x half> %2574, ptr addrspace(3) %gep259, align 2, !dbg !43
  %2575 = insertelement <1 x half> poison, half %2493, i64 0, !dbg !43
  store <1 x half> %2575, ptr addrspace(3) %gep260, align 2, !dbg !43
  %2576 = insertelement <1 x half> poison, half %2495, i64 0, !dbg !43
  store <1 x half> %2576, ptr addrspace(3) %gep261, align 2, !dbg !43
  %2577 = insertelement <1 x half> poison, half %2497, i64 0, !dbg !43
  store <1 x half> %2577, ptr addrspace(3) %gep262, align 2, !dbg !43
  %2578 = insertelement <1 x half> poison, half %2499, i64 0, !dbg !43
  store <1 x half> %2578, ptr addrspace(3) %1044, align 2, !dbg !43
  %2579 = insertelement <1 x half> poison, half %2501, i64 0, !dbg !43
  store <1 x half> %2579, ptr addrspace(3) %gep263, align 2, !dbg !43
  %2580 = insertelement <1 x half> poison, half %2503, i64 0, !dbg !43
  store <1 x half> %2580, ptr addrspace(3) %gep264, align 2, !dbg !43
  %2581 = insertelement <1 x half> poison, half %2505, i64 0, !dbg !43
  store <1 x half> %2581, ptr addrspace(3) %gep265, align 2, !dbg !43
  %2582 = insertelement <1 x half> poison, half %2507, i64 0, !dbg !43
  store <1 x half> %2582, ptr addrspace(3) %gep266, align 2, !dbg !43
  %2583 = insertelement <1 x half> poison, half %2509, i64 0, !dbg !43
  store <1 x half> %2583, ptr addrspace(3) %gep267, align 2, !dbg !43
  %2584 = insertelement <1 x half> poison, half %2511, i64 0, !dbg !43
  store <1 x half> %2584, ptr addrspace(3) %gep268, align 2, !dbg !43
  %2585 = insertelement <1 x half> poison, half %2513, i64 0, !dbg !43
  store <1 x half> %2585, ptr addrspace(3) %gep269, align 2, !dbg !43
  %2586 = insertelement <1 x half> poison, half %2515, i64 0, !dbg !43
  store <1 x half> %2586, ptr addrspace(3) %1091, align 2, !dbg !43
  %2587 = insertelement <1 x half> poison, half %2517, i64 0, !dbg !43
  store <1 x half> %2587, ptr addrspace(3) %gep270, align 2, !dbg !43
  %2588 = insertelement <1 x half> poison, half %2519, i64 0, !dbg !43
  store <1 x half> %2588, ptr addrspace(3) %gep271, align 2, !dbg !43
  %2589 = insertelement <1 x half> poison, half %2521, i64 0, !dbg !43
  store <1 x half> %2589, ptr addrspace(3) %gep272, align 2, !dbg !43
  %2590 = insertelement <1 x half> poison, half %2523, i64 0, !dbg !43
  store <1 x half> %2590, ptr addrspace(3) %gep273, align 2, !dbg !43
  %2591 = insertelement <1 x half> poison, half %2525, i64 0, !dbg !43
  store <1 x half> %2591, ptr addrspace(3) %gep274, align 2, !dbg !43
  %2592 = insertelement <1 x half> poison, half %2527, i64 0, !dbg !43
  store <1 x half> %2592, ptr addrspace(3) %gep275, align 2, !dbg !43
  %2593 = insertelement <1 x half> poison, half %2529, i64 0, !dbg !43
  store <1 x half> %2593, ptr addrspace(3) %gep276, align 2, !dbg !43
  fence syncscope("workgroup") release, !dbg !43
  tail call void @llvm.amdgcn.s.barrier(), !dbg !43
  fence syncscope("workgroup") acquire, !dbg !43
  %2594 = load <4 x half>, ptr addrspace(3) %1173, align 8, !dbg !43
  %2595 = load <4 x half>, ptr addrspace(3) %1175, align 8, !dbg !43
  %2596 = load <4 x half>, ptr addrspace(3) %1177, align 8, !dbg !43
  %2597 = load <4 x half>, ptr addrspace(3) %1179, align 8, !dbg !43
  %2598 = load <4 x half>, ptr addrspace(3) %1181, align 8, !dbg !43
  %2599 = load <4 x half>, ptr addrspace(3) %1183, align 8, !dbg !43
  %2600 = load <4 x half>, ptr addrspace(3) %1185, align 8, !dbg !43
  %2601 = load <4 x half>, ptr addrspace(3) %1187, align 8, !dbg !43
  %2602 = load <4 x half>, ptr addrspace(3) %1189, align 8, !dbg !43
  %2603 = load <4 x half>, ptr addrspace(3) %1191, align 8, !dbg !43
  %2604 = load <4 x half>, ptr addrspace(3) %1193, align 8, !dbg !43
  %2605 = load <4 x half>, ptr addrspace(3) %1195, align 8, !dbg !43
  %2606 = load <4 x half>, ptr addrspace(3) %1197, align 8, !dbg !43
  %2607 = load <4 x half>, ptr addrspace(3) %1199, align 8, !dbg !43
  %2608 = load <4 x half>, ptr addrspace(3) %1201, align 8, !dbg !43
  %2609 = load <4 x half>, ptr addrspace(3) %1203, align 8, !dbg !43
  %2610 = shufflevector <1 x half> %2210, <1 x half> %2211, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2611 = shufflevector <4 x half> %2610, <4 x half> %2213, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2612 = shufflevector <4 x half> %2611, <4 x half> %2215, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2613 = shufflevector <1 x half> %2216, <1 x half> %2217, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2614 = shufflevector <4 x half> %2613, <4 x half> %2219, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2615 = shufflevector <4 x half> %2614, <4 x half> %2221, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2616 = shufflevector <1 x half> %2222, <1 x half> %2223, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2617 = shufflevector <4 x half> %2616, <4 x half> %2225, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2618 = shufflevector <4 x half> %2617, <4 x half> %2227, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2619 = shufflevector <1 x half> %2228, <1 x half> %2229, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2620 = shufflevector <4 x half> %2619, <4 x half> %2231, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2621 = shufflevector <4 x half> %2620, <4 x half> %2233, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2622 = shufflevector <1 x half> %2234, <1 x half> %2235, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2623 = shufflevector <4 x half> %2622, <4 x half> %2237, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2624 = shufflevector <4 x half> %2623, <4 x half> %2239, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2625 = shufflevector <1 x half> %2240, <1 x half> %2241, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2626 = shufflevector <4 x half> %2625, <4 x half> %2243, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2627 = shufflevector <4 x half> %2626, <4 x half> %2245, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2628 = shufflevector <1 x half> %2246, <1 x half> %2247, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2629 = shufflevector <4 x half> %2628, <4 x half> %2249, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2630 = shufflevector <4 x half> %2629, <4 x half> %2251, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2631 = shufflevector <1 x half> %2252, <1 x half> %2253, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2632 = shufflevector <4 x half> %2631, <4 x half> %2255, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2633 = shufflevector <4 x half> %2632, <4 x half> %2257, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2634 = shufflevector <1 x half> %2258, <1 x half> %2259, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2635 = shufflevector <4 x half> %2634, <4 x half> %2261, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2636 = shufflevector <4 x half> %2635, <4 x half> %2263, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2637 = shufflevector <1 x half> %2264, <1 x half> %2265, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2638 = shufflevector <4 x half> %2637, <4 x half> %2267, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2639 = shufflevector <4 x half> %2638, <4 x half> %2269, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2640 = shufflevector <1 x half> %2270, <1 x half> %2271, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2641 = shufflevector <4 x half> %2640, <4 x half> %2273, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2642 = shufflevector <4 x half> %2641, <4 x half> %2275, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2643 = shufflevector <1 x half> %2276, <1 x half> %2277, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2644 = shufflevector <4 x half> %2643, <4 x half> %2279, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2645 = shufflevector <4 x half> %2644, <4 x half> %2281, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2646 = shufflevector <1 x half> %2282, <1 x half> %2283, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2647 = shufflevector <4 x half> %2646, <4 x half> %2285, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2648 = shufflevector <4 x half> %2647, <4 x half> %2287, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2649 = shufflevector <1 x half> %2288, <1 x half> %2289, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2650 = shufflevector <4 x half> %2649, <4 x half> %2291, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2651 = shufflevector <4 x half> %2650, <4 x half> %2293, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2652 = shufflevector <1 x half> %2294, <1 x half> %2295, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2653 = shufflevector <4 x half> %2652, <4 x half> %2297, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2654 = shufflevector <4 x half> %2653, <4 x half> %2299, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2655 = shufflevector <1 x half> %2300, <1 x half> %2301, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2656 = shufflevector <4 x half> %2655, <4 x half> %2303, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2657 = shufflevector <4 x half> %2656, <4 x half> %2305, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2658 = shufflevector <1 x half> %2306, <1 x half> %2307, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2659 = shufflevector <4 x half> %2658, <4 x half> %2309, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2660 = shufflevector <4 x half> %2659, <4 x half> %2311, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2661 = shufflevector <1 x half> %2312, <1 x half> %2313, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2662 = shufflevector <4 x half> %2661, <4 x half> %2315, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2663 = shufflevector <4 x half> %2662, <4 x half> %2317, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2664 = shufflevector <1 x half> %2318, <1 x half> %2319, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2665 = shufflevector <4 x half> %2664, <4 x half> %2321, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2666 = shufflevector <4 x half> %2665, <4 x half> %2323, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2667 = shufflevector <1 x half> %2324, <1 x half> %2325, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2668 = shufflevector <4 x half> %2667, <4 x half> %2327, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2669 = shufflevector <4 x half> %2668, <4 x half> %2329, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2670 = shufflevector <1 x half> %2330, <1 x half> %2331, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2671 = shufflevector <4 x half> %2670, <4 x half> %2333, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2672 = shufflevector <4 x half> %2671, <4 x half> %2335, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2673 = shufflevector <1 x half> %2336, <1 x half> %2337, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2674 = shufflevector <4 x half> %2673, <4 x half> %2339, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2675 = shufflevector <4 x half> %2674, <4 x half> %2341, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2676 = shufflevector <1 x half> %2342, <1 x half> %2343, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2677 = shufflevector <4 x half> %2676, <4 x half> %2345, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2678 = shufflevector <4 x half> %2677, <4 x half> %2347, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2679 = shufflevector <1 x half> %2348, <1 x half> %2349, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2680 = shufflevector <4 x half> %2679, <4 x half> %2351, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2681 = shufflevector <4 x half> %2680, <4 x half> %2353, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2682 = shufflevector <1 x half> %2354, <1 x half> %2355, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2683 = shufflevector <4 x half> %2682, <4 x half> %2357, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2684 = shufflevector <4 x half> %2683, <4 x half> %2359, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2685 = shufflevector <1 x half> %2360, <1 x half> %2361, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2686 = shufflevector <4 x half> %2685, <4 x half> %2363, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2687 = shufflevector <4 x half> %2686, <4 x half> %2365, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2688 = shufflevector <1 x half> %2366, <1 x half> %2367, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2689 = shufflevector <4 x half> %2688, <4 x half> %2369, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2690 = shufflevector <4 x half> %2689, <4 x half> %2371, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2691 = shufflevector <1 x half> %2372, <1 x half> %2373, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2692 = shufflevector <4 x half> %2691, <4 x half> %2375, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2693 = shufflevector <4 x half> %2692, <4 x half> %2377, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2694 = shufflevector <1 x half> %2378, <1 x half> %2379, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2695 = shufflevector <4 x half> %2694, <4 x half> %2381, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2696 = shufflevector <4 x half> %2695, <4 x half> %2383, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2697 = shufflevector <1 x half> %2384, <1 x half> %2385, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2698 = shufflevector <4 x half> %2697, <4 x half> %2387, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2699 = shufflevector <4 x half> %2698, <4 x half> %2389, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2700 = shufflevector <1 x half> %2390, <1 x half> %2391, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2701 = shufflevector <4 x half> %2700, <4 x half> %2393, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2702 = shufflevector <4 x half> %2701, <4 x half> %2395, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2703 = shufflevector <1 x half> %2396, <1 x half> %2397, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !44
  %2704 = shufflevector <4 x half> %2703, <4 x half> %2399, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !44
  %2705 = shufflevector <4 x half> %2704, <4 x half> %2401, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !44
  %2706 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %1832, i64 0, !dbg !44
  %2707 = insertelement <16 x float> %2706, float %1833, i64 1, !dbg !44
  %2708 = insertelement <16 x float> %2707, float %1834, i64 2, !dbg !44
  %2709 = insertelement <16 x float> %2708, float %1835, i64 3, !dbg !44
  %2710 = insertelement <16 x float> %2709, float %1836, i64 4, !dbg !44
  %2711 = insertelement <16 x float> %2710, float %1837, i64 5, !dbg !44
  %2712 = insertelement <16 x float> %2711, float %1838, i64 6, !dbg !44
  %2713 = insertelement <16 x float> %2712, float %1839, i64 7, !dbg !44
  %2714 = insertelement <16 x float> %2713, float %1840, i64 8, !dbg !44
  %2715 = insertelement <16 x float> %2714, float %1841, i64 9, !dbg !44
  %2716 = insertelement <16 x float> %2715, float %1842, i64 10, !dbg !44
  %2717 = insertelement <16 x float> %2716, float %1843, i64 11, !dbg !44
  %2718 = insertelement <16 x float> %2717, float %1844, i64 12, !dbg !44
  %2719 = insertelement <16 x float> %2718, float %1845, i64 13, !dbg !44
  %2720 = insertelement <16 x float> %2719, float %1846, i64 14, !dbg !44
  %2721 = insertelement <16 x float> %2720, float %1847, i64 15, !dbg !44
  %2722 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2612, <4 x half> %2594, <16 x float> %2721, i32 0, i32 0, i32 0), !dbg !44
  %2723 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2615, <4 x half> %2595, <16 x float> %2722, i32 0, i32 0, i32 0), !dbg !44
  %2724 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2618, <4 x half> %2596, <16 x float> %2723, i32 0, i32 0, i32 0), !dbg !44
  %2725 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2621, <4 x half> %2597, <16 x float> %2724, i32 0, i32 0, i32 0), !dbg !44
  %2726 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2624, <4 x half> %2598, <16 x float> %2725, i32 0, i32 0, i32 0), !dbg !44
  %2727 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2627, <4 x half> %2599, <16 x float> %2726, i32 0, i32 0, i32 0), !dbg !44
  %2728 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2630, <4 x half> %2600, <16 x float> %2727, i32 0, i32 0, i32 0), !dbg !44
  %2729 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2633, <4 x half> %2601, <16 x float> %2728, i32 0, i32 0, i32 0), !dbg !44
  %2730 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2636, <4 x half> %2602, <16 x float> %2729, i32 0, i32 0, i32 0), !dbg !44
  %2731 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2639, <4 x half> %2603, <16 x float> %2730, i32 0, i32 0, i32 0), !dbg !44
  %2732 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2642, <4 x half> %2604, <16 x float> %2731, i32 0, i32 0, i32 0), !dbg !44
  %2733 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2645, <4 x half> %2605, <16 x float> %2732, i32 0, i32 0, i32 0), !dbg !44
  %2734 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2648, <4 x half> %2606, <16 x float> %2733, i32 0, i32 0, i32 0), !dbg !44
  %2735 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2651, <4 x half> %2607, <16 x float> %2734, i32 0, i32 0, i32 0), !dbg !44
  %2736 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2654, <4 x half> %2608, <16 x float> %2735, i32 0, i32 0, i32 0), !dbg !44
  %2737 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2657, <4 x half> %2609, <16 x float> %2736, i32 0, i32 0, i32 0), !dbg !44
  %2738 = extractelement <16 x float> %2737, i64 0, !dbg !44
  %2739 = extractelement <16 x float> %2737, i64 1, !dbg !44
  %2740 = extractelement <16 x float> %2737, i64 2, !dbg !44
  %2741 = extractelement <16 x float> %2737, i64 3, !dbg !44
  %2742 = extractelement <16 x float> %2737, i64 4, !dbg !44
  %2743 = extractelement <16 x float> %2737, i64 5, !dbg !44
  %2744 = extractelement <16 x float> %2737, i64 6, !dbg !44
  %2745 = extractelement <16 x float> %2737, i64 7, !dbg !44
  %2746 = extractelement <16 x float> %2737, i64 8, !dbg !44
  %2747 = extractelement <16 x float> %2737, i64 9, !dbg !44
  %2748 = extractelement <16 x float> %2737, i64 10, !dbg !44
  %2749 = extractelement <16 x float> %2737, i64 11, !dbg !44
  %2750 = extractelement <16 x float> %2737, i64 12, !dbg !44
  %2751 = extractelement <16 x float> %2737, i64 13, !dbg !44
  %2752 = extractelement <16 x float> %2737, i64 14, !dbg !44
  %2753 = extractelement <16 x float> %2737, i64 15, !dbg !44
  %2754 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %1848, i64 0, !dbg !44
  %2755 = insertelement <16 x float> %2754, float %1849, i64 1, !dbg !44
  %2756 = insertelement <16 x float> %2755, float %1850, i64 2, !dbg !44
  %2757 = insertelement <16 x float> %2756, float %1851, i64 3, !dbg !44
  %2758 = insertelement <16 x float> %2757, float %1852, i64 4, !dbg !44
  %2759 = insertelement <16 x float> %2758, float %1853, i64 5, !dbg !44
  %2760 = insertelement <16 x float> %2759, float %1854, i64 6, !dbg !44
  %2761 = insertelement <16 x float> %2760, float %1855, i64 7, !dbg !44
  %2762 = insertelement <16 x float> %2761, float %1856, i64 8, !dbg !44
  %2763 = insertelement <16 x float> %2762, float %1857, i64 9, !dbg !44
  %2764 = insertelement <16 x float> %2763, float %1858, i64 10, !dbg !44
  %2765 = insertelement <16 x float> %2764, float %1859, i64 11, !dbg !44
  %2766 = insertelement <16 x float> %2765, float %1860, i64 12, !dbg !44
  %2767 = insertelement <16 x float> %2766, float %1861, i64 13, !dbg !44
  %2768 = insertelement <16 x float> %2767, float %1862, i64 14, !dbg !44
  %2769 = insertelement <16 x float> %2768, float %1863, i64 15, !dbg !44
  %2770 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2660, <4 x half> %2594, <16 x float> %2769, i32 0, i32 0, i32 0), !dbg !44
  %2771 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2663, <4 x half> %2595, <16 x float> %2770, i32 0, i32 0, i32 0), !dbg !44
  %2772 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2666, <4 x half> %2596, <16 x float> %2771, i32 0, i32 0, i32 0), !dbg !44
  %2773 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2669, <4 x half> %2597, <16 x float> %2772, i32 0, i32 0, i32 0), !dbg !44
  %2774 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2672, <4 x half> %2598, <16 x float> %2773, i32 0, i32 0, i32 0), !dbg !44
  %2775 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2675, <4 x half> %2599, <16 x float> %2774, i32 0, i32 0, i32 0), !dbg !44
  %2776 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2678, <4 x half> %2600, <16 x float> %2775, i32 0, i32 0, i32 0), !dbg !44
  %2777 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2681, <4 x half> %2601, <16 x float> %2776, i32 0, i32 0, i32 0), !dbg !44
  %2778 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2684, <4 x half> %2602, <16 x float> %2777, i32 0, i32 0, i32 0), !dbg !44
  %2779 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2687, <4 x half> %2603, <16 x float> %2778, i32 0, i32 0, i32 0), !dbg !44
  %2780 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2690, <4 x half> %2604, <16 x float> %2779, i32 0, i32 0, i32 0), !dbg !44
  %2781 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2693, <4 x half> %2605, <16 x float> %2780, i32 0, i32 0, i32 0), !dbg !44
  %2782 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2696, <4 x half> %2606, <16 x float> %2781, i32 0, i32 0, i32 0), !dbg !44
  %2783 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2699, <4 x half> %2607, <16 x float> %2782, i32 0, i32 0, i32 0), !dbg !44
  %2784 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2702, <4 x half> %2608, <16 x float> %2783, i32 0, i32 0, i32 0), !dbg !44
  %2785 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2705, <4 x half> %2609, <16 x float> %2784, i32 0, i32 0, i32 0), !dbg !44
  %2786 = extractelement <16 x float> %2785, i64 0, !dbg !44
  %2787 = extractelement <16 x float> %2785, i64 1, !dbg !44
  %2788 = extractelement <16 x float> %2785, i64 2, !dbg !44
  %2789 = extractelement <16 x float> %2785, i64 3, !dbg !44
  %2790 = extractelement <16 x float> %2785, i64 4, !dbg !44
  %2791 = extractelement <16 x float> %2785, i64 5, !dbg !44
  %2792 = extractelement <16 x float> %2785, i64 6, !dbg !44
  %2793 = extractelement <16 x float> %2785, i64 7, !dbg !44
  %2794 = extractelement <16 x float> %2785, i64 8, !dbg !44
  %2795 = extractelement <16 x float> %2785, i64 9, !dbg !44
  %2796 = extractelement <16 x float> %2785, i64 10, !dbg !44
  %2797 = extractelement <16 x float> %2785, i64 11, !dbg !44
  %2798 = extractelement <16 x float> %2785, i64 12, !dbg !44
  %2799 = extractelement <16 x float> %2785, i64 13, !dbg !44
  %2800 = extractelement <16 x float> %2785, i64 14, !dbg !44
  %2801 = extractelement <16 x float> %2785, i64 15, !dbg !44
  %2802 = getelementptr float, ptr addrspace(1) %67, i64 %2076, !dbg !45
  %2803 = addrspacecast ptr addrspace(1) %2802 to ptr, !dbg !46
  %2804 = load float, ptr %2803, align 4, !dbg !46
  %2805 = fsub float 0.000000e+00, %2804, !dbg !47
  %2806 = insertelement <16 x float> poison, float %2805, i64 0, !dbg !48
  %2807 = shufflevector <16 x float> %2806, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !48
  %2808 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1635, <4 x half> %2202, <16 x float> %2807, i32 0, i32 0, i32 0), !dbg !48
  %2809 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1636, <4 x half> %2203, <16 x float> %2808, i32 0, i32 0, i32 0), !dbg !48
  %2810 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1637, <4 x half> %2204, <16 x float> %2809, i32 0, i32 0, i32 0), !dbg !48
  %2811 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1638, <4 x half> %2205, <16 x float> %2810, i32 0, i32 0, i32 0), !dbg !48
  %2812 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1639, <4 x half> %2206, <16 x float> %2811, i32 0, i32 0, i32 0), !dbg !48
  %2813 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1640, <4 x half> %2207, <16 x float> %2812, i32 0, i32 0, i32 0), !dbg !48
  %2814 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1641, <4 x half> %2208, <16 x float> %2813, i32 0, i32 0, i32 0), !dbg !48
  %2815 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1642, <4 x half> %2209, <16 x float> %2814, i32 0, i32 0, i32 0), !dbg !48
  %2816 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1643, <4 x half> %2202, <16 x float> %2807, i32 0, i32 0, i32 0), !dbg !48
  %2817 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1644, <4 x half> %2203, <16 x float> %2816, i32 0, i32 0, i32 0), !dbg !48
  %2818 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1645, <4 x half> %2204, <16 x float> %2817, i32 0, i32 0, i32 0), !dbg !48
  %2819 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1646, <4 x half> %2205, <16 x float> %2818, i32 0, i32 0, i32 0), !dbg !48
  %2820 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1647, <4 x half> %2206, <16 x float> %2819, i32 0, i32 0, i32 0), !dbg !48
  %2821 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1648, <4 x half> %2207, <16 x float> %2820, i32 0, i32 0, i32 0), !dbg !48
  %2822 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1649, <4 x half> %2208, <16 x float> %2821, i32 0, i32 0, i32 0), !dbg !48
  %2823 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1650, <4 x half> %2209, <16 x float> %2822, i32 0, i32 0, i32 0), !dbg !48
  %2824 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1651, <4 x half> %2202, <16 x float> %2807, i32 0, i32 0, i32 0), !dbg !48
  %2825 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1652, <4 x half> %2203, <16 x float> %2824, i32 0, i32 0, i32 0), !dbg !48
  %2826 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1653, <4 x half> %2204, <16 x float> %2825, i32 0, i32 0, i32 0), !dbg !48
  %2827 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1654, <4 x half> %2205, <16 x float> %2826, i32 0, i32 0, i32 0), !dbg !48
  %2828 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1655, <4 x half> %2206, <16 x float> %2827, i32 0, i32 0, i32 0), !dbg !48
  %2829 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1656, <4 x half> %2207, <16 x float> %2828, i32 0, i32 0, i32 0), !dbg !48
  %2830 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1657, <4 x half> %2208, <16 x float> %2829, i32 0, i32 0, i32 0), !dbg !48
  %2831 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1658, <4 x half> %2209, <16 x float> %2830, i32 0, i32 0, i32 0), !dbg !48
  %2832 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1659, <4 x half> %2202, <16 x float> %2807, i32 0, i32 0, i32 0), !dbg !48
  %2833 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1660, <4 x half> %2203, <16 x float> %2832, i32 0, i32 0, i32 0), !dbg !48
  %2834 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1661, <4 x half> %2204, <16 x float> %2833, i32 0, i32 0, i32 0), !dbg !48
  %2835 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1662, <4 x half> %2205, <16 x float> %2834, i32 0, i32 0, i32 0), !dbg !48
  %2836 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1663, <4 x half> %2206, <16 x float> %2835, i32 0, i32 0, i32 0), !dbg !48
  %2837 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1664, <4 x half> %2207, <16 x float> %2836, i32 0, i32 0, i32 0), !dbg !48
  %2838 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1665, <4 x half> %2208, <16 x float> %2837, i32 0, i32 0, i32 0), !dbg !48
  %2839 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1666, <4 x half> %2209, <16 x float> %2838, i32 0, i32 0, i32 0), !dbg !48
  %2840 = shufflevector <16 x float> %2815, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !49
  %2841 = fmul <4 x float> %2087, %2840, !dbg !49
  %2842 = fmul <4 x float> %2841, %1397, !dbg !50
  %2843 = fptrunc <4 x float> %2842 to <4 x half>, !dbg !51
  %2844 = shufflevector <16 x float> %2815, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !49
  %2845 = fmul <4 x float> %2093, %2844, !dbg !49
  %2846 = fmul <4 x float> %2845, %1397, !dbg !50
  %2847 = fptrunc <4 x float> %2846 to <4 x half>, !dbg !51
  %2848 = shufflevector <16 x float> %2815, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !49
  %2849 = fmul <4 x float> %2099, %2848, !dbg !49
  %2850 = fmul <4 x float> %2849, %1397, !dbg !50
  %2851 = fptrunc <4 x float> %2850 to <4 x half>, !dbg !51
  %2852 = shufflevector <16 x float> %2815, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !49
  %2853 = fmul <4 x float> %2105, %2852, !dbg !49
  %2854 = fmul <4 x float> %2853, %1397, !dbg !50
  %2855 = fptrunc <4 x float> %2854 to <4 x half>, !dbg !51
  %2856 = shufflevector <16 x float> %2823, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !49
  %2857 = fmul <4 x float> %2111, %2856, !dbg !49
  %2858 = fmul <4 x float> %2857, %1397, !dbg !50
  %2859 = fptrunc <4 x float> %2858 to <4 x half>, !dbg !51
  %2860 = shufflevector <16 x float> %2823, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !49
  %2861 = fmul <4 x float> %2117, %2860, !dbg !49
  %2862 = fmul <4 x float> %2861, %1397, !dbg !50
  %2863 = fptrunc <4 x float> %2862 to <4 x half>, !dbg !51
  %2864 = shufflevector <16 x float> %2823, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !49
  %2865 = fmul <4 x float> %2123, %2864, !dbg !49
  %2866 = fmul <4 x float> %2865, %1397, !dbg !50
  %2867 = fptrunc <4 x float> %2866 to <4 x half>, !dbg !51
  %2868 = shufflevector <16 x float> %2823, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !49
  %2869 = fmul <4 x float> %2129, %2868, !dbg !49
  %2870 = fmul <4 x float> %2869, %1397, !dbg !50
  %2871 = fptrunc <4 x float> %2870 to <4 x half>, !dbg !51
  %2872 = shufflevector <16 x float> %2831, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !49
  %2873 = fmul <4 x float> %2135, %2872, !dbg !49
  %2874 = fmul <4 x float> %2873, %1397, !dbg !50
  %2875 = fptrunc <4 x float> %2874 to <4 x half>, !dbg !51
  %2876 = shufflevector <16 x float> %2831, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !49
  %2877 = fmul <4 x float> %2141, %2876, !dbg !49
  %2878 = fmul <4 x float> %2877, %1397, !dbg !50
  %2879 = fptrunc <4 x float> %2878 to <4 x half>, !dbg !51
  %2880 = shufflevector <16 x float> %2831, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !49
  %2881 = fmul <4 x float> %2147, %2880, !dbg !49
  %2882 = fmul <4 x float> %2881, %1397, !dbg !50
  %2883 = fptrunc <4 x float> %2882 to <4 x half>, !dbg !51
  %2884 = shufflevector <16 x float> %2831, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !49
  %2885 = fmul <4 x float> %2153, %2884, !dbg !49
  %2886 = fmul <4 x float> %2885, %1397, !dbg !50
  %2887 = fptrunc <4 x float> %2886 to <4 x half>, !dbg !51
  %2888 = shufflevector <16 x float> %2839, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !49
  %2889 = fmul <4 x float> %2159, %2888, !dbg !49
  %2890 = fmul <4 x float> %2889, %1397, !dbg !50
  %2891 = fptrunc <4 x float> %2890 to <4 x half>, !dbg !51
  %2892 = shufflevector <16 x float> %2839, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !49
  %2893 = fmul <4 x float> %2165, %2892, !dbg !49
  %2894 = fmul <4 x float> %2893, %1397, !dbg !50
  %2895 = fptrunc <4 x float> %2894 to <4 x half>, !dbg !51
  %2896 = shufflevector <16 x float> %2839, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !49
  %2897 = fmul <4 x float> %2171, %2896, !dbg !49
  %2898 = fmul <4 x float> %2897, %1397, !dbg !50
  %2899 = fptrunc <4 x float> %2898 to <4 x half>, !dbg !51
  %2900 = shufflevector <16 x float> %2839, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !49
  %2901 = fmul <4 x float> %2177, %2900, !dbg !49
  %2902 = fmul <4 x float> %2901, %1397, !dbg !50
  %2903 = fptrunc <4 x float> %2902 to <4 x half>, !dbg !51
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %2904 = shufflevector <4 x half> %2843, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2904, ptr addrspace(3) %771, align 2, !dbg !52
  %2905 = shufflevector <4 x half> %2843, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2905, ptr addrspace(3) %778, align 2, !dbg !52
  %2906 = shufflevector <4 x half> %2843, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2906, ptr addrspace(3) %785, align 2, !dbg !52
  %2907 = shufflevector <4 x half> %2843, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2907, ptr addrspace(3) %792, align 2, !dbg !52
  %2908 = shufflevector <4 x half> %2847, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2908, ptr addrspace(3) %799, align 2, !dbg !52
  %2909 = shufflevector <4 x half> %2847, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2909, ptr addrspace(3) %806, align 2, !dbg !52
  %2910 = shufflevector <4 x half> %2847, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2910, ptr addrspace(3) %813, align 2, !dbg !52
  %2911 = shufflevector <4 x half> %2847, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2911, ptr addrspace(3) %820, align 2, !dbg !52
  %2912 = shufflevector <4 x half> %2851, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2912, ptr addrspace(3) %821, align 2, !dbg !52
  %2913 = shufflevector <4 x half> %2851, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2913, ptr addrspace(3) %gep228, align 2, !dbg !52
  %2914 = shufflevector <4 x half> %2851, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2914, ptr addrspace(3) %gep229, align 2, !dbg !52
  %2915 = shufflevector <4 x half> %2851, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2915, ptr addrspace(3) %gep230, align 2, !dbg !52
  %2916 = shufflevector <4 x half> %2855, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2916, ptr addrspace(3) %gep231, align 2, !dbg !52
  %2917 = shufflevector <4 x half> %2855, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2917, ptr addrspace(3) %gep232, align 2, !dbg !52
  %2918 = shufflevector <4 x half> %2855, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2918, ptr addrspace(3) %gep233, align 2, !dbg !52
  %2919 = shufflevector <4 x half> %2855, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2919, ptr addrspace(3) %gep234, align 2, !dbg !52
  %2920 = shufflevector <4 x half> %2859, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2920, ptr addrspace(3) %864, align 2, !dbg !52
  %2921 = shufflevector <4 x half> %2859, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2921, ptr addrspace(3) %gep235, align 2, !dbg !52
  %2922 = shufflevector <4 x half> %2859, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2922, ptr addrspace(3) %gep236, align 2, !dbg !52
  %2923 = shufflevector <4 x half> %2859, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2923, ptr addrspace(3) %gep237, align 2, !dbg !52
  %2924 = shufflevector <4 x half> %2863, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2924, ptr addrspace(3) %gep238, align 2, !dbg !52
  %2925 = shufflevector <4 x half> %2863, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2925, ptr addrspace(3) %gep239, align 2, !dbg !52
  %2926 = shufflevector <4 x half> %2863, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2926, ptr addrspace(3) %gep240, align 2, !dbg !52
  %2927 = shufflevector <4 x half> %2863, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2927, ptr addrspace(3) %gep241, align 2, !dbg !52
  %2928 = shufflevector <4 x half> %2867, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2928, ptr addrspace(3) %907, align 2, !dbg !52
  %2929 = shufflevector <4 x half> %2867, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2929, ptr addrspace(3) %gep242, align 2, !dbg !52
  %2930 = shufflevector <4 x half> %2867, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2930, ptr addrspace(3) %gep243, align 2, !dbg !52
  %2931 = shufflevector <4 x half> %2867, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2931, ptr addrspace(3) %gep244, align 2, !dbg !52
  %2932 = shufflevector <4 x half> %2871, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2932, ptr addrspace(3) %gep245, align 2, !dbg !52
  %2933 = shufflevector <4 x half> %2871, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2933, ptr addrspace(3) %gep246, align 2, !dbg !52
  %2934 = shufflevector <4 x half> %2871, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2934, ptr addrspace(3) %gep247, align 2, !dbg !52
  %2935 = shufflevector <4 x half> %2871, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2935, ptr addrspace(3) %gep248, align 2, !dbg !52
  %2936 = shufflevector <4 x half> %2875, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2936, ptr addrspace(3) %950, align 2, !dbg !52
  %2937 = shufflevector <4 x half> %2875, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2937, ptr addrspace(3) %gep249, align 2, !dbg !52
  %2938 = shufflevector <4 x half> %2875, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2938, ptr addrspace(3) %gep250, align 2, !dbg !52
  %2939 = shufflevector <4 x half> %2875, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2939, ptr addrspace(3) %gep251, align 2, !dbg !52
  %2940 = shufflevector <4 x half> %2879, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2940, ptr addrspace(3) %gep252, align 2, !dbg !52
  %2941 = shufflevector <4 x half> %2879, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2941, ptr addrspace(3) %gep253, align 2, !dbg !52
  %2942 = shufflevector <4 x half> %2879, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2942, ptr addrspace(3) %gep254, align 2, !dbg !52
  %2943 = shufflevector <4 x half> %2879, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2943, ptr addrspace(3) %gep255, align 2, !dbg !52
  %2944 = shufflevector <4 x half> %2883, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2944, ptr addrspace(3) %997, align 2, !dbg !52
  %2945 = shufflevector <4 x half> %2883, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2945, ptr addrspace(3) %gep256, align 2, !dbg !52
  %2946 = shufflevector <4 x half> %2883, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2946, ptr addrspace(3) %gep257, align 2, !dbg !52
  %2947 = shufflevector <4 x half> %2883, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2947, ptr addrspace(3) %gep258, align 2, !dbg !52
  %2948 = shufflevector <4 x half> %2887, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2948, ptr addrspace(3) %gep259, align 2, !dbg !52
  %2949 = shufflevector <4 x half> %2887, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2949, ptr addrspace(3) %gep260, align 2, !dbg !52
  %2950 = shufflevector <4 x half> %2887, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2950, ptr addrspace(3) %gep261, align 2, !dbg !52
  %2951 = shufflevector <4 x half> %2887, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2951, ptr addrspace(3) %gep262, align 2, !dbg !52
  %2952 = shufflevector <4 x half> %2891, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2952, ptr addrspace(3) %1044, align 2, !dbg !52
  %2953 = shufflevector <4 x half> %2891, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2953, ptr addrspace(3) %gep263, align 2, !dbg !52
  %2954 = shufflevector <4 x half> %2891, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2954, ptr addrspace(3) %gep264, align 2, !dbg !52
  %2955 = shufflevector <4 x half> %2891, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2955, ptr addrspace(3) %gep265, align 2, !dbg !52
  %2956 = shufflevector <4 x half> %2895, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2956, ptr addrspace(3) %gep266, align 2, !dbg !52
  %2957 = shufflevector <4 x half> %2895, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2957, ptr addrspace(3) %gep267, align 2, !dbg !52
  %2958 = shufflevector <4 x half> %2895, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2958, ptr addrspace(3) %gep268, align 2, !dbg !52
  %2959 = shufflevector <4 x half> %2895, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2959, ptr addrspace(3) %gep269, align 2, !dbg !52
  %2960 = shufflevector <4 x half> %2899, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2960, ptr addrspace(3) %1091, align 2, !dbg !52
  %2961 = shufflevector <4 x half> %2899, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2961, ptr addrspace(3) %gep270, align 2, !dbg !52
  %2962 = shufflevector <4 x half> %2899, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2962, ptr addrspace(3) %gep271, align 2, !dbg !52
  %2963 = shufflevector <4 x half> %2899, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2963, ptr addrspace(3) %gep272, align 2, !dbg !52
  %2964 = shufflevector <4 x half> %2903, <4 x half> poison, <1 x i32> zeroinitializer, !dbg !52
  store <1 x half> %2964, ptr addrspace(3) %gep273, align 2, !dbg !52
  %2965 = shufflevector <4 x half> %2903, <4 x half> poison, <1 x i32> <i32 1>, !dbg !52
  store <1 x half> %2965, ptr addrspace(3) %gep274, align 2, !dbg !52
  %2966 = shufflevector <4 x half> %2903, <4 x half> poison, <1 x i32> <i32 2>, !dbg !52
  store <1 x half> %2966, ptr addrspace(3) %gep275, align 2, !dbg !52
  %2967 = shufflevector <4 x half> %2903, <4 x half> poison, <1 x i32> <i32 3>, !dbg !52
  store <1 x half> %2967, ptr addrspace(3) %gep276, align 2, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %2968 = load <4 x half>, ptr addrspace(3) %1173, align 8, !dbg !52
  %2969 = load <4 x half>, ptr addrspace(3) %1175, align 8, !dbg !52
  %2970 = load <4 x half>, ptr addrspace(3) %1177, align 8, !dbg !52
  %2971 = load <4 x half>, ptr addrspace(3) %1179, align 8, !dbg !52
  %2972 = load <4 x half>, ptr addrspace(3) %1181, align 8, !dbg !52
  %2973 = load <4 x half>, ptr addrspace(3) %1183, align 8, !dbg !52
  %2974 = load <4 x half>, ptr addrspace(3) %1185, align 8, !dbg !52
  %2975 = load <4 x half>, ptr addrspace(3) %1187, align 8, !dbg !52
  %2976 = load <4 x half>, ptr addrspace(3) %1189, align 8, !dbg !52
  %2977 = load <4 x half>, ptr addrspace(3) %1191, align 8, !dbg !52
  %2978 = load <4 x half>, ptr addrspace(3) %1193, align 8, !dbg !52
  %2979 = load <4 x half>, ptr addrspace(3) %1195, align 8, !dbg !52
  %2980 = load <4 x half>, ptr addrspace(3) %1197, align 8, !dbg !52
  %2981 = load <4 x half>, ptr addrspace(3) %1199, align 8, !dbg !52
  %2982 = load <4 x half>, ptr addrspace(3) %1201, align 8, !dbg !52
  %2983 = load <4 x half>, ptr addrspace(3) %1203, align 8, !dbg !52
  %2984 = insertelement <4 x half> poison, half %1886, i64 0, !dbg !53
  %2985 = insertelement <4 x half> %2984, half %1887, i64 1, !dbg !53
  %2986 = insertelement <4 x half> %2985, half %1888, i64 2, !dbg !53
  %2987 = insertelement <4 x half> %2986, half %1889, i64 3, !dbg !53
  %2988 = insertelement <4 x half> poison, half %1890, i64 0, !dbg !53
  %2989 = insertelement <4 x half> %2988, half %1891, i64 1, !dbg !53
  %2990 = insertelement <4 x half> %2989, half %1892, i64 2, !dbg !53
  %2991 = insertelement <4 x half> %2990, half %1893, i64 3, !dbg !53
  %2992 = insertelement <4 x half> poison, half %1894, i64 0, !dbg !53
  %2993 = insertelement <4 x half> %2992, half %1895, i64 1, !dbg !53
  %2994 = insertelement <4 x half> %2993, half %1896, i64 2, !dbg !53
  %2995 = insertelement <4 x half> %2994, half %1897, i64 3, !dbg !53
  %2996 = insertelement <4 x half> poison, half %1898, i64 0, !dbg !53
  %2997 = insertelement <4 x half> %2996, half %1899, i64 1, !dbg !53
  %2998 = insertelement <4 x half> %2997, half %1900, i64 2, !dbg !53
  %2999 = insertelement <4 x half> %2998, half %1901, i64 3, !dbg !53
  %3000 = insertelement <4 x half> poison, half %1902, i64 0, !dbg !53
  %3001 = insertelement <4 x half> %3000, half %1903, i64 1, !dbg !53
  %3002 = insertelement <4 x half> %3001, half %1904, i64 2, !dbg !53
  %3003 = insertelement <4 x half> %3002, half %1905, i64 3, !dbg !53
  %3004 = insertelement <4 x half> poison, half %1906, i64 0, !dbg !53
  %3005 = insertelement <4 x half> %3004, half %1907, i64 1, !dbg !53
  %3006 = insertelement <4 x half> %3005, half %1908, i64 2, !dbg !53
  %3007 = insertelement <4 x half> %3006, half %1909, i64 3, !dbg !53
  %3008 = insertelement <4 x half> poison, half %1910, i64 0, !dbg !53
  %3009 = insertelement <4 x half> %3008, half %1911, i64 1, !dbg !53
  %3010 = insertelement <4 x half> %3009, half %1912, i64 2, !dbg !53
  %3011 = insertelement <4 x half> %3010, half %1913, i64 3, !dbg !53
  %3012 = insertelement <4 x half> poison, half %1914, i64 0, !dbg !53
  %3013 = insertelement <4 x half> %3012, half %1915, i64 1, !dbg !53
  %3014 = insertelement <4 x half> %3013, half %1916, i64 2, !dbg !53
  %3015 = insertelement <4 x half> %3014, half %1917, i64 3, !dbg !53
  %3016 = insertelement <4 x half> poison, half %1918, i64 0, !dbg !53
  %3017 = insertelement <4 x half> %3016, half %1919, i64 1, !dbg !53
  %3018 = insertelement <4 x half> %3017, half %1920, i64 2, !dbg !53
  %3019 = insertelement <4 x half> %3018, half %1921, i64 3, !dbg !53
  %3020 = insertelement <4 x half> poison, half %1922, i64 0, !dbg !53
  %3021 = insertelement <4 x half> %3020, half %1923, i64 1, !dbg !53
  %3022 = insertelement <4 x half> %3021, half %1924, i64 2, !dbg !53
  %3023 = insertelement <4 x half> %3022, half %1925, i64 3, !dbg !53
  %3024 = insertelement <4 x half> poison, half %1926, i64 0, !dbg !53
  %3025 = insertelement <4 x half> %3024, half %1927, i64 1, !dbg !53
  %3026 = insertelement <4 x half> %3025, half %1928, i64 2, !dbg !53
  %3027 = insertelement <4 x half> %3026, half %1929, i64 3, !dbg !53
  %3028 = insertelement <4 x half> poison, half %1930, i64 0, !dbg !53
  %3029 = insertelement <4 x half> %3028, half %1931, i64 1, !dbg !53
  %3030 = insertelement <4 x half> %3029, half %1932, i64 2, !dbg !53
  %3031 = insertelement <4 x half> %3030, half %1933, i64 3, !dbg !53
  %3032 = insertelement <4 x half> poison, half %1934, i64 0, !dbg !53
  %3033 = insertelement <4 x half> %3032, half %1935, i64 1, !dbg !53
  %3034 = insertelement <4 x half> %3033, half %1936, i64 2, !dbg !53
  %3035 = insertelement <4 x half> %3034, half %1937, i64 3, !dbg !53
  %3036 = insertelement <4 x half> poison, half %1938, i64 0, !dbg !53
  %3037 = insertelement <4 x half> %3036, half %1939, i64 1, !dbg !53
  %3038 = insertelement <4 x half> %3037, half %1940, i64 2, !dbg !53
  %3039 = insertelement <4 x half> %3038, half %1941, i64 3, !dbg !53
  %3040 = insertelement <4 x half> poison, half %1942, i64 0, !dbg !53
  %3041 = insertelement <4 x half> %3040, half %1943, i64 1, !dbg !53
  %3042 = insertelement <4 x half> %3041, half %1944, i64 2, !dbg !53
  %3043 = insertelement <4 x half> %3042, half %1945, i64 3, !dbg !53
  %3044 = insertelement <4 x half> poison, half %1946, i64 0, !dbg !53
  %3045 = insertelement <4 x half> %3044, half %1947, i64 1, !dbg !53
  %3046 = insertelement <4 x half> %3045, half %1948, i64 2, !dbg !53
  %3047 = insertelement <4 x half> %3046, half %1949, i64 3, !dbg !53
  %3048 = insertelement <4 x half> poison, half %1950, i64 0, !dbg !53
  %3049 = insertelement <4 x half> %3048, half %1951, i64 1, !dbg !53
  %3050 = insertelement <4 x half> %3049, half %1952, i64 2, !dbg !53
  %3051 = insertelement <4 x half> %3050, half %1953, i64 3, !dbg !53
  %3052 = insertelement <4 x half> poison, half %1954, i64 0, !dbg !53
  %3053 = insertelement <4 x half> %3052, half %1955, i64 1, !dbg !53
  %3054 = insertelement <4 x half> %3053, half %1956, i64 2, !dbg !53
  %3055 = insertelement <4 x half> %3054, half %1957, i64 3, !dbg !53
  %3056 = insertelement <4 x half> poison, half %1958, i64 0, !dbg !53
  %3057 = insertelement <4 x half> %3056, half %1959, i64 1, !dbg !53
  %3058 = insertelement <4 x half> %3057, half %1960, i64 2, !dbg !53
  %3059 = insertelement <4 x half> %3058, half %1961, i64 3, !dbg !53
  %3060 = insertelement <4 x half> poison, half %1962, i64 0, !dbg !53
  %3061 = insertelement <4 x half> %3060, half %1963, i64 1, !dbg !53
  %3062 = insertelement <4 x half> %3061, half %1964, i64 2, !dbg !53
  %3063 = insertelement <4 x half> %3062, half %1965, i64 3, !dbg !53
  %3064 = insertelement <4 x half> poison, half %1966, i64 0, !dbg !53
  %3065 = insertelement <4 x half> %3064, half %1967, i64 1, !dbg !53
  %3066 = insertelement <4 x half> %3065, half %1968, i64 2, !dbg !53
  %3067 = insertelement <4 x half> %3066, half %1969, i64 3, !dbg !53
  %3068 = insertelement <4 x half> poison, half %1970, i64 0, !dbg !53
  %3069 = insertelement <4 x half> %3068, half %1971, i64 1, !dbg !53
  %3070 = insertelement <4 x half> %3069, half %1972, i64 2, !dbg !53
  %3071 = insertelement <4 x half> %3070, half %1973, i64 3, !dbg !53
  %3072 = insertelement <4 x half> poison, half %1974, i64 0, !dbg !53
  %3073 = insertelement <4 x half> %3072, half %1975, i64 1, !dbg !53
  %3074 = insertelement <4 x half> %3073, half %1976, i64 2, !dbg !53
  %3075 = insertelement <4 x half> %3074, half %1977, i64 3, !dbg !53
  %3076 = insertelement <4 x half> poison, half %1978, i64 0, !dbg !53
  %3077 = insertelement <4 x half> %3076, half %1979, i64 1, !dbg !53
  %3078 = insertelement <4 x half> %3077, half %1980, i64 2, !dbg !53
  %3079 = insertelement <4 x half> %3078, half %1981, i64 3, !dbg !53
  %3080 = insertelement <4 x half> poison, half %1982, i64 0, !dbg !53
  %3081 = insertelement <4 x half> %3080, half %1983, i64 1, !dbg !53
  %3082 = insertelement <4 x half> %3081, half %1984, i64 2, !dbg !53
  %3083 = insertelement <4 x half> %3082, half %1985, i64 3, !dbg !53
  %3084 = insertelement <4 x half> poison, half %1986, i64 0, !dbg !53
  %3085 = insertelement <4 x half> %3084, half %1987, i64 1, !dbg !53
  %3086 = insertelement <4 x half> %3085, half %1988, i64 2, !dbg !53
  %3087 = insertelement <4 x half> %3086, half %1989, i64 3, !dbg !53
  %3088 = insertelement <4 x half> poison, half %1990, i64 0, !dbg !53
  %3089 = insertelement <4 x half> %3088, half %1991, i64 1, !dbg !53
  %3090 = insertelement <4 x half> %3089, half %1992, i64 2, !dbg !53
  %3091 = insertelement <4 x half> %3090, half %1993, i64 3, !dbg !53
  %3092 = insertelement <4 x half> poison, half %1994, i64 0, !dbg !53
  %3093 = insertelement <4 x half> %3092, half %1995, i64 1, !dbg !53
  %3094 = insertelement <4 x half> %3093, half %1996, i64 2, !dbg !53
  %3095 = insertelement <4 x half> %3094, half %1997, i64 3, !dbg !53
  %3096 = insertelement <4 x half> poison, half %1998, i64 0, !dbg !53
  %3097 = insertelement <4 x half> %3096, half %1999, i64 1, !dbg !53
  %3098 = insertelement <4 x half> %3097, half %2000, i64 2, !dbg !53
  %3099 = insertelement <4 x half> %3098, half %2001, i64 3, !dbg !53
  %3100 = insertelement <4 x half> poison, half %2002, i64 0, !dbg !53
  %3101 = insertelement <4 x half> %3100, half %2003, i64 1, !dbg !53
  %3102 = insertelement <4 x half> %3101, half %2004, i64 2, !dbg !53
  %3103 = insertelement <4 x half> %3102, half %2005, i64 3, !dbg !53
  %3104 = insertelement <4 x half> poison, half %2006, i64 0, !dbg !53
  %3105 = insertelement <4 x half> %3104, half %2007, i64 1, !dbg !53
  %3106 = insertelement <4 x half> %3105, half %2008, i64 2, !dbg !53
  %3107 = insertelement <4 x half> %3106, half %2009, i64 3, !dbg !53
  %3108 = insertelement <4 x half> poison, half %2010, i64 0, !dbg !53
  %3109 = insertelement <4 x half> %3108, half %2011, i64 1, !dbg !53
  %3110 = insertelement <4 x half> %3109, half %2012, i64 2, !dbg !53
  %3111 = insertelement <4 x half> %3110, half %2013, i64 3, !dbg !53
  %3112 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %1800, i64 0, !dbg !53
  %3113 = insertelement <16 x float> %3112, float %1801, i64 1, !dbg !53
  %3114 = insertelement <16 x float> %3113, float %1802, i64 2, !dbg !53
  %3115 = insertelement <16 x float> %3114, float %1803, i64 3, !dbg !53
  %3116 = insertelement <16 x float> %3115, float %1804, i64 4, !dbg !53
  %3117 = insertelement <16 x float> %3116, float %1805, i64 5, !dbg !53
  %3118 = insertelement <16 x float> %3117, float %1806, i64 6, !dbg !53
  %3119 = insertelement <16 x float> %3118, float %1807, i64 7, !dbg !53
  %3120 = insertelement <16 x float> %3119, float %1808, i64 8, !dbg !53
  %3121 = insertelement <16 x float> %3120, float %1809, i64 9, !dbg !53
  %3122 = insertelement <16 x float> %3121, float %1810, i64 10, !dbg !53
  %3123 = insertelement <16 x float> %3122, float %1811, i64 11, !dbg !53
  %3124 = insertelement <16 x float> %3123, float %1812, i64 12, !dbg !53
  %3125 = insertelement <16 x float> %3124, float %1813, i64 13, !dbg !53
  %3126 = insertelement <16 x float> %3125, float %1814, i64 14, !dbg !53
  %3127 = insertelement <16 x float> %3126, float %1815, i64 15, !dbg !53
  %3128 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2987, <4 x half> %2968, <16 x float> %3127, i32 0, i32 0, i32 0), !dbg !53
  %3129 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2991, <4 x half> %2969, <16 x float> %3128, i32 0, i32 0, i32 0), !dbg !53
  %3130 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2995, <4 x half> %2970, <16 x float> %3129, i32 0, i32 0, i32 0), !dbg !53
  %3131 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %2999, <4 x half> %2971, <16 x float> %3130, i32 0, i32 0, i32 0), !dbg !53
  %3132 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3003, <4 x half> %2972, <16 x float> %3131, i32 0, i32 0, i32 0), !dbg !53
  %3133 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3007, <4 x half> %2973, <16 x float> %3132, i32 0, i32 0, i32 0), !dbg !53
  %3134 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3011, <4 x half> %2974, <16 x float> %3133, i32 0, i32 0, i32 0), !dbg !53
  %3135 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3015, <4 x half> %2975, <16 x float> %3134, i32 0, i32 0, i32 0), !dbg !53
  %3136 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3019, <4 x half> %2976, <16 x float> %3135, i32 0, i32 0, i32 0), !dbg !53
  %3137 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3023, <4 x half> %2977, <16 x float> %3136, i32 0, i32 0, i32 0), !dbg !53
  %3138 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3027, <4 x half> %2978, <16 x float> %3137, i32 0, i32 0, i32 0), !dbg !53
  %3139 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3031, <4 x half> %2979, <16 x float> %3138, i32 0, i32 0, i32 0), !dbg !53
  %3140 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3035, <4 x half> %2980, <16 x float> %3139, i32 0, i32 0, i32 0), !dbg !53
  %3141 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3039, <4 x half> %2981, <16 x float> %3140, i32 0, i32 0, i32 0), !dbg !53
  %3142 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3043, <4 x half> %2982, <16 x float> %3141, i32 0, i32 0, i32 0), !dbg !53
  %3143 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3047, <4 x half> %2983, <16 x float> %3142, i32 0, i32 0, i32 0), !dbg !53
  %3144 = extractelement <16 x float> %3143, i64 0, !dbg !53
  %3145 = extractelement <16 x float> %3143, i64 1, !dbg !53
  %3146 = extractelement <16 x float> %3143, i64 2, !dbg !53
  %3147 = extractelement <16 x float> %3143, i64 3, !dbg !53
  %3148 = extractelement <16 x float> %3143, i64 4, !dbg !53
  %3149 = extractelement <16 x float> %3143, i64 5, !dbg !53
  %3150 = extractelement <16 x float> %3143, i64 6, !dbg !53
  %3151 = extractelement <16 x float> %3143, i64 7, !dbg !53
  %3152 = extractelement <16 x float> %3143, i64 8, !dbg !53
  %3153 = extractelement <16 x float> %3143, i64 9, !dbg !53
  %3154 = extractelement <16 x float> %3143, i64 10, !dbg !53
  %3155 = extractelement <16 x float> %3143, i64 11, !dbg !53
  %3156 = extractelement <16 x float> %3143, i64 12, !dbg !53
  %3157 = extractelement <16 x float> %3143, i64 13, !dbg !53
  %3158 = extractelement <16 x float> %3143, i64 14, !dbg !53
  %3159 = extractelement <16 x float> %3143, i64 15, !dbg !53
  %3160 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %1816, i64 0, !dbg !53
  %3161 = insertelement <16 x float> %3160, float %1817, i64 1, !dbg !53
  %3162 = insertelement <16 x float> %3161, float %1818, i64 2, !dbg !53
  %3163 = insertelement <16 x float> %3162, float %1819, i64 3, !dbg !53
  %3164 = insertelement <16 x float> %3163, float %1820, i64 4, !dbg !53
  %3165 = insertelement <16 x float> %3164, float %1821, i64 5, !dbg !53
  %3166 = insertelement <16 x float> %3165, float %1822, i64 6, !dbg !53
  %3167 = insertelement <16 x float> %3166, float %1823, i64 7, !dbg !53
  %3168 = insertelement <16 x float> %3167, float %1824, i64 8, !dbg !53
  %3169 = insertelement <16 x float> %3168, float %1825, i64 9, !dbg !53
  %3170 = insertelement <16 x float> %3169, float %1826, i64 10, !dbg !53
  %3171 = insertelement <16 x float> %3170, float %1827, i64 11, !dbg !53
  %3172 = insertelement <16 x float> %3171, float %1828, i64 12, !dbg !53
  %3173 = insertelement <16 x float> %3172, float %1829, i64 13, !dbg !53
  %3174 = insertelement <16 x float> %3173, float %1830, i64 14, !dbg !53
  %3175 = insertelement <16 x float> %3174, float %1831, i64 15, !dbg !53
  %3176 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3051, <4 x half> %2968, <16 x float> %3175, i32 0, i32 0, i32 0), !dbg !53
  %3177 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3055, <4 x half> %2969, <16 x float> %3176, i32 0, i32 0, i32 0), !dbg !53
  %3178 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3059, <4 x half> %2970, <16 x float> %3177, i32 0, i32 0, i32 0), !dbg !53
  %3179 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3063, <4 x half> %2971, <16 x float> %3178, i32 0, i32 0, i32 0), !dbg !53
  %3180 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3067, <4 x half> %2972, <16 x float> %3179, i32 0, i32 0, i32 0), !dbg !53
  %3181 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3071, <4 x half> %2973, <16 x float> %3180, i32 0, i32 0, i32 0), !dbg !53
  %3182 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3075, <4 x half> %2974, <16 x float> %3181, i32 0, i32 0, i32 0), !dbg !53
  %3183 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3079, <4 x half> %2975, <16 x float> %3182, i32 0, i32 0, i32 0), !dbg !53
  %3184 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3083, <4 x half> %2976, <16 x float> %3183, i32 0, i32 0, i32 0), !dbg !53
  %3185 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3087, <4 x half> %2977, <16 x float> %3184, i32 0, i32 0, i32 0), !dbg !53
  %3186 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3091, <4 x half> %2978, <16 x float> %3185, i32 0, i32 0, i32 0), !dbg !53
  %3187 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3095, <4 x half> %2979, <16 x float> %3186, i32 0, i32 0, i32 0), !dbg !53
  %3188 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3099, <4 x half> %2980, <16 x float> %3187, i32 0, i32 0, i32 0), !dbg !53
  %3189 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3103, <4 x half> %2981, <16 x float> %3188, i32 0, i32 0, i32 0), !dbg !53
  %3190 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3107, <4 x half> %2982, <16 x float> %3189, i32 0, i32 0, i32 0), !dbg !53
  %3191 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %3111, <4 x half> %2983, <16 x float> %3190, i32 0, i32 0, i32 0), !dbg !53
  %3192 = extractelement <16 x float> %3191, i64 0, !dbg !53
  %3193 = extractelement <16 x float> %3191, i64 1, !dbg !53
  %3194 = extractelement <16 x float> %3191, i64 2, !dbg !53
  %3195 = extractelement <16 x float> %3191, i64 3, !dbg !53
  %3196 = extractelement <16 x float> %3191, i64 4, !dbg !53
  %3197 = extractelement <16 x float> %3191, i64 5, !dbg !53
  %3198 = extractelement <16 x float> %3191, i64 6, !dbg !53
  %3199 = extractelement <16 x float> %3191, i64 7, !dbg !53
  %3200 = extractelement <16 x float> %3191, i64 8, !dbg !53
  %3201 = extractelement <16 x float> %3191, i64 9, !dbg !53
  %3202 = extractelement <16 x float> %3191, i64 10, !dbg !53
  %3203 = extractelement <16 x float> %3191, i64 11, !dbg !53
  %3204 = extractelement <16 x float> %3191, i64 12, !dbg !53
  %3205 = extractelement <16 x float> %3191, i64 13, !dbg !53
  %3206 = extractelement <16 x float> %3191, i64 14, !dbg !53
  %3207 = extractelement <16 x float> %3191, i64 15, !dbg !53
  %3208 = add i64 %1797, %70, !dbg !54
  %3209 = add i64 %1797, %71, !dbg !54
  %3210 = mul i64 %3208, %29, !dbg !54
  %3211 = mul i64 %3209, %29, !dbg !54
  %3212 = getelementptr float, ptr addrspace(1) %6, i64 %3210, !dbg !54
  %3213 = getelementptr float, ptr addrspace(1) %3212, i64 %132, !dbg !54
  %3214 = getelementptr float, ptr addrspace(1) %3212, i64 %133, !dbg !54
  %3215 = getelementptr float, ptr addrspace(1) %6, i64 %3211, !dbg !54
  %3216 = getelementptr float, ptr addrspace(1) %3215, i64 %132, !dbg !54
  %3217 = getelementptr float, ptr addrspace(1) %3215, i64 %133, !dbg !54
  %3218 = addrspacecast ptr addrspace(1) %3213 to ptr, !dbg !54
  %3219 = load <4 x float>, ptr %3218, align 16, !dbg !54
  %3220 = addrspacecast ptr addrspace(1) %3214 to ptr, !dbg !54
  %3221 = load <4 x float>, ptr %3220, align 16, !dbg !54
  %3222 = addrspacecast ptr addrspace(1) %3216 to ptr, !dbg !54
  %3223 = load <4 x float>, ptr %3222, align 16, !dbg !54
  %3224 = addrspacecast ptr addrspace(1) %3217 to ptr, !dbg !54
  %3225 = load <4 x float>, ptr %3224, align 16, !dbg !54
  fence syncscope("workgroup") release, !dbg !54
  tail call void @llvm.amdgcn.s.barrier(), !dbg !54
  fence syncscope("workgroup") acquire, !dbg !54
  %3226 = shufflevector <4 x float> %3219, <4 x float> poison, <1 x i32> zeroinitializer, !dbg !54
  store <1 x float> %3226, ptr addrspace(3) %1207, align 4, !dbg !54
  %3227 = shufflevector <4 x float> %3219, <4 x float> poison, <1 x i32> <i32 1>, !dbg !54
  store <1 x float> %3227, ptr addrspace(3) %1211, align 4, !dbg !54
  %3228 = shufflevector <4 x float> %3219, <4 x float> poison, <1 x i32> <i32 2>, !dbg !54
  store <1 x float> %3228, ptr addrspace(3) %1215, align 4, !dbg !54
  %3229 = shufflevector <4 x float> %3219, <4 x float> poison, <1 x i32> <i32 3>, !dbg !54
  store <1 x float> %3229, ptr addrspace(3) %1219, align 4, !dbg !54
  %3230 = shufflevector <4 x float> %3221, <4 x float> poison, <1 x i32> zeroinitializer, !dbg !54
  store <1 x float> %3230, ptr addrspace(3) %1223, align 4, !dbg !54
  %3231 = shufflevector <4 x float> %3221, <4 x float> poison, <1 x i32> <i32 1>, !dbg !54
  store <1 x float> %3231, ptr addrspace(3) %1227, align 4, !dbg !54
  %3232 = shufflevector <4 x float> %3221, <4 x float> poison, <1 x i32> <i32 2>, !dbg !54
  store <1 x float> %3232, ptr addrspace(3) %1231, align 4, !dbg !54
  %3233 = shufflevector <4 x float> %3221, <4 x float> poison, <1 x i32> <i32 3>, !dbg !54
  store <1 x float> %3233, ptr addrspace(3) %1235, align 4, !dbg !54
  %3234 = shufflevector <4 x float> %3223, <4 x float> poison, <1 x i32> zeroinitializer, !dbg !54
  store <1 x float> %3234, ptr addrspace(3) %1238, align 4, !dbg !54
  %3235 = shufflevector <4 x float> %3223, <4 x float> poison, <1 x i32> <i32 1>, !dbg !54
  store <1 x float> %3235, ptr addrspace(3) %1241, align 4, !dbg !54
  %3236 = shufflevector <4 x float> %3223, <4 x float> poison, <1 x i32> <i32 2>, !dbg !54
  store <1 x float> %3236, ptr addrspace(3) %1244, align 4, !dbg !54
  %3237 = shufflevector <4 x float> %3223, <4 x float> poison, <1 x i32> <i32 3>, !dbg !54
  store <1 x float> %3237, ptr addrspace(3) %1247, align 4, !dbg !54
  %3238 = shufflevector <4 x float> %3225, <4 x float> poison, <1 x i32> zeroinitializer, !dbg !54
  store <1 x float> %3238, ptr addrspace(3) %1250, align 4, !dbg !54
  %3239 = shufflevector <4 x float> %3225, <4 x float> poison, <1 x i32> <i32 1>, !dbg !54
  store <1 x float> %3239, ptr addrspace(3) %1253, align 4, !dbg !54
  %3240 = shufflevector <4 x float> %3225, <4 x float> poison, <1 x i32> <i32 2>, !dbg !54
  store <1 x float> %3240, ptr addrspace(3) %1256, align 4, !dbg !54
  %3241 = shufflevector <4 x float> %3225, <4 x float> poison, <1 x i32> <i32 3>, !dbg !54
  store <1 x float> %3241, ptr addrspace(3) %1259, align 4, !dbg !54
  fence syncscope("workgroup") release, !dbg !54
  tail call void @llvm.amdgcn.s.barrier(), !dbg !54
  fence syncscope("workgroup") acquire, !dbg !54
  %3242 = load <1 x float>, ptr addrspace(3) %1262, align 4, !dbg !54
  %3243 = load <1 x float>, ptr addrspace(3) %1265, align 4, !dbg !54
  %3244 = load <1 x float>, ptr addrspace(3) %1268, align 4, !dbg !54
  %3245 = shufflevector <1 x float> %3244, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3246 = load <1 x float>, ptr addrspace(3) %1271, align 4, !dbg !54
  %3247 = shufflevector <1 x float> %3246, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3248 = load <1 x float>, ptr addrspace(3) %1274, align 4, !dbg !54
  %3249 = shufflevector <1 x float> %3248, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3250 = load <1 x float>, ptr addrspace(3) %1277, align 4, !dbg !54
  %3251 = shufflevector <1 x float> %3250, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3252 = load <1 x float>, ptr addrspace(3) %1280, align 4, !dbg !54
  %3253 = shufflevector <1 x float> %3252, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3254 = load <1 x float>, ptr addrspace(3) %1283, align 4, !dbg !54
  %3255 = shufflevector <1 x float> %3254, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3256 = load <1 x float>, ptr addrspace(3) %1287, align 4, !dbg !54
  %3257 = shufflevector <1 x float> %3256, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3258 = load <1 x float>, ptr addrspace(3) %1291, align 4, !dbg !54
  %3259 = shufflevector <1 x float> %3258, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3260 = load <1 x float>, ptr addrspace(3) %1295, align 4, !dbg !54
  %3261 = shufflevector <1 x float> %3260, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3262 = load <1 x float>, ptr addrspace(3) %1299, align 4, !dbg !54
  %3263 = shufflevector <1 x float> %3262, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3264 = load <1 x float>, ptr addrspace(3) %1303, align 4, !dbg !54
  %3265 = shufflevector <1 x float> %3264, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3266 = load <1 x float>, ptr addrspace(3) %1307, align 4, !dbg !54
  %3267 = shufflevector <1 x float> %3266, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3268 = load <1 x float>, ptr addrspace(3) %1311, align 4, !dbg !54
  %3269 = shufflevector <1 x float> %3268, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3270 = load <1 x float>, ptr addrspace(3) %1315, align 4, !dbg !54
  %3271 = shufflevector <1 x float> %3270, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3272 = load <1 x float>, ptr addrspace(3) %1319, align 4, !dbg !54
  %3273 = load <1 x float>, ptr addrspace(3) %1323, align 4, !dbg !54
  %3274 = load <1 x float>, ptr addrspace(3) %1327, align 4, !dbg !54
  %3275 = shufflevector <1 x float> %3274, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3276 = load <1 x float>, ptr addrspace(3) %1331, align 4, !dbg !54
  %3277 = shufflevector <1 x float> %3276, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3278 = load <1 x float>, ptr addrspace(3) %1335, align 4, !dbg !54
  %3279 = shufflevector <1 x float> %3278, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3280 = load <1 x float>, ptr addrspace(3) %1339, align 4, !dbg !54
  %3281 = shufflevector <1 x float> %3280, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3282 = load <1 x float>, ptr addrspace(3) %1343, align 4, !dbg !54
  %3283 = shufflevector <1 x float> %3282, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3284 = load <1 x float>, ptr addrspace(3) %1347, align 4, !dbg !54
  %3285 = shufflevector <1 x float> %3284, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3286 = load <1 x float>, ptr addrspace(3) %1351, align 4, !dbg !54
  %3287 = shufflevector <1 x float> %3286, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3288 = load <1 x float>, ptr addrspace(3) %1355, align 4, !dbg !54
  %3289 = shufflevector <1 x float> %3288, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3290 = load <1 x float>, ptr addrspace(3) %1359, align 4, !dbg !54
  %3291 = shufflevector <1 x float> %3290, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3292 = load <1 x float>, ptr addrspace(3) %1363, align 4, !dbg !54
  %3293 = shufflevector <1 x float> %3292, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3294 = load <1 x float>, ptr addrspace(3) %1367, align 4, !dbg !54
  %3295 = shufflevector <1 x float> %3294, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3296 = load <1 x float>, ptr addrspace(3) %1371, align 4, !dbg !54
  %3297 = shufflevector <1 x float> %3296, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3298 = load <1 x float>, ptr addrspace(3) %1375, align 4, !dbg !54
  %3299 = shufflevector <1 x float> %3298, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3300 = load <1 x float>, ptr addrspace(3) %1379, align 4, !dbg !54
  %3301 = shufflevector <1 x float> %3300, <1 x float> poison, <16 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !51
  tail call void @llvm.amdgcn.s.barrier(), !dbg !51
  fence syncscope("workgroup") acquire, !dbg !51
  %3302 = shufflevector <1 x float> %3242, <1 x float> %3243, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3303 = shufflevector <16 x float> %3302, <16 x float> %3245, <16 x i32> <i32 0, i32 1, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3304 = shufflevector <16 x float> %3303, <16 x float> %3247, <16 x i32> <i32 0, i32 1, i32 2, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3305 = shufflevector <16 x float> %3304, <16 x float> %3249, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3306 = shufflevector <16 x float> %3305, <16 x float> %3251, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3307 = shufflevector <16 x float> %3306, <16 x float> %3253, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3308 = shufflevector <16 x float> %3307, <16 x float> %3255, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3309 = shufflevector <16 x float> %3308, <16 x float> %3257, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3310 = shufflevector <16 x float> %3309, <16 x float> %3259, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3311 = shufflevector <16 x float> %3310, <16 x float> %3261, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3312 = shufflevector <16 x float> %3311, <16 x float> %3263, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 16, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3313 = shufflevector <16 x float> %3312, <16 x float> %3265, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3314 = shufflevector <16 x float> %3313, <16 x float> %3267, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 poison, i32 poison>, !dbg !55
  %3315 = shufflevector <16 x float> %3314, <16 x float> %3269, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 16, i32 poison>, !dbg !55
  %3316 = shufflevector <16 x float> %3315, <16 x float> %3271, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 16>, !dbg !55
  %3317 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1671, <4 x half> %2843, <16 x float> %3316, i32 0, i32 0, i32 0), !dbg !55
  %3318 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1675, <4 x half> %2847, <16 x float> %3317, i32 0, i32 0, i32 0), !dbg !55
  %3319 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1679, <4 x half> %2851, <16 x float> %3318, i32 0, i32 0, i32 0), !dbg !55
  %3320 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1683, <4 x half> %2855, <16 x float> %3319, i32 0, i32 0, i32 0), !dbg !55
  %3321 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1687, <4 x half> %2859, <16 x float> %3320, i32 0, i32 0, i32 0), !dbg !55
  %3322 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1691, <4 x half> %2863, <16 x float> %3321, i32 0, i32 0, i32 0), !dbg !55
  %3323 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1695, <4 x half> %2867, <16 x float> %3322, i32 0, i32 0, i32 0), !dbg !55
  %3324 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1699, <4 x half> %2871, <16 x float> %3323, i32 0, i32 0, i32 0), !dbg !55
  %3325 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1703, <4 x half> %2875, <16 x float> %3324, i32 0, i32 0, i32 0), !dbg !55
  %3326 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1707, <4 x half> %2879, <16 x float> %3325, i32 0, i32 0, i32 0), !dbg !55
  %3327 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1711, <4 x half> %2883, <16 x float> %3326, i32 0, i32 0, i32 0), !dbg !55
  %3328 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1715, <4 x half> %2887, <16 x float> %3327, i32 0, i32 0, i32 0), !dbg !55
  %3329 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1719, <4 x half> %2891, <16 x float> %3328, i32 0, i32 0, i32 0), !dbg !55
  %3330 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1723, <4 x half> %2895, <16 x float> %3329, i32 0, i32 0, i32 0), !dbg !55
  %3331 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1727, <4 x half> %2899, <16 x float> %3330, i32 0, i32 0, i32 0), !dbg !55
  %3332 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1731, <4 x half> %2903, <16 x float> %3331, i32 0, i32 0, i32 0), !dbg !55
  %3333 = shufflevector <1 x float> %3272, <1 x float> %3273, <16 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3334 = shufflevector <16 x float> %3333, <16 x float> %3275, <16 x i32> <i32 0, i32 1, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3335 = shufflevector <16 x float> %3334, <16 x float> %3277, <16 x i32> <i32 0, i32 1, i32 2, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3336 = shufflevector <16 x float> %3335, <16 x float> %3279, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3337 = shufflevector <16 x float> %3336, <16 x float> %3281, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3338 = shufflevector <16 x float> %3337, <16 x float> %3283, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3339 = shufflevector <16 x float> %3338, <16 x float> %3285, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3340 = shufflevector <16 x float> %3339, <16 x float> %3287, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3341 = shufflevector <16 x float> %3340, <16 x float> %3289, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3342 = shufflevector <16 x float> %3341, <16 x float> %3291, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 16, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3343 = shufflevector <16 x float> %3342, <16 x float> %3293, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 16, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3344 = shufflevector <16 x float> %3343, <16 x float> %3295, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 poison, i32 poison, i32 poison>, !dbg !55
  %3345 = shufflevector <16 x float> %3344, <16 x float> %3297, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 16, i32 poison, i32 poison>, !dbg !55
  %3346 = shufflevector <16 x float> %3345, <16 x float> %3299, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 16, i32 poison>, !dbg !55
  %3347 = shufflevector <16 x float> %3346, <16 x float> %3301, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 16>, !dbg !55
  %3348 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1735, <4 x half> %2843, <16 x float> %3347, i32 0, i32 0, i32 0), !dbg !55
  %3349 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1739, <4 x half> %2847, <16 x float> %3348, i32 0, i32 0, i32 0), !dbg !55
  %3350 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1743, <4 x half> %2851, <16 x float> %3349, i32 0, i32 0, i32 0), !dbg !55
  %3351 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1747, <4 x half> %2855, <16 x float> %3350, i32 0, i32 0, i32 0), !dbg !55
  %3352 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1751, <4 x half> %2859, <16 x float> %3351, i32 0, i32 0, i32 0), !dbg !55
  %3353 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1755, <4 x half> %2863, <16 x float> %3352, i32 0, i32 0, i32 0), !dbg !55
  %3354 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1759, <4 x half> %2867, <16 x float> %3353, i32 0, i32 0, i32 0), !dbg !55
  %3355 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1763, <4 x half> %2871, <16 x float> %3354, i32 0, i32 0, i32 0), !dbg !55
  %3356 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1767, <4 x half> %2875, <16 x float> %3355, i32 0, i32 0, i32 0), !dbg !55
  %3357 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1771, <4 x half> %2879, <16 x float> %3356, i32 0, i32 0, i32 0), !dbg !55
  %3358 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1775, <4 x half> %2883, <16 x float> %3357, i32 0, i32 0, i32 0), !dbg !55
  %3359 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1779, <4 x half> %2887, <16 x float> %3358, i32 0, i32 0, i32 0), !dbg !55
  %3360 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1783, <4 x half> %2891, <16 x float> %3359, i32 0, i32 0, i32 0), !dbg !55
  %3361 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1787, <4 x half> %2895, <16 x float> %3360, i32 0, i32 0, i32 0), !dbg !55
  %3362 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1791, <4 x half> %2899, <16 x float> %3361, i32 0, i32 0, i32 0), !dbg !55
  %3363 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1795, <4 x half> %2903, <16 x float> %3362, i32 0, i32 0, i32 0), !dbg !55
  br i1 %1380, label %.critedge, label %.critedge156, !dbg !56

.critedge:                                        ; preds = %2196
  %3364 = add i64 %1797, %69, !dbg !54
  %3365 = mul i64 %3364, %29, !dbg !54
  %3366 = getelementptr float, ptr addrspace(1) %6, i64 %3365, !dbg !54
  %3367 = getelementptr float, ptr addrspace(1) %3366, i64 %131, !dbg !54
  %3368 = getelementptr float, ptr addrspace(1) %3366, i64 %129, !dbg !54
  %3369 = getelementptr float, ptr addrspace(1) %3366, i64 %127, !dbg !54
  %3370 = getelementptr float, ptr addrspace(1) %3366, i64 %125, !dbg !54
  %3371 = getelementptr float, ptr addrspace(1) %3366, i64 %123, !dbg !54
  %3372 = getelementptr float, ptr addrspace(1) %3366, i64 %121, !dbg !54
  %3373 = getelementptr float, ptr addrspace(1) %3366, i64 %119, !dbg !54
  %3374 = getelementptr float, ptr addrspace(1) %3366, i64 %117, !dbg !54
  %3375 = getelementptr float, ptr addrspace(1) %3366, i64 %115, !dbg !54
  %3376 = getelementptr float, ptr addrspace(1) %3366, i64 %113, !dbg !54
  %3377 = getelementptr float, ptr addrspace(1) %3366, i64 %111, !dbg !54
  %3378 = getelementptr float, ptr addrspace(1) %3366, i64 %109, !dbg !54
  %3379 = getelementptr float, ptr addrspace(1) %3366, i64 %107, !dbg !54
  %3380 = getelementptr float, ptr addrspace(1) %3366, i64 %105, !dbg !54
  %3381 = getelementptr float, ptr addrspace(1) %3366, i64 %103, !dbg !54
  %3382 = getelementptr float, ptr addrspace(1) %3366, i64 %101, !dbg !54
  %3383 = getelementptr float, ptr addrspace(1) %3366, i64 %99, !dbg !54
  %3384 = getelementptr float, ptr addrspace(1) %3366, i64 %97, !dbg !54
  %3385 = getelementptr float, ptr addrspace(1) %3366, i64 %95, !dbg !54
  %3386 = getelementptr float, ptr addrspace(1) %3366, i64 %93, !dbg !54
  %3387 = getelementptr float, ptr addrspace(1) %3366, i64 %91, !dbg !54
  %3388 = getelementptr float, ptr addrspace(1) %3366, i64 %89, !dbg !54
  %3389 = getelementptr float, ptr addrspace(1) %3366, i64 %87, !dbg !54
  %3390 = getelementptr float, ptr addrspace(1) %3366, i64 %85, !dbg !54
  %3391 = getelementptr float, ptr addrspace(1) %3366, i64 %83, !dbg !54
  %3392 = getelementptr float, ptr addrspace(1) %3366, i64 %81, !dbg !54
  %3393 = getelementptr float, ptr addrspace(1) %3366, i64 %79, !dbg !54
  %3394 = getelementptr float, ptr addrspace(1) %3366, i64 %77, !dbg !54
  %3395 = getelementptr float, ptr addrspace(1) %3366, i64 %75, !dbg !54
  %3396 = getelementptr float, ptr addrspace(1) %3366, i64 %74, !dbg !54
  %3397 = getelementptr float, ptr addrspace(1) %3366, i64 %73, !dbg !54
  %.bc = bitcast <16 x float> %3332 to <16 x i32>, !dbg !56
  %.extract = extractelement <16 x i32> %.bc, i64 0, !dbg !56
  %3398 = getelementptr float, ptr addrspace(1) %3366, i64 %72, !dbg !54
  store i32 %.extract, ptr addrspace(1) %3398, align 4, !dbg !56
  %.extract66 = extractelement <16 x i32> %.bc, i64 1, !dbg !56
  store i32 %.extract66, ptr addrspace(1) %3397, align 4, !dbg !56
  %.extract68 = extractelement <16 x i32> %.bc, i64 2, !dbg !56
  store i32 %.extract68, ptr addrspace(1) %3396, align 4, !dbg !56
  %.extract70 = extractelement <16 x i32> %.bc, i64 3, !dbg !56
  store i32 %.extract70, ptr addrspace(1) %3395, align 4, !dbg !56
  %.extract72 = extractelement <16 x i32> %.bc, i64 4, !dbg !56
  store i32 %.extract72, ptr addrspace(1) %3394, align 4, !dbg !56
  %.extract74 = extractelement <16 x i32> %.bc, i64 5, !dbg !56
  store i32 %.extract74, ptr addrspace(1) %3393, align 4, !dbg !56
  %.extract76 = extractelement <16 x i32> %.bc, i64 6, !dbg !56
  store i32 %.extract76, ptr addrspace(1) %3392, align 4, !dbg !56
  %.extract78 = extractelement <16 x i32> %.bc, i64 7, !dbg !56
  store i32 %.extract78, ptr addrspace(1) %3391, align 4, !dbg !56
  %.extract80 = extractelement <16 x i32> %.bc, i64 8, !dbg !56
  store i32 %.extract80, ptr addrspace(1) %3390, align 4, !dbg !56
  %.extract82 = extractelement <16 x i32> %.bc, i64 9, !dbg !56
  store i32 %.extract82, ptr addrspace(1) %3389, align 4, !dbg !56
  %.extract84 = extractelement <16 x i32> %.bc, i64 10, !dbg !56
  store i32 %.extract84, ptr addrspace(1) %3388, align 4, !dbg !56
  %.extract86 = extractelement <16 x i32> %.bc, i64 11, !dbg !56
  store i32 %.extract86, ptr addrspace(1) %3387, align 4, !dbg !56
  %.extract88 = extractelement <16 x i32> %.bc, i64 12, !dbg !56
  store i32 %.extract88, ptr addrspace(1) %3386, align 4, !dbg !56
  %.extract90 = extractelement <16 x i32> %.bc, i64 13, !dbg !56
  store i32 %.extract90, ptr addrspace(1) %3385, align 4, !dbg !56
  %.extract92 = extractelement <16 x i32> %.bc, i64 14, !dbg !56
  store i32 %.extract92, ptr addrspace(1) %3384, align 4, !dbg !56
  %.extract94 = extractelement <16 x i32> %.bc, i64 15, !dbg !56
  store i32 %.extract94, ptr addrspace(1) %3383, align 4, !dbg !56
  %.bc95 = bitcast <16 x float> %3363 to <16 x i32>, !dbg !56
  %.extract96 = extractelement <16 x i32> %.bc95, i64 0, !dbg !56
  store i32 %.extract96, ptr addrspace(1) %3382, align 4, !dbg !56
  %.extract98 = extractelement <16 x i32> %.bc95, i64 1, !dbg !56
  store i32 %.extract98, ptr addrspace(1) %3381, align 4, !dbg !56
  %.extract100 = extractelement <16 x i32> %.bc95, i64 2, !dbg !56
  store i32 %.extract100, ptr addrspace(1) %3380, align 4, !dbg !56
  %.extract102 = extractelement <16 x i32> %.bc95, i64 3, !dbg !56
  store i32 %.extract102, ptr addrspace(1) %3379, align 4, !dbg !56
  %.extract104 = extractelement <16 x i32> %.bc95, i64 4, !dbg !56
  store i32 %.extract104, ptr addrspace(1) %3378, align 4, !dbg !56
  %.extract106 = extractelement <16 x i32> %.bc95, i64 5, !dbg !56
  store i32 %.extract106, ptr addrspace(1) %3377, align 4, !dbg !56
  %.extract108 = extractelement <16 x i32> %.bc95, i64 6, !dbg !56
  store i32 %.extract108, ptr addrspace(1) %3376, align 4, !dbg !56
  %.extract110 = extractelement <16 x i32> %.bc95, i64 7, !dbg !56
  store i32 %.extract110, ptr addrspace(1) %3375, align 4, !dbg !56
  %.extract112 = extractelement <16 x i32> %.bc95, i64 8, !dbg !56
  store i32 %.extract112, ptr addrspace(1) %3374, align 4, !dbg !56
  %.extract114 = extractelement <16 x i32> %.bc95, i64 9, !dbg !56
  store i32 %.extract114, ptr addrspace(1) %3373, align 4, !dbg !56
  %.extract116 = extractelement <16 x i32> %.bc95, i64 10, !dbg !56
  store i32 %.extract116, ptr addrspace(1) %3372, align 4, !dbg !56
  %.extract118 = extractelement <16 x i32> %.bc95, i64 11, !dbg !56
  store i32 %.extract118, ptr addrspace(1) %3371, align 4, !dbg !56
  %.extract120 = extractelement <16 x i32> %.bc95, i64 12, !dbg !56
  store i32 %.extract120, ptr addrspace(1) %3370, align 4, !dbg !56
  %.extract122 = extractelement <16 x i32> %.bc95, i64 13, !dbg !56
  store i32 %.extract122, ptr addrspace(1) %3369, align 4, !dbg !56
  %.extract124 = extractelement <16 x i32> %.bc95, i64 14, !dbg !56
  store i32 %.extract124, ptr addrspace(1) %3368, align 4, !dbg !56
  %.extract126 = extractelement <16 x i32> %.bc95, i64 15, !dbg !56
  store i32 %.extract126, ptr addrspace(1) %3367, align 4, !dbg !56
  br label %.critedge156, !dbg !56

.critedge156:                                     ; preds = %2196, %.critedge
  %3399 = add i64 %1799, 128, !dbg !57
  %3400 = add i64 %1798, 128, !dbg !58
  %3401 = add i64 %1797, 128, !dbg !59
  %3402 = add nsw i32 %1864, 128, !dbg !30
  %3403 = icmp slt i32 %3402, %134, !dbg !30
  br i1 %3403, label %1796, label %._crit_edge, !dbg !30

._crit_edge:                                      ; preds = %.critedge156, %1597
  %3404 = phi float [ 0.000000e+00, %1597 ], [ %2738, %.critedge156 ]
  %3405 = phi float [ 0.000000e+00, %1597 ], [ %2739, %.critedge156 ]
  %3406 = phi float [ 0.000000e+00, %1597 ], [ %2740, %.critedge156 ]
  %3407 = phi float [ 0.000000e+00, %1597 ], [ %2741, %.critedge156 ]
  %3408 = phi float [ 0.000000e+00, %1597 ], [ %2742, %.critedge156 ]
  %3409 = phi float [ 0.000000e+00, %1597 ], [ %2743, %.critedge156 ]
  %3410 = phi float [ 0.000000e+00, %1597 ], [ %2744, %.critedge156 ]
  %3411 = phi float [ 0.000000e+00, %1597 ], [ %2745, %.critedge156 ]
  %3412 = phi float [ 0.000000e+00, %1597 ], [ %2746, %.critedge156 ]
  %3413 = phi float [ 0.000000e+00, %1597 ], [ %2747, %.critedge156 ]
  %3414 = phi float [ 0.000000e+00, %1597 ], [ %2748, %.critedge156 ]
  %3415 = phi float [ 0.000000e+00, %1597 ], [ %2749, %.critedge156 ]
  %3416 = phi float [ 0.000000e+00, %1597 ], [ %2750, %.critedge156 ]
  %3417 = phi float [ 0.000000e+00, %1597 ], [ %2751, %.critedge156 ]
  %3418 = phi float [ 0.000000e+00, %1597 ], [ %2752, %.critedge156 ]
  %3419 = phi float [ 0.000000e+00, %1597 ], [ %2753, %.critedge156 ]
  %3420 = phi float [ 0.000000e+00, %1597 ], [ %2786, %.critedge156 ]
  %3421 = phi float [ 0.000000e+00, %1597 ], [ %2787, %.critedge156 ]
  %3422 = phi float [ 0.000000e+00, %1597 ], [ %2788, %.critedge156 ]
  %3423 = phi float [ 0.000000e+00, %1597 ], [ %2789, %.critedge156 ]
  %3424 = phi float [ 0.000000e+00, %1597 ], [ %2790, %.critedge156 ]
  %3425 = phi float [ 0.000000e+00, %1597 ], [ %2791, %.critedge156 ]
  %3426 = phi float [ 0.000000e+00, %1597 ], [ %2792, %.critedge156 ]
  %3427 = phi float [ 0.000000e+00, %1597 ], [ %2793, %.critedge156 ]
  %3428 = phi float [ 0.000000e+00, %1597 ], [ %2794, %.critedge156 ]
  %3429 = phi float [ 0.000000e+00, %1597 ], [ %2795, %.critedge156 ]
  %3430 = phi float [ 0.000000e+00, %1597 ], [ %2796, %.critedge156 ]
  %3431 = phi float [ 0.000000e+00, %1597 ], [ %2797, %.critedge156 ]
  %3432 = phi float [ 0.000000e+00, %1597 ], [ %2798, %.critedge156 ]
  %3433 = phi float [ 0.000000e+00, %1597 ], [ %2799, %.critedge156 ]
  %3434 = phi float [ 0.000000e+00, %1597 ], [ %2800, %.critedge156 ]
  %3435 = phi float [ 0.000000e+00, %1597 ], [ %2801, %.critedge156 ]
  %3436 = phi float [ 0.000000e+00, %1597 ], [ %3144, %.critedge156 ]
  %3437 = phi float [ 0.000000e+00, %1597 ], [ %3145, %.critedge156 ]
  %3438 = phi float [ 0.000000e+00, %1597 ], [ %3146, %.critedge156 ]
  %3439 = phi float [ 0.000000e+00, %1597 ], [ %3147, %.critedge156 ]
  %3440 = phi float [ 0.000000e+00, %1597 ], [ %3148, %.critedge156 ]
  %3441 = phi float [ 0.000000e+00, %1597 ], [ %3149, %.critedge156 ]
  %3442 = phi float [ 0.000000e+00, %1597 ], [ %3150, %.critedge156 ]
  %3443 = phi float [ 0.000000e+00, %1597 ], [ %3151, %.critedge156 ]
  %3444 = phi float [ 0.000000e+00, %1597 ], [ %3152, %.critedge156 ]
  %3445 = phi float [ 0.000000e+00, %1597 ], [ %3153, %.critedge156 ]
  %3446 = phi float [ 0.000000e+00, %1597 ], [ %3154, %.critedge156 ]
  %3447 = phi float [ 0.000000e+00, %1597 ], [ %3155, %.critedge156 ]
  %3448 = phi float [ 0.000000e+00, %1597 ], [ %3156, %.critedge156 ]
  %3449 = phi float [ 0.000000e+00, %1597 ], [ %3157, %.critedge156 ]
  %3450 = phi float [ 0.000000e+00, %1597 ], [ %3158, %.critedge156 ]
  %3451 = phi float [ 0.000000e+00, %1597 ], [ %3159, %.critedge156 ]
  %3452 = phi float [ 0.000000e+00, %1597 ], [ %3192, %.critedge156 ]
  %3453 = phi float [ 0.000000e+00, %1597 ], [ %3193, %.critedge156 ]
  %3454 = phi float [ 0.000000e+00, %1597 ], [ %3194, %.critedge156 ]
  %3455 = phi float [ 0.000000e+00, %1597 ], [ %3195, %.critedge156 ]
  %3456 = phi float [ 0.000000e+00, %1597 ], [ %3196, %.critedge156 ]
  %3457 = phi float [ 0.000000e+00, %1597 ], [ %3197, %.critedge156 ]
  %3458 = phi float [ 0.000000e+00, %1597 ], [ %3198, %.critedge156 ]
  %3459 = phi float [ 0.000000e+00, %1597 ], [ %3199, %.critedge156 ]
  %3460 = phi float [ 0.000000e+00, %1597 ], [ %3200, %.critedge156 ]
  %3461 = phi float [ 0.000000e+00, %1597 ], [ %3201, %.critedge156 ]
  %3462 = phi float [ 0.000000e+00, %1597 ], [ %3202, %.critedge156 ]
  %3463 = phi float [ 0.000000e+00, %1597 ], [ %3203, %.critedge156 ]
  %3464 = phi float [ 0.000000e+00, %1597 ], [ %3204, %.critedge156 ]
  %3465 = phi float [ 0.000000e+00, %1597 ], [ %3205, %.critedge156 ]
  %3466 = phi float [ 0.000000e+00, %1597 ], [ %3206, %.critedge156 ]
  %3467 = phi float [ 0.000000e+00, %1597 ], [ %3207, %.critedge156 ]
  %.lcssa219 = phi i64 [ %1402, %1597 ], [ %3399, %.critedge156 ]
  %.lcssa218 = phi i64 [ %1401, %1597 ], [ %3400, %.critedge156 ]
  %.lcssa = phi i64 [ %1400, %1597 ], [ %3401, %.critedge156 ]
  %3468 = sub nsw i32 %1403, %25, !dbg !60
  %reass.sub = shl i32 %3468, 7, !dbg !60
  %3469 = add i32 %reass.sub, 128, !dbg !60
  %3470 = sext i32 %3469 to i64, !dbg !61
  %3471 = add i64 %.lcssa219, %3470, !dbg !61
  %3472 = add i64 %.lcssa218, %3470, !dbg !62
  %3473 = add i64 %.lcssa, %3470, !dbg !63
  %3474 = add nsw i64 %1399, 128, !dbg !64
  %3475 = add i64 %1399, %69, !dbg !65
  %3476 = icmp sgt i64 %3475, -1, !dbg !65
  %3477 = icmp slt i64 %3475, %28, !dbg !65
  %3478 = and i1 %3476, %3477, !dbg !65
  %3479 = and i1 %1380, %3478, !dbg !65
  br i1 %3479, label %3480, label %3613, !dbg !65

3480:                                             ; preds = %._crit_edge
  %3481 = mul i64 %3475, %29, !dbg !65
  %3482 = getelementptr half, ptr addrspace(1) %8, i64 %3481, !dbg !65
  %3483 = getelementptr half, ptr addrspace(1) %3482, i64 %131, !dbg !65
  %3484 = getelementptr half, ptr addrspace(1) %3482, i64 %129, !dbg !65
  %3485 = getelementptr half, ptr addrspace(1) %3482, i64 %127, !dbg !65
  %3486 = getelementptr half, ptr addrspace(1) %3482, i64 %125, !dbg !65
  %3487 = getelementptr half, ptr addrspace(1) %3482, i64 %123, !dbg !65
  %3488 = getelementptr half, ptr addrspace(1) %3482, i64 %121, !dbg !65
  %3489 = getelementptr half, ptr addrspace(1) %3482, i64 %119, !dbg !65
  %3490 = getelementptr half, ptr addrspace(1) %3482, i64 %117, !dbg !65
  %3491 = getelementptr half, ptr addrspace(1) %3482, i64 %115, !dbg !65
  %3492 = getelementptr half, ptr addrspace(1) %3482, i64 %113, !dbg !65
  %3493 = getelementptr half, ptr addrspace(1) %3482, i64 %111, !dbg !65
  %3494 = getelementptr half, ptr addrspace(1) %3482, i64 %109, !dbg !65
  %3495 = getelementptr half, ptr addrspace(1) %3482, i64 %107, !dbg !65
  %3496 = getelementptr half, ptr addrspace(1) %3482, i64 %105, !dbg !65
  %3497 = getelementptr half, ptr addrspace(1) %3482, i64 %103, !dbg !65
  %3498 = getelementptr half, ptr addrspace(1) %3482, i64 %101, !dbg !65
  %3499 = getelementptr half, ptr addrspace(1) %3482, i64 %99, !dbg !65
  %3500 = getelementptr half, ptr addrspace(1) %3482, i64 %97, !dbg !65
  %3501 = getelementptr half, ptr addrspace(1) %3482, i64 %95, !dbg !65
  %3502 = getelementptr half, ptr addrspace(1) %3482, i64 %93, !dbg !65
  %3503 = getelementptr half, ptr addrspace(1) %3482, i64 %91, !dbg !65
  %3504 = getelementptr half, ptr addrspace(1) %3482, i64 %89, !dbg !65
  %3505 = getelementptr half, ptr addrspace(1) %3482, i64 %87, !dbg !65
  %3506 = getelementptr half, ptr addrspace(1) %3482, i64 %85, !dbg !65
  %3507 = getelementptr half, ptr addrspace(1) %3482, i64 %83, !dbg !65
  %3508 = getelementptr half, ptr addrspace(1) %3482, i64 %81, !dbg !65
  %3509 = getelementptr half, ptr addrspace(1) %3482, i64 %79, !dbg !65
  %3510 = getelementptr half, ptr addrspace(1) %3482, i64 %77, !dbg !65
  %3511 = getelementptr half, ptr addrspace(1) %3482, i64 %75, !dbg !65
  %3512 = getelementptr half, ptr addrspace(1) %3482, i64 %74, !dbg !65
  %3513 = getelementptr half, ptr addrspace(1) %3482, i64 %73, !dbg !65
  %3514 = fptrunc float %3435 to half, !dbg !66
  %3515 = fptrunc float %3434 to half, !dbg !66
  %3516 = fptrunc float %3433 to half, !dbg !66
  %3517 = fptrunc float %3432 to half, !dbg !66
  %3518 = fptrunc float %3431 to half, !dbg !66
  %3519 = fptrunc float %3430 to half, !dbg !66
  %3520 = fptrunc float %3429 to half, !dbg !66
  %3521 = fptrunc float %3428 to half, !dbg !66
  %3522 = fptrunc float %3427 to half, !dbg !66
  %3523 = fptrunc float %3426 to half, !dbg !66
  %3524 = fptrunc float %3425 to half, !dbg !66
  %3525 = fptrunc float %3424 to half, !dbg !66
  %3526 = fptrunc float %3423 to half, !dbg !66
  %3527 = fptrunc float %3422 to half, !dbg !66
  %3528 = fptrunc float %3421 to half, !dbg !66
  %3529 = fptrunc float %3420 to half, !dbg !66
  %3530 = fptrunc float %3419 to half, !dbg !66
  %3531 = fptrunc float %3418 to half, !dbg !66
  %3532 = fptrunc float %3417 to half, !dbg !66
  %3533 = fptrunc float %3416 to half, !dbg !66
  %3534 = fptrunc float %3415 to half, !dbg !66
  %3535 = fptrunc float %3414 to half, !dbg !66
  %3536 = fptrunc float %3413 to half, !dbg !66
  %3537 = fptrunc float %3412 to half, !dbg !66
  %3538 = fptrunc float %3411 to half, !dbg !66
  %3539 = fptrunc float %3410 to half, !dbg !66
  %3540 = fptrunc float %3409 to half, !dbg !66
  %3541 = fptrunc float %3408 to half, !dbg !66
  %3542 = fptrunc float %3407 to half, !dbg !66
  %3543 = fptrunc float %3406 to half, !dbg !66
  %3544 = fptrunc float %3405 to half, !dbg !66
  %3545 = fptrunc float %3404 to half, !dbg !66
  %3546 = getelementptr half, ptr addrspace(1) %3482, i64 %72, !dbg !65
  store half %3545, ptr addrspace(1) %3546, align 2, !dbg !65
  store half %3544, ptr addrspace(1) %3513, align 2, !dbg !65
  store half %3543, ptr addrspace(1) %3512, align 2, !dbg !65
  store half %3542, ptr addrspace(1) %3511, align 2, !dbg !65
  store half %3541, ptr addrspace(1) %3510, align 2, !dbg !65
  store half %3540, ptr addrspace(1) %3509, align 2, !dbg !65
  store half %3539, ptr addrspace(1) %3508, align 2, !dbg !65
  store half %3538, ptr addrspace(1) %3507, align 2, !dbg !65
  store half %3537, ptr addrspace(1) %3506, align 2, !dbg !65
  store half %3536, ptr addrspace(1) %3505, align 2, !dbg !65
  store half %3535, ptr addrspace(1) %3504, align 2, !dbg !65
  store half %3534, ptr addrspace(1) %3503, align 2, !dbg !65
  store half %3533, ptr addrspace(1) %3502, align 2, !dbg !65
  store half %3532, ptr addrspace(1) %3501, align 2, !dbg !65
  store half %3531, ptr addrspace(1) %3500, align 2, !dbg !65
  store half %3530, ptr addrspace(1) %3499, align 2, !dbg !65
  store half %3529, ptr addrspace(1) %3498, align 2, !dbg !65
  store half %3528, ptr addrspace(1) %3497, align 2, !dbg !65
  store half %3527, ptr addrspace(1) %3496, align 2, !dbg !65
  store half %3526, ptr addrspace(1) %3495, align 2, !dbg !65
  store half %3525, ptr addrspace(1) %3494, align 2, !dbg !65
  store half %3524, ptr addrspace(1) %3493, align 2, !dbg !65
  store half %3523, ptr addrspace(1) %3492, align 2, !dbg !65
  store half %3522, ptr addrspace(1) %3491, align 2, !dbg !65
  store half %3521, ptr addrspace(1) %3490, align 2, !dbg !65
  store half %3520, ptr addrspace(1) %3489, align 2, !dbg !65
  store half %3519, ptr addrspace(1) %3488, align 2, !dbg !65
  store half %3518, ptr addrspace(1) %3487, align 2, !dbg !65
  store half %3517, ptr addrspace(1) %3486, align 2, !dbg !65
  store half %3516, ptr addrspace(1) %3485, align 2, !dbg !65
  store half %3515, ptr addrspace(1) %3484, align 2, !dbg !65
  store half %3514, ptr addrspace(1) %3483, align 2, !dbg !65
  %3547 = mul i64 %3475, %29, !dbg !67
  %3548 = getelementptr half, ptr addrspace(1) %7, i64 %3547, !dbg !67
  %3549 = getelementptr half, ptr addrspace(1) %3548, i64 %131, !dbg !67
  %3550 = getelementptr half, ptr addrspace(1) %3548, i64 %129, !dbg !67
  %3551 = getelementptr half, ptr addrspace(1) %3548, i64 %127, !dbg !67
  %3552 = getelementptr half, ptr addrspace(1) %3548, i64 %125, !dbg !67
  %3553 = getelementptr half, ptr addrspace(1) %3548, i64 %123, !dbg !67
  %3554 = getelementptr half, ptr addrspace(1) %3548, i64 %121, !dbg !67
  %3555 = getelementptr half, ptr addrspace(1) %3548, i64 %119, !dbg !67
  %3556 = getelementptr half, ptr addrspace(1) %3548, i64 %117, !dbg !67
  %3557 = getelementptr half, ptr addrspace(1) %3548, i64 %115, !dbg !67
  %3558 = getelementptr half, ptr addrspace(1) %3548, i64 %113, !dbg !67
  %3559 = getelementptr half, ptr addrspace(1) %3548, i64 %111, !dbg !67
  %3560 = getelementptr half, ptr addrspace(1) %3548, i64 %109, !dbg !67
  %3561 = getelementptr half, ptr addrspace(1) %3548, i64 %107, !dbg !67
  %3562 = getelementptr half, ptr addrspace(1) %3548, i64 %105, !dbg !67
  %3563 = getelementptr half, ptr addrspace(1) %3548, i64 %103, !dbg !67
  %3564 = getelementptr half, ptr addrspace(1) %3548, i64 %101, !dbg !67
  %3565 = getelementptr half, ptr addrspace(1) %3548, i64 %99, !dbg !67
  %3566 = getelementptr half, ptr addrspace(1) %3548, i64 %97, !dbg !67
  %3567 = getelementptr half, ptr addrspace(1) %3548, i64 %95, !dbg !67
  %3568 = getelementptr half, ptr addrspace(1) %3548, i64 %93, !dbg !67
  %3569 = getelementptr half, ptr addrspace(1) %3548, i64 %91, !dbg !67
  %3570 = getelementptr half, ptr addrspace(1) %3548, i64 %89, !dbg !67
  %3571 = getelementptr half, ptr addrspace(1) %3548, i64 %87, !dbg !67
  %3572 = getelementptr half, ptr addrspace(1) %3548, i64 %85, !dbg !67
  %3573 = getelementptr half, ptr addrspace(1) %3548, i64 %83, !dbg !67
  %3574 = getelementptr half, ptr addrspace(1) %3548, i64 %81, !dbg !67
  %3575 = getelementptr half, ptr addrspace(1) %3548, i64 %79, !dbg !67
  %3576 = getelementptr half, ptr addrspace(1) %3548, i64 %77, !dbg !67
  %3577 = getelementptr half, ptr addrspace(1) %3548, i64 %75, !dbg !67
  %3578 = getelementptr half, ptr addrspace(1) %3548, i64 %74, !dbg !67
  %3579 = getelementptr half, ptr addrspace(1) %3548, i64 %73, !dbg !67
  %3580 = fptrunc float %3467 to half, !dbg !68
  %3581 = fptrunc float %3466 to half, !dbg !68
  %3582 = fptrunc float %3465 to half, !dbg !68
  %3583 = fptrunc float %3464 to half, !dbg !68
  %3584 = fptrunc float %3463 to half, !dbg !68
  %3585 = fptrunc float %3462 to half, !dbg !68
  %3586 = fptrunc float %3461 to half, !dbg !68
  %3587 = fptrunc float %3460 to half, !dbg !68
  %3588 = fptrunc float %3459 to half, !dbg !68
  %3589 = fptrunc float %3458 to half, !dbg !68
  %3590 = fptrunc float %3457 to half, !dbg !68
  %3591 = fptrunc float %3456 to half, !dbg !68
  %3592 = fptrunc float %3455 to half, !dbg !68
  %3593 = fptrunc float %3454 to half, !dbg !68
  %3594 = fptrunc float %3453 to half, !dbg !68
  %3595 = fptrunc float %3452 to half, !dbg !68
  %3596 = fptrunc float %3451 to half, !dbg !68
  %3597 = fptrunc float %3450 to half, !dbg !68
  %3598 = fptrunc float %3449 to half, !dbg !68
  %3599 = fptrunc float %3448 to half, !dbg !68
  %3600 = fptrunc float %3447 to half, !dbg !68
  %3601 = fptrunc float %3446 to half, !dbg !68
  %3602 = fptrunc float %3445 to half, !dbg !68
  %3603 = fptrunc float %3444 to half, !dbg !68
  %3604 = fptrunc float %3443 to half, !dbg !68
  %3605 = fptrunc float %3442 to half, !dbg !68
  %3606 = fptrunc float %3441 to half, !dbg !68
  %3607 = fptrunc float %3440 to half, !dbg !68
  %3608 = fptrunc float %3439 to half, !dbg !68
  %3609 = fptrunc float %3438 to half, !dbg !68
  %3610 = fptrunc float %3437 to half, !dbg !68
  %3611 = fptrunc float %3436 to half, !dbg !68
  %3612 = getelementptr half, ptr addrspace(1) %3548, i64 %72, !dbg !67
  store half %3611, ptr addrspace(1) %3612, align 2, !dbg !67
  store half %3610, ptr addrspace(1) %3579, align 2, !dbg !67
  store half %3609, ptr addrspace(1) %3578, align 2, !dbg !67
  store half %3608, ptr addrspace(1) %3577, align 2, !dbg !67
  store half %3607, ptr addrspace(1) %3576, align 2, !dbg !67
  store half %3606, ptr addrspace(1) %3575, align 2, !dbg !67
  store half %3605, ptr addrspace(1) %3574, align 2, !dbg !67
  store half %3604, ptr addrspace(1) %3573, align 2, !dbg !67
  store half %3603, ptr addrspace(1) %3572, align 2, !dbg !67
  store half %3602, ptr addrspace(1) %3571, align 2, !dbg !67
  store half %3601, ptr addrspace(1) %3570, align 2, !dbg !67
  store half %3600, ptr addrspace(1) %3569, align 2, !dbg !67
  store half %3599, ptr addrspace(1) %3568, align 2, !dbg !67
  store half %3598, ptr addrspace(1) %3567, align 2, !dbg !67
  store half %3597, ptr addrspace(1) %3566, align 2, !dbg !67
  store half %3596, ptr addrspace(1) %3565, align 2, !dbg !67
  store half %3595, ptr addrspace(1) %3564, align 2, !dbg !67
  store half %3594, ptr addrspace(1) %3563, align 2, !dbg !67
  store half %3593, ptr addrspace(1) %3562, align 2, !dbg !67
  store half %3592, ptr addrspace(1) %3561, align 2, !dbg !67
  store half %3591, ptr addrspace(1) %3560, align 2, !dbg !67
  store half %3590, ptr addrspace(1) %3559, align 2, !dbg !67
  store half %3589, ptr addrspace(1) %3558, align 2, !dbg !67
  store half %3588, ptr addrspace(1) %3557, align 2, !dbg !67
  store half %3587, ptr addrspace(1) %3556, align 2, !dbg !67
  store half %3586, ptr addrspace(1) %3555, align 2, !dbg !67
  store half %3585, ptr addrspace(1) %3554, align 2, !dbg !67
  store half %3584, ptr addrspace(1) %3553, align 2, !dbg !67
  store half %3583, ptr addrspace(1) %3552, align 2, !dbg !67
  store half %3582, ptr addrspace(1) %3551, align 2, !dbg !67
  store half %3581, ptr addrspace(1) %3550, align 2, !dbg !67
  store half %3580, ptr addrspace(1) %3549, align 2, !dbg !67
  br label %3613, !dbg !67

3613:                                             ; preds = %._crit_edge, %3480
  %3614 = add nuw nsw i32 %1403, 1, !dbg !19
  %3615 = icmp slt i32 %3614, %25, !dbg !19
  br i1 %3615, label %1398, label %._crit_edge291, !dbg !19

._crit_edge291:                                   ; preds = %3613, %26
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #2

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half>, <4 x half>, <16 x float>, i32 immarg, i32 immarg, i32 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.exp2.v4f32(<4 x float>) #4

attributes #0 = { nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,512" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #3 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.dbg.cu = !{!4}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = !{i32 1, !"wchar_size", i32 4}
!3 = !{i32 8, !"PIC Level", i32 0}
!4 = distinct !DICompileUnit(language: DW_LANG_C, file: !5, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!5 = !DIFile(filename: "test_flashattention.py", directory: "/triton/python/test/unit/hopper")
!6 = distinct !DISubprogram(name: "_bwd_kernel", linkageName: "_bwd_kernel", scope: !5, file: !5, line: 156, type: !7, scopeLine: 156, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4)
!7 = !DISubroutineType(cc: DW_CC_normal, types: !8)
!8 = !{}
!9 = !DILocation(line: 164, column: 27, scope: !6)
!10 = !DILocation(line: 177, column: 8, scope: !6)
!11 = !DILocation(line: 185, column: 8, scope: !6)
!12 = !DILocation(line: 193, column: 8, scope: !6)
!13 = !DILocation(line: 232, column: 36, scope: !6)
!14 = !DILocation(line: 235, column: 30, scope: !6)
!15 = !DILocation(line: 239, column: 30, scope: !6)
!16 = !DILocation(line: 239, column: 21, scope: !6)
!17 = !DILocation(line: 240, column: 21, scope: !6)
!18 = !DILocation(line: 248, column: 45, scope: !6)
!19 = !DILocation(line: 229, column: 28, scope: !6)
!20 = !DILocation(line: 165, column: 22, scope: !6)
!21 = !DILocation(line: 169, column: 32, scope: !6)
!22 = !DILocation(line: 175, column: 48, scope: !6)
!23 = !DILocation(line: 175, column: 40, scope: !6)
!24 = !DILocation(line: 232, column: 23, scope: !6)
!25 = !DILocation(line: 230, column: 23, scope: !6)
!26 = !DILocation(line: 245, column: 20, scope: !6)
!27 = !DILocation(line: 254, column: 36, scope: !6)
!28 = !DILocation(line: 246, column: 20, scope: !6)
!29 = !DILocation(line: 264, column: 38, scope: !6)
!30 = !DILocation(line: 248, column: 54, scope: !6)
!31 = !DILocation(line: 249, column: 36, scope: !6)
!32 = !DILocation(line: 251, column: 24, scope: !6)
!33 = !DILocation(line: 254, column: 27, scope: !6)
!34 = !DILocation(line: 255, column: 51, scope: !6)
!35 = !DILocation(line: 256, column: 33, scope: !6)
!36 = !DILocation(line: 256, column: 24, scope: !6)
!37 = !DILocation(line: 255, column: 73, scope: !6)
!38 = !DILocation(line: 257, column: 28, scope: !6)
!39 = !DILocation(line: 257, column: 39, scope: !6)
!40 = !DILocation(line: 257, column: 23, scope: !6)
!41 = !DILocation(line: 259, column: 25, scope: !6)
!42 = !DILocation(line: 260, column: 39, scope: !6)
!43 = !DILocation(line: 260, column: 34, scope: !6)
!44 = !DILocation(line: 260, column: 53, scope: !6)
!45 = !DILocation(line: 262, column: 34, scope: !6)
!46 = !DILocation(line: 262, column: 25, scope: !6)
!47 = !DILocation(line: 263, column: 66, scope: !6)
!48 = !DILocation(line: 264, column: 29, scope: !6)
!49 = !DILocation(line: 266, column: 21, scope: !6)
!50 = !DILocation(line: 266, column: 26, scope: !6)
!51 = !DILocation(line: 268, column: 40, scope: !6)
!52 = !DILocation(line: 268, column: 34, scope: !6)
!53 = !DILocation(line: 268, column: 54, scope: !6)
!54 = !DILocation(line: 270, column: 25, scope: !6)
!55 = !DILocation(line: 271, column: 44, scope: !6)
!56 = !DILocation(line: 272, column: 34, scope: !6)
!57 = !DILocation(line: 275, column: 48, scope: !6)
!58 = !DILocation(line: 276, column: 50, scope: !6)
!59 = !DILocation(line: 277, column: 50, scope: !6)
!60 = !DILocation(line: 278, column: 50, scope: !6)
!61 = !DILocation(line: 278, column: 44, scope: !6)
!62 = !DILocation(line: 279, column: 46, scope: !6)
!63 = !DILocation(line: 280, column: 46, scope: !6)
!64 = !DILocation(line: 288, column: 46, scope: !6)
!65 = !DILocation(line: 285, column: 30, scope: !6)
!66 = !DILocation(line: 285, column: 36, scope: !6)
!67 = !DILocation(line: 286, column: 30, scope: !6)
!68 = !DILocation(line: 286, column: 36, scope: !6)
!69 = !DILocation(line: 229, column: 4, scope: !6)
