; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

; Function Attrs: mustprogress nofree norecurse nounwind willreturn
define amdgpu_kernel void @_bwd_preprocess(ptr addrspace(1) nocapture readonly %0, ptr addrspace(1) nocapture readonly %1, ptr addrspace(1) nocapture readonly %2, ptr addrspace(1) nocapture writeonly %3, ptr addrspace(1) nocapture writeonly %4) local_unnamed_addr #0 !dbg !4 {
  %6 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !7
  %7 = shl i32 %6, 7, !dbg !8
  %8 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !9
  %9 = lshr i32 %8, 3, !dbg !9
  %10 = and i32 %9, 31, !dbg !9
  %11 = or disjoint i32 %10, 32, !dbg !9
  %12 = or disjoint i32 %10, 64, !dbg !9
  %13 = or disjoint i32 %10, 96, !dbg !9
  %14 = or disjoint i32 %10, %7, !dbg !10
  %15 = or disjoint i32 %11, %7, !dbg !10
  %16 = or disjoint i32 %12, %7, !dbg !10
  %17 = or disjoint i32 %13, %7, !dbg !10
  %18 = shl i32 %14, 6, !dbg !11
  %19 = shl i32 %15, 6, !dbg !11
  %20 = shl i32 %16, 6, !dbg !11
  %21 = shl i32 %17, 6, !dbg !11
  %22 = sext i32 %18 to i64, !dbg !12
  %23 = getelementptr half, ptr addrspace(1) %0, i64 %22, !dbg !12
  %24 = sext i32 %19 to i64, !dbg !12
  %25 = getelementptr half, ptr addrspace(1) %0, i64 %24, !dbg !12
  %26 = sext i32 %20 to i64, !dbg !12
  %27 = getelementptr half, ptr addrspace(1) %0, i64 %26, !dbg !12
  %28 = sext i32 %21 to i64, !dbg !12
  %29 = getelementptr half, ptr addrspace(1) %0, i64 %28, !dbg !12
  %30 = shl i32 %8, 3, !dbg !13
  %31 = and i32 %30, 56, !dbg !13
  %32 = or disjoint i32 %31, 2, !dbg !13
  %33 = or disjoint i32 %31, 4, !dbg !13
  %34 = or disjoint i32 %31, 6, !dbg !13
  %35 = zext nneg i32 %31 to i64, !dbg !14
  %36 = getelementptr half, ptr addrspace(1) %23, i64 %35, !dbg !14
  %37 = getelementptr half, ptr addrspace(1) %25, i64 %35, !dbg !14
  %38 = getelementptr half, ptr addrspace(1) %27, i64 %35, !dbg !14
  %39 = getelementptr half, ptr addrspace(1) %29, i64 %35, !dbg !14
  %40 = addrspacecast ptr addrspace(1) %36 to ptr, !dbg !15
  %41 = getelementptr inbounds i8, ptr %40, i64 4, !dbg !15
  %42 = getelementptr inbounds i8, ptr %40, i64 8, !dbg !15
  %43 = getelementptr inbounds i8, ptr %40, i64 12, !dbg !15
  %44 = addrspacecast ptr addrspace(1) %37 to ptr, !dbg !15
  %45 = getelementptr inbounds i8, ptr %44, i64 4, !dbg !15
  %46 = getelementptr inbounds i8, ptr %44, i64 8, !dbg !15
  %47 = getelementptr inbounds i8, ptr %44, i64 12, !dbg !15
  %48 = addrspacecast ptr addrspace(1) %38 to ptr, !dbg !15
  %49 = getelementptr inbounds i8, ptr %48, i64 4, !dbg !15
  %50 = getelementptr inbounds i8, ptr %48, i64 8, !dbg !15
  %51 = getelementptr inbounds i8, ptr %48, i64 12, !dbg !15
  %52 = addrspacecast ptr addrspace(1) %39 to ptr, !dbg !15
  %53 = getelementptr inbounds i8, ptr %52, i64 4, !dbg !15
  %54 = getelementptr inbounds i8, ptr %52, i64 8, !dbg !15
  %55 = getelementptr inbounds i8, ptr %52, i64 12, !dbg !15
  %56 = getelementptr half, ptr addrspace(1) %1, i64 %22, !dbg !16
  %57 = getelementptr half, ptr addrspace(1) %1, i64 %24, !dbg !16
  %58 = getelementptr half, ptr addrspace(1) %1, i64 %26, !dbg !16
  %59 = getelementptr half, ptr addrspace(1) %1, i64 %28, !dbg !16
  %60 = getelementptr half, ptr addrspace(1) %56, i64 %35, !dbg !17
  %61 = getelementptr half, ptr addrspace(1) %57, i64 %35, !dbg !17
  %62 = getelementptr half, ptr addrspace(1) %58, i64 %35, !dbg !17
  %63 = getelementptr half, ptr addrspace(1) %59, i64 %35, !dbg !17
  %64 = addrspacecast ptr addrspace(1) %60 to ptr, !dbg !18
  %65 = getelementptr inbounds i8, ptr %64, i64 4, !dbg !18
  %66 = getelementptr inbounds i8, ptr %64, i64 8, !dbg !18
  %67 = getelementptr inbounds i8, ptr %64, i64 12, !dbg !18
  %68 = addrspacecast ptr addrspace(1) %61 to ptr, !dbg !18
  %69 = getelementptr inbounds i8, ptr %68, i64 4, !dbg !18
  %70 = getelementptr inbounds i8, ptr %68, i64 8, !dbg !18
  %71 = getelementptr inbounds i8, ptr %68, i64 12, !dbg !18
  %72 = addrspacecast ptr addrspace(1) %62 to ptr, !dbg !18
  %73 = getelementptr inbounds i8, ptr %72, i64 4, !dbg !18
  %74 = getelementptr inbounds i8, ptr %72, i64 8, !dbg !18
  %75 = getelementptr inbounds i8, ptr %72, i64 12, !dbg !18
  %76 = addrspacecast ptr addrspace(1) %63 to ptr, !dbg !18
  %77 = getelementptr inbounds i8, ptr %76, i64 4, !dbg !18
  %78 = getelementptr inbounds i8, ptr %76, i64 8, !dbg !18
  %79 = getelementptr inbounds i8, ptr %76, i64 12, !dbg !18
  %80 = sext i32 %14 to i64, !dbg !19
  %81 = getelementptr float, ptr addrspace(1) %2, i64 %80, !dbg !19
  %82 = sext i32 %15 to i64, !dbg !19
  %83 = getelementptr float, ptr addrspace(1) %2, i64 %82, !dbg !19
  %84 = sext i32 %16 to i64, !dbg !19
  %85 = getelementptr float, ptr addrspace(1) %2, i64 %84, !dbg !19
  %86 = sext i32 %17 to i64, !dbg !19
  %87 = getelementptr float, ptr addrspace(1) %2, i64 %86, !dbg !19
  %88 = addrspacecast ptr addrspace(1) %81 to ptr, !dbg !20
  %89 = load float, ptr %88, align 4, !dbg !20
  %90 = addrspacecast ptr addrspace(1) %83 to ptr, !dbg !20
  %91 = load float, ptr %90, align 4, !dbg !20
  %92 = addrspacecast ptr addrspace(1) %85 to ptr, !dbg !20
  %93 = load float, ptr %92, align 4, !dbg !20
  %94 = addrspacecast ptr addrspace(1) %87 to ptr, !dbg !20
  %95 = load float, ptr %94, align 4, !dbg !20
  %96 = getelementptr half, ptr addrspace(1) %3, i64 %22, !dbg !21
  %97 = getelementptr half, ptr addrspace(1) %3, i64 %24, !dbg !21
  %98 = getelementptr half, ptr addrspace(1) %3, i64 %26, !dbg !21
  %99 = getelementptr half, ptr addrspace(1) %3, i64 %28, !dbg !21
  %100 = getelementptr half, ptr addrspace(1) %96, i64 %35, !dbg !22
  %101 = zext nneg i32 %32 to i64, !dbg !22
  %102 = getelementptr half, ptr addrspace(1) %96, i64 %101, !dbg !22
  %103 = zext nneg i32 %33 to i64, !dbg !22
  %104 = getelementptr half, ptr addrspace(1) %96, i64 %103, !dbg !22
  %105 = zext nneg i32 %34 to i64, !dbg !22
  %106 = getelementptr half, ptr addrspace(1) %96, i64 %105, !dbg !22
  %107 = getelementptr half, ptr addrspace(1) %97, i64 %35, !dbg !22
  %108 = getelementptr half, ptr addrspace(1) %97, i64 %101, !dbg !22
  %109 = getelementptr half, ptr addrspace(1) %97, i64 %103, !dbg !22
  %110 = getelementptr half, ptr addrspace(1) %97, i64 %105, !dbg !22
  %111 = getelementptr half, ptr addrspace(1) %98, i64 %35, !dbg !22
  %112 = getelementptr half, ptr addrspace(1) %98, i64 %101, !dbg !22
  %113 = getelementptr half, ptr addrspace(1) %98, i64 %103, !dbg !22
  %114 = getelementptr half, ptr addrspace(1) %98, i64 %105, !dbg !22
  %115 = getelementptr half, ptr addrspace(1) %99, i64 %35, !dbg !22
  %116 = getelementptr half, ptr addrspace(1) %99, i64 %101, !dbg !22
  %117 = getelementptr half, ptr addrspace(1) %99, i64 %103, !dbg !22
  %118 = getelementptr half, ptr addrspace(1) %99, i64 %105, !dbg !22
  %119 = load <2 x half>, ptr %64, align 16, !dbg !18
  %120 = fpext <2 x half> %119 to <2 x float>, !dbg !23
  %121 = insertelement <2 x float> poison, float %89, i64 0, !dbg !24
  %122 = shufflevector <2 x float> %121, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !24
  %123 = fdiv <2 x float> %120, %122, !dbg !24
  %124 = load <2 x half>, ptr %40, align 16, !dbg !15
  %125 = fpext <2 x half> %124 to <2 x float>, !dbg !25
  %126 = fmul <2 x float> %123, %125, !dbg !26
  %shift = shufflevector <2 x float> %126, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %127 = fadd <2 x float> %126, %shift, !dbg !27
  %128 = fptrunc <2 x float> %123 to <2 x half>, !dbg !32
  %129 = load <2 x half>, ptr %65, align 4, !dbg !18
  %130 = fpext <2 x half> %129 to <2 x float>, !dbg !23
  %131 = fdiv <2 x float> %130, %122, !dbg !24
  %132 = load <2 x half>, ptr %41, align 4, !dbg !15
  %133 = fpext <2 x half> %132 to <2 x float>, !dbg !25
  %134 = fmul <2 x float> %131, %133, !dbg !26
  %135 = fadd <2 x float> %134, %127, !dbg !27
  %shift1 = shufflevector <2 x float> %134, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %136 = fadd <2 x float> %shift1, %135, !dbg !27
  %137 = fptrunc <2 x float> %131 to <2 x half>, !dbg !32
  %138 = load <2 x half>, ptr %66, align 8, !dbg !18
  %139 = fpext <2 x half> %138 to <2 x float>, !dbg !23
  %140 = fdiv <2 x float> %139, %122, !dbg !24
  %141 = load <2 x half>, ptr %42, align 8, !dbg !15
  %142 = fpext <2 x half> %141 to <2 x float>, !dbg !25
  %143 = fmul <2 x float> %140, %142, !dbg !26
  %144 = fadd <2 x float> %143, %136, !dbg !27
  %shift2 = shufflevector <2 x float> %143, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %145 = fadd <2 x float> %shift2, %144, !dbg !27
  %146 = fptrunc <2 x float> %140 to <2 x half>, !dbg !32
  %147 = load <2 x half>, ptr %67, align 4, !dbg !18
  %148 = fpext <2 x half> %147 to <2 x float>, !dbg !23
  %149 = fdiv <2 x float> %148, %122, !dbg !24
  %150 = load <2 x half>, ptr %43, align 4, !dbg !15
  %151 = fpext <2 x half> %150 to <2 x float>, !dbg !25
  %152 = fmul <2 x float> %149, %151, !dbg !26
  %153 = fadd <2 x float> %152, %145, !dbg !27
  %shift3 = shufflevector <2 x float> %152, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %154 = fadd <2 x float> %shift3, %153, !dbg !27
  %155 = extractelement <2 x float> %154, i64 0, !dbg !27
  %156 = bitcast float %155 to i32, !dbg !33
  %157 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %156, i32 4127), !dbg !33
  %158 = bitcast i32 %157 to float, !dbg !33
  %159 = fadd float %155, %158, !dbg !27
  %160 = bitcast float %159 to i32, !dbg !33
  %161 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %160, i32 2079), !dbg !33
  %162 = bitcast i32 %161 to float, !dbg !33
  %163 = fadd float %159, %162, !dbg !27
  %164 = bitcast float %163 to i32, !dbg !33
  %165 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %164, i32 1055), !dbg !33
  %166 = bitcast i32 %165 to float, !dbg !33
  %167 = fadd float %163, %166, !dbg !27
  %168 = fptrunc <2 x float> %149 to <2 x half>, !dbg !32
  %169 = load <2 x half>, ptr %68, align 16, !dbg !18
  %170 = fpext <2 x half> %169 to <2 x float>, !dbg !23
  %171 = insertelement <2 x float> poison, float %91, i64 0, !dbg !24
  %172 = shufflevector <2 x float> %171, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !24
  %173 = fdiv <2 x float> %170, %172, !dbg !24
  %174 = load <2 x half>, ptr %44, align 16, !dbg !15
  %175 = fpext <2 x half> %174 to <2 x float>, !dbg !25
  %176 = fmul <2 x float> %173, %175, !dbg !26
  %shift4 = shufflevector <2 x float> %176, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %177 = fadd <2 x float> %176, %shift4, !dbg !27
  %178 = fptrunc <2 x float> %173 to <2 x half>, !dbg !32
  %179 = load <2 x half>, ptr %69, align 4, !dbg !18
  %180 = fpext <2 x half> %179 to <2 x float>, !dbg !23
  %181 = fdiv <2 x float> %180, %172, !dbg !24
  %182 = load <2 x half>, ptr %45, align 4, !dbg !15
  %183 = fpext <2 x half> %182 to <2 x float>, !dbg !25
  %184 = fmul <2 x float> %181, %183, !dbg !26
  %185 = fadd <2 x float> %184, %177, !dbg !27
  %shift5 = shufflevector <2 x float> %184, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %186 = fadd <2 x float> %shift5, %185, !dbg !27
  %187 = fptrunc <2 x float> %181 to <2 x half>, !dbg !32
  %188 = load <2 x half>, ptr %70, align 8, !dbg !18
  %189 = fpext <2 x half> %188 to <2 x float>, !dbg !23
  %190 = fdiv <2 x float> %189, %172, !dbg !24
  %191 = load <2 x half>, ptr %46, align 8, !dbg !15
  %192 = fpext <2 x half> %191 to <2 x float>, !dbg !25
  %193 = fmul <2 x float> %190, %192, !dbg !26
  %194 = fadd <2 x float> %193, %186, !dbg !27
  %shift6 = shufflevector <2 x float> %193, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %195 = fadd <2 x float> %shift6, %194, !dbg !27
  %196 = fptrunc <2 x float> %190 to <2 x half>, !dbg !32
  %197 = load <2 x half>, ptr %71, align 4, !dbg !18
  %198 = fpext <2 x half> %197 to <2 x float>, !dbg !23
  %199 = fdiv <2 x float> %198, %172, !dbg !24
  %200 = load <2 x half>, ptr %47, align 4, !dbg !15
  %201 = fpext <2 x half> %200 to <2 x float>, !dbg !25
  %202 = fmul <2 x float> %199, %201, !dbg !26
  %203 = fadd <2 x float> %202, %195, !dbg !27
  %shift7 = shufflevector <2 x float> %202, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %204 = fadd <2 x float> %shift7, %203, !dbg !27
  %205 = extractelement <2 x float> %204, i64 0, !dbg !27
  %206 = bitcast float %205 to i32, !dbg !33
  %207 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %206, i32 4127), !dbg !33
  %208 = bitcast i32 %207 to float, !dbg !33
  %209 = fadd float %205, %208, !dbg !27
  %210 = bitcast float %209 to i32, !dbg !33
  %211 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %210, i32 2079), !dbg !33
  %212 = bitcast i32 %211 to float, !dbg !33
  %213 = fadd float %209, %212, !dbg !27
  %214 = bitcast float %213 to i32, !dbg !33
  %215 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %214, i32 1055), !dbg !33
  %216 = bitcast i32 %215 to float, !dbg !33
  %217 = fadd float %213, %216, !dbg !27
  %218 = fptrunc <2 x float> %199 to <2 x half>, !dbg !32
  %219 = load <2 x half>, ptr %72, align 16, !dbg !18
  %220 = fpext <2 x half> %219 to <2 x float>, !dbg !23
  %221 = insertelement <2 x float> poison, float %93, i64 0, !dbg !24
  %222 = shufflevector <2 x float> %221, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !24
  %223 = fdiv <2 x float> %220, %222, !dbg !24
  %224 = load <2 x half>, ptr %48, align 16, !dbg !15
  %225 = fpext <2 x half> %224 to <2 x float>, !dbg !25
  %226 = fmul <2 x float> %223, %225, !dbg !26
  %shift8 = shufflevector <2 x float> %226, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %227 = fadd <2 x float> %226, %shift8, !dbg !27
  %228 = fptrunc <2 x float> %223 to <2 x half>, !dbg !32
  %229 = load <2 x half>, ptr %73, align 4, !dbg !18
  %230 = fpext <2 x half> %229 to <2 x float>, !dbg !23
  %231 = fdiv <2 x float> %230, %222, !dbg !24
  %232 = load <2 x half>, ptr %49, align 4, !dbg !15
  %233 = fpext <2 x half> %232 to <2 x float>, !dbg !25
  %234 = fmul <2 x float> %231, %233, !dbg !26
  %235 = fadd <2 x float> %234, %227, !dbg !27
  %shift9 = shufflevector <2 x float> %234, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %236 = fadd <2 x float> %shift9, %235, !dbg !27
  %237 = fptrunc <2 x float> %231 to <2 x half>, !dbg !32
  %238 = load <2 x half>, ptr %74, align 8, !dbg !18
  %239 = fpext <2 x half> %238 to <2 x float>, !dbg !23
  %240 = fdiv <2 x float> %239, %222, !dbg !24
  %241 = load <2 x half>, ptr %50, align 8, !dbg !15
  %242 = fpext <2 x half> %241 to <2 x float>, !dbg !25
  %243 = fmul <2 x float> %240, %242, !dbg !26
  %244 = fadd <2 x float> %243, %236, !dbg !27
  %shift10 = shufflevector <2 x float> %243, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %245 = fadd <2 x float> %shift10, %244, !dbg !27
  %246 = fptrunc <2 x float> %240 to <2 x half>, !dbg !32
  %247 = load <2 x half>, ptr %75, align 4, !dbg !18
  %248 = fpext <2 x half> %247 to <2 x float>, !dbg !23
  %249 = fdiv <2 x float> %248, %222, !dbg !24
  %250 = load <2 x half>, ptr %51, align 4, !dbg !15
  %251 = fpext <2 x half> %250 to <2 x float>, !dbg !25
  %252 = fmul <2 x float> %249, %251, !dbg !26
  %253 = fadd <2 x float> %252, %245, !dbg !27
  %shift11 = shufflevector <2 x float> %252, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %254 = fadd <2 x float> %shift11, %253, !dbg !27
  %255 = extractelement <2 x float> %254, i64 0, !dbg !27
  %256 = bitcast float %255 to i32, !dbg !33
  %257 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %256, i32 4127), !dbg !33
  %258 = bitcast i32 %257 to float, !dbg !33
  %259 = fadd float %255, %258, !dbg !27
  %260 = bitcast float %259 to i32, !dbg !33
  %261 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %260, i32 2079), !dbg !33
  %262 = bitcast i32 %261 to float, !dbg !33
  %263 = fadd float %259, %262, !dbg !27
  %264 = bitcast float %263 to i32, !dbg !33
  %265 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %264, i32 1055), !dbg !33
  %266 = bitcast i32 %265 to float, !dbg !33
  %267 = fadd float %263, %266, !dbg !27
  %268 = fptrunc <2 x float> %249 to <2 x half>, !dbg !32
  %269 = load <2 x half>, ptr %76, align 16, !dbg !18
  %270 = fpext <2 x half> %269 to <2 x float>, !dbg !23
  %271 = insertelement <2 x float> poison, float %95, i64 0, !dbg !24
  %272 = shufflevector <2 x float> %271, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !24
  %273 = fdiv <2 x float> %270, %272, !dbg !24
  %274 = load <2 x half>, ptr %52, align 16, !dbg !15
  %275 = fpext <2 x half> %274 to <2 x float>, !dbg !25
  %276 = fmul <2 x float> %273, %275, !dbg !26
  %shift12 = shufflevector <2 x float> %276, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %277 = fadd <2 x float> %276, %shift12, !dbg !27
  %278 = fptrunc <2 x float> %273 to <2 x half>, !dbg !32
  %279 = load <2 x half>, ptr %77, align 4, !dbg !18
  %280 = fpext <2 x half> %279 to <2 x float>, !dbg !23
  %281 = fdiv <2 x float> %280, %272, !dbg !24
  %282 = load <2 x half>, ptr %53, align 4, !dbg !15
  %283 = fpext <2 x half> %282 to <2 x float>, !dbg !25
  %284 = fmul <2 x float> %281, %283, !dbg !26
  %285 = fadd <2 x float> %284, %277, !dbg !27
  %shift13 = shufflevector <2 x float> %284, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %286 = fadd <2 x float> %shift13, %285, !dbg !27
  %287 = fptrunc <2 x float> %281 to <2 x half>, !dbg !32
  %288 = load <2 x half>, ptr %78, align 8, !dbg !18
  %289 = fpext <2 x half> %288 to <2 x float>, !dbg !23
  %290 = fdiv <2 x float> %289, %272, !dbg !24
  %291 = load <2 x half>, ptr %54, align 8, !dbg !15
  %292 = fpext <2 x half> %291 to <2 x float>, !dbg !25
  %293 = fmul <2 x float> %290, %292, !dbg !26
  %294 = fadd <2 x float> %293, %286, !dbg !27
  %shift14 = shufflevector <2 x float> %293, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %295 = fadd <2 x float> %shift14, %294, !dbg !27
  %296 = fptrunc <2 x float> %290 to <2 x half>, !dbg !32
  %297 = load <2 x half>, ptr %79, align 4, !dbg !18
  %298 = fpext <2 x half> %297 to <2 x float>, !dbg !23
  %299 = fdiv <2 x float> %298, %272, !dbg !24
  %300 = load <2 x half>, ptr %55, align 4, !dbg !15
  %301 = fpext <2 x half> %300 to <2 x float>, !dbg !25
  %302 = fmul <2 x float> %299, %301, !dbg !26
  %303 = fadd <2 x float> %302, %295, !dbg !27
  %shift15 = shufflevector <2 x float> %302, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !27
  %304 = fadd <2 x float> %shift15, %303, !dbg !27
  %305 = extractelement <2 x float> %304, i64 0, !dbg !27
  %306 = bitcast float %305 to i32, !dbg !33
  %307 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %306, i32 4127), !dbg !33
  %308 = bitcast i32 %307 to float, !dbg !33
  %309 = fadd float %305, %308, !dbg !27
  %310 = bitcast float %309 to i32, !dbg !33
  %311 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %310, i32 2079), !dbg !33
  %312 = bitcast i32 %311 to float, !dbg !33
  %313 = fadd float %309, %312, !dbg !27
  %314 = bitcast float %313 to i32, !dbg !33
  %315 = tail call i32 @llvm.amdgcn.ds.swizzle(i32 %314, i32 1055), !dbg !33
  %316 = bitcast i32 %315 to float, !dbg !33
  %317 = fadd float %313, %316, !dbg !27
  %318 = fptrunc <2 x float> %299 to <2 x half>, !dbg !32
  store <2 x half> %128, ptr addrspace(1) %100, align 4, !dbg !32
  store <2 x half> %137, ptr addrspace(1) %102, align 4, !dbg !32
  store <2 x half> %146, ptr addrspace(1) %104, align 4, !dbg !32
  store <2 x half> %168, ptr addrspace(1) %106, align 4, !dbg !32
  store <2 x half> %178, ptr addrspace(1) %107, align 4, !dbg !32
  store <2 x half> %187, ptr addrspace(1) %108, align 4, !dbg !32
  store <2 x half> %196, ptr addrspace(1) %109, align 4, !dbg !32
  store <2 x half> %218, ptr addrspace(1) %110, align 4, !dbg !32
  store <2 x half> %228, ptr addrspace(1) %111, align 4, !dbg !32
  store <2 x half> %237, ptr addrspace(1) %112, align 4, !dbg !32
  store <2 x half> %246, ptr addrspace(1) %113, align 4, !dbg !32
  store <2 x half> %268, ptr addrspace(1) %114, align 4, !dbg !32
  store <2 x half> %278, ptr addrspace(1) %115, align 4, !dbg !32
  store <2 x half> %287, ptr addrspace(1) %116, align 4, !dbg !32
  store <2 x half> %296, ptr addrspace(1) %117, align 4, !dbg !32
  store <2 x half> %318, ptr addrspace(1) %118, align 4, !dbg !32
  %319 = zext nneg i32 %10 to i64, !dbg !34
  %320 = getelementptr float, ptr addrspace(3) @global_smem, i64 %319, !dbg !34
  %321 = insertelement <1 x float> poison, float %167, i64 0, !dbg !34
  store <1 x float> %321, ptr addrspace(3) %320, align 4, !dbg !34
  %322 = zext nneg i32 %11 to i64, !dbg !34
  %323 = getelementptr float, ptr addrspace(3) @global_smem, i64 %322, !dbg !34
  %324 = insertelement <1 x float> poison, float %217, i64 0, !dbg !34
  store <1 x float> %324, ptr addrspace(3) %323, align 4, !dbg !34
  %325 = zext nneg i32 %12 to i64, !dbg !34
  %326 = getelementptr float, ptr addrspace(3) @global_smem, i64 %325, !dbg !34
  %327 = insertelement <1 x float> poison, float %267, i64 0, !dbg !34
  store <1 x float> %327, ptr addrspace(3) %326, align 4, !dbg !34
  %328 = zext nneg i32 %13 to i64, !dbg !34
  %329 = getelementptr float, ptr addrspace(3) @global_smem, i64 %328, !dbg !34
  %330 = insertelement <1 x float> poison, float %317, i64 0, !dbg !34
  store <1 x float> %330, ptr addrspace(3) %329, align 4, !dbg !34
  fence syncscope("workgroup") release, !dbg !34
  tail call void @llvm.amdgcn.s.barrier(), !dbg !34
  fence syncscope("workgroup") acquire, !dbg !34
  %urem = and i32 %8, 128, !dbg !34
  %.not.not = icmp eq i32 %urem, 0, !dbg !34
  br i1 %.not.not, label %331, label %339, !dbg !34

331:                                              ; preds = %5
  %332 = and i32 %8, 127, !dbg !34
  %333 = zext nneg i32 %332 to i64, !dbg !34
  %334 = getelementptr float, ptr addrspace(3) @global_smem, i64 %333, !dbg !34
  %335 = load i32, ptr addrspace(3) %334, align 4, !dbg !34
  %336 = or disjoint i32 %7, %332, !dbg !10
  %337 = sext i32 %336 to i64, !dbg !35
  %338 = getelementptr float, ptr addrspace(1) %4, i64 %337, !dbg !35
  store i32 %335, ptr addrspace(1) %338, align 4, !dbg !34
  br label %339, !dbg !34

339:                                              ; preds = %331, %5
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.ds.swizzle(i32, i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #3

attributes #0 = { mustprogress nofree norecurse nounwind willreturn "amdgpu-flat-work-group-size"="1,256" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"amdhsa_code_object_version", i32 400}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "test_flashattention.py", directory: "/triton/python/test/unit/hopper")
!4 = distinct !DISubprogram(name: "_bwd_preprocess", linkageName: "_bwd_preprocess", scope: !3, file: !3, line: 138, type: !5, scopeLine: 138, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = !DILocation(line: 141, column: 26, scope: !4)
!8 = !DILocation(line: 141, column: 31, scope: !4)
!9 = !DILocation(line: 141, column: 54, scope: !4)
!10 = !DILocation(line: 141, column: 41, scope: !4)
!11 = !DILocation(line: 144, column: 39, scope: !4)
!12 = !DILocation(line: 144, column: 22, scope: !4)
!13 = !DILocation(line: 144, column: 54, scope: !4)
!14 = !DILocation(line: 144, column: 48, scope: !4)
!15 = !DILocation(line: 144, column: 16, scope: !4)
!16 = !DILocation(line: 145, column: 22, scope: !4)
!17 = !DILocation(line: 145, column: 48, scope: !4)
!18 = !DILocation(line: 145, column: 17, scope: !4)
!19 = !DILocation(line: 146, column: 24, scope: !4)
!20 = !DILocation(line: 146, column: 20, scope: !4)
!21 = !DILocation(line: 151, column: 21, scope: !4)
!22 = !DILocation(line: 151, column: 47, scope: !4)
!23 = !DILocation(line: 145, column: 67, scope: !4)
!24 = !DILocation(line: 148, column: 14, scope: !4)
!25 = !DILocation(line: 144, column: 67, scope: !4)
!26 = !DILocation(line: 149, column: 23, scope: !4)
!27 = !DILocation(line: 256, column: 15, scope: !28, inlinedAt: !31)
!28 = distinct !DILexicalBlockFile(scope: !30, file: !29, discriminator: 0)
!29 = !DIFile(filename: "standard.py", directory: "/triton/python/triton/language")
!30 = distinct !DILexicalBlockFile(scope: !4, file: !29, discriminator: 0)
!31 = !DILocation(line: 149, column: 19, scope: !4)
!32 = !DILocation(line: 151, column: 63, scope: !4)
!33 = !DILocation(line: 267, column: 36, scope: !30, inlinedAt: !31)
!34 = !DILocation(line: 152, column: 28, scope: !4)
!35 = !DILocation(line: 152, column: 21, scope: !4)
!36 = !DILocation(line: 152, column: 4, scope: !4)
