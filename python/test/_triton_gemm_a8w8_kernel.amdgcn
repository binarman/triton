	.text
	.amdgcn_target "amdgcn-amd-amdhsa--gfx942"
	.amdhsa_code_object_version 4
	.globl	_triton_gemm_a8w8_kernel
	.p2align	8
	.type	_triton_gemm_a8w8_kernel,@function
_triton_gemm_a8w8_kernel:
.Lfunc_begin0:
	.cfi_sections .debug_frame
	.cfi_startproc
	.file	1 "/workspace/projects/triton-openai/python/test" "test_a8w8_7.py"
	.loc	1 113 24 prologue_end
	s_load_dwordx4 s[12:15], s[0:1], 0x20
	s_load_dwordx2 s[16:17], s[0:1], 0x34
	.loc	1 117 22
	s_abs_i32 s19, s2
	.loc	1 128 40
	v_lshrrev_b32_e32 v17, 4, v0
	.loc	1 132 48
	v_lshlrev_b32_e32 v40, 4, v0
.Ltmp0:
	.file	2 "/opt/conda/envs/py_3.10/lib/python3.10/site-packages/triton/language" "standard.py"
	.loc	2 40 22
	s_waitcnt lgkmcnt(0)
	s_add_i32 s3, s14, 63
	.loc	2 40 28 is_stmt 0
	s_ashr_i32 s4, s3, 31
	s_lshr_b32 s4, s4, 26
	s_add_i32 s3, s3, s4
	s_ashr_i32 s18, s3, 6
.Ltmp1:
	.loc	1 117 22 is_stmt 1
	s_abs_i32 s4, s18
	v_cvt_f32_u32_e32 v1, s4
	s_sub_i32 s6, 0, s4
	s_ashr_i32 s3, s2, 31
	s_ashr_i32 s5, s18, 31
	v_rcp_iflag_f32_e32 v1, v1
	s_xor_b32 s5, s3, s5
	.loc	1 132 48
	v_and_b32_e32 v16, 0xf0, v40
	.loc	1 117 22
	v_mul_f32_e32 v1, 0x4f7ffffe, v1
	v_cvt_u32_f32_e32 v1, v1
	s_nop 0
	v_readfirstlane_b32 s7, v1
	s_mul_i32 s6, s6, s7
	s_mul_hi_u32 s6, s7, s6
	s_add_i32 s7, s7, s6
	s_mul_hi_u32 s6, s19, s7
	s_mul_i32 s7, s6, s4
	s_sub_i32 s7, s19, s7
	s_add_i32 s8, s6, 1
	s_sub_i32 s9, s7, s4
	s_cmp_ge_u32 s7, s4
	s_cselect_b32 s6, s8, s6
	s_cselect_b32 s7, s9, s7
	s_add_i32 s8, s6, 1
	s_cmp_ge_u32 s7, s4
	s_cselect_b32 s4, s8, s6
	s_xor_b32 s4, s4, s5
	s_sub_i32 s20, s4, s5
	.loc	1 119 35
	s_sub_i32 s4, 1, s20
	.loc	1 119 48 is_stmt 0
	s_min_i32 s22, s4, 1
	.loc	1 120 33 is_stmt 1
	s_abs_i32 s21, s22
	v_cvt_f32_u32_e32 v1, s21
	.loc	1 113 24
	s_load_dwordx8 s[4:11], s[0:1], 0x0
	.loc	1 121 19
	s_mul_i32 s0, s20, s18
	s_sub_i32 s0, s2, s0
	.loc	1 120 33
	v_rcp_iflag_f32_e32 v1, v1
	s_sub_i32 s2, 0, s21
	.loc	1 121 40
	s_xor_b32 s1, s0, s22
	s_abs_i32 s0, s0
	.loc	1 120 33
	v_mul_f32_e32 v1, 0x4f7ffffe, v1
	v_cvt_u32_f32_e32 v1, v1
	.loc	1 121 40
	s_ashr_i32 s1, s1, 31
	.loc	1 120 33
	v_readfirstlane_b32 s18, v1
	s_mul_i32 s2, s2, s18
	s_mul_hi_u32 s2, s18, s2
	s_add_i32 s2, s18, s2
	.loc	1 121 40
	s_mul_hi_u32 s18, s0, s2
	s_mul_i32 s22, s18, s21
	s_sub_i32 s0, s0, s22
	s_add_i32 s23, s18, 1
	s_sub_i32 s22, s0, s21
	s_cmp_ge_u32 s0, s21
	s_cselect_b32 s18, s23, s18
	s_cselect_b32 s0, s22, s0
	s_add_i32 s22, s18, 1
	s_cmp_ge_u32 s0, s21
	s_cselect_b32 s0, s22, s18
	.loc	1 130 48
	s_abs_i32 s22, s14
	v_cvt_f32_u32_e32 v1, s22
	.loc	1 121 40
	s_xor_b32 s0, s0, s1
	s_sub_i32 s0, s0, s1
	.loc	1 130 48
	s_sub_i32 s23, 0, s22
	v_rcp_iflag_f32_e32 v1, v1
	.loc	1 128 17
	s_lshl_b32 s18, s0, 6
	.loc	1 130 48
	s_bfe_i32 s0, s0, 0x10019
	.loc	1 128 27
	v_or_b32_e32 v2, s18, v17
	.loc	1 130 48
	v_mul_f32_e32 v1, 0x4f7ffffe, v1
	v_cvt_u32_f32_e32 v1, v1
	v_add_u32_e32 v2, s0, v2
	v_xor_b32_e32 v3, s0, v2
.Ltmp2:
	.loc	2 40 22
	s_addk_i32 s15, 0xff
.Ltmp3:
	.loc	1 130 48
	v_mul_lo_u32 v4, s23, v1
	v_mul_hi_u32 v4, v1, v4
	v_add_u32_e32 v1, v1, v4
	v_mul_hi_u32 v4, v3, v1
	v_mul_lo_u32 v4, v4, s22
	v_sub_u32_e32 v3, v3, v4
	v_subrev_u32_e32 v4, s22, v3
	v_cmp_le_u32_e32 vcc, s22, v3
	s_nop 1
	v_cndmask_b32_e32 v3, v3, v4, vcc
	v_subrev_u32_e32 v4, s22, v3
	v_cmp_le_u32_e32 vcc, s22, v3
	s_nop 1
	v_cndmask_b32_e32 v3, v3, v4, vcc
	v_add_u32_e32 v4, 16, v2
	v_xor_b32_e32 v4, s0, v4
	v_mul_hi_u32 v5, v4, v1
	v_mul_lo_u32 v5, v5, s22
	v_sub_u32_e32 v4, v4, v5
	v_subrev_u32_e32 v5, s22, v4
	v_cmp_le_u32_e32 vcc, s22, v4
	v_xor_b32_e32 v3, s0, v3
	v_subrev_u32_e32 v3, s0, v3
	v_cndmask_b32_e32 v4, v4, v5, vcc
	v_subrev_u32_e32 v5, s22, v4
	v_cmp_le_u32_e32 vcc, s22, v4
	s_nop 1
	v_cndmask_b32_e32 v4, v4, v5, vcc
	v_add_u32_e32 v5, 32, v2
	v_xor_b32_e32 v5, s0, v5
	v_mul_hi_u32 v6, v5, v1
	v_mul_lo_u32 v6, v6, s22
	v_add_u32_e32 v2, 48, v2
	v_sub_u32_e32 v5, v5, v6
	v_xor_b32_e32 v2, s0, v2
	v_subrev_u32_e32 v6, s22, v5
	v_cmp_le_u32_e32 vcc, s22, v5
	v_mul_hi_u32 v1, v2, v1
	v_mul_lo_u32 v1, v1, s22
	v_cndmask_b32_e32 v5, v5, v6, vcc
	v_subrev_u32_e32 v6, s22, v5
	v_cmp_le_u32_e32 vcc, s22, v5
	v_sub_u32_e32 v1, v2, v1
	v_subrev_u32_e32 v2, s22, v1
	v_cndmask_b32_e32 v5, v5, v6, vcc
	v_cmp_le_u32_e32 vcc, s22, v1
	v_xor_b32_e32 v4, s0, v4
	v_xor_b32_e32 v5, s0, v5
	v_cndmask_b32_e32 v1, v1, v2, vcc
	v_subrev_u32_e32 v2, s22, v1
	v_cmp_le_u32_e32 vcc, s22, v1
	v_subrev_u32_e32 v4, s0, v4
	v_subrev_u32_e32 v5, s0, v5
	v_cndmask_b32_e32 v1, v1, v2, vcc
	v_xor_b32_e32 v1, s0, v1
	v_subrev_u32_e32 v1, s0, v1
	.loc	1 133 45
	v_mad_u64_u32 v[18:19], s[0:1], v3, s16, v[16:17]
	v_mad_u64_u32 v[20:21], s[0:1], v4, s16, v[16:17]
	v_mad_u64_u32 v[24:25], s[0:1], v5, s16, v[16:17]
	v_mad_u64_u32 v[22:23], s[0:1], v1, s16, v[16:17]
	.loc	1 133 18 is_stmt 0
	v_ashrrev_i32_e32 v19, 31, v18
	v_ashrrev_i32_e32 v21, 31, v20
	v_ashrrev_i32_e32 v25, 31, v24
	v_ashrrev_i32_e32 v23, 31, v22
	s_waitcnt lgkmcnt(0)
	v_lshl_add_u64 v[2:3], s[6:7], 0, v[18:19]
	v_lshl_add_u64 v[8:9], s[6:7], 0, v[20:21]
	v_lshl_add_u64 v[10:11], s[6:7], 0, v[24:25]
	v_lshl_add_u64 v[26:27], s[6:7], 0, v[22:23]
	.loc	1 146 20 is_stmt 1
	global_load_dwordx4 v[4:7], v16, s[4:5]
	.loc	1 147 20
	global_load_dwordx4 v[12:15], v[2:3], off
	global_load_dwordx4 v[28:31], v[8:9], off
	global_load_dwordx4 v[32:35], v[10:11], off
	global_load_dwordx4 v[36:39], v[26:27], off
	s_movk_i32 s0, 0xf0
	.loc	1 128 40
	v_and_b32_e32 v3, 15, v0
	.loc	1 146 20
	v_xor_b32_e32 v2, v40, v0
	v_lshlrev_b32_e32 v9, 8, v17
	v_and_b32_e32 v1, 48, v0
	v_bfe_u32 v8, v0, 4, 2
	v_lshlrev_b32_e32 v10, 4, v3
	v_and_or_b32 v2, v2, s0, v9
	.loc	1 147 20
	s_add_i32 s0, 0, 0x1000
	v_or_b32_e32 v17, 4, v8
	v_xor_b32_e32 v27, v10, v1
	.loc	1 146 20
	v_add_u32_e32 v1, 0, v2
	.loc	1 147 20
	v_add_u32_e32 v2, s0, v2
	v_lshlrev_b32_e32 v26, 8, v3
	.loc	1 128 40
	v_lshrrev_b32_e32 v11, 6, v0
	.loc	1 143 22
	s_cmpk_gt_i32 s15, 0x1ff
	.loc	1 146 20
	s_waitcnt vmcnt(4)
	ds_write_b128 v1, v[4:7]
	.loc	1 147 20
	s_waitcnt vmcnt(3)
	ds_write_b128 v1, v[12:15] offset:4096
	s_waitcnt vmcnt(2)
	ds_write_b128 v2, v[28:31] offset:4096
	s_waitcnt vmcnt(1)
	ds_write_b128 v2, v[32:35] offset:8192
	s_waitcnt vmcnt(0)
	ds_write_b128 v2, v[36:39] offset:12288
	v_xor_b32_e32 v2, v17, v3
	v_lshlrev_b32_e32 v28, 4, v2
	v_or_b32_e32 v2, 8, v8
	v_or_b32_e32 v4, 12, v8
	v_xor_b32_e32 v2, v2, v3
	v_xor_b32_e32 v4, v4, v3
	v_lshlrev_b32_e32 v29, 4, v2
	v_lshlrev_b32_e32 v30, 4, v4
	v_or_b32_e32 v10, v28, v26
	v_or_b32_e32 v2, v29, v26
	v_or_b32_e32 v4, v30, v26
	.loc	1 143 22
	s_cbranch_scc1 .LBB0_2
	.loc	1 147 20
	v_lshl_or_b32 v5, v11, 12, v26
	.loc	1 146 20
	s_mov_b32 s16, 0
	.loc	1 147 20
	v_or_b32_e32 v12, v5, v27
	v_or_b32_e32 v14, v28, v5
	v_or_b32_e32 v8, v29, v5
	v_or_b32_e32 v6, v30, v5
	s_mov_b64 s[0:1], 0
	s_branch .LBB0_3
.LBB0_2:
	.loc	1 0 20 is_stmt 0
	s_mov_b64 s[0:1], -1
.LBB0_3:
	s_mul_hi_u32 s2, s19, s2
	v_or_b32_e32 v5, v27, v26
	.loc	1 143 22 is_stmt 1
	s_andn2_b64 vcc, exec, s[0:1]
	v_accvgpr_write_b32 a0, s16
	v_accvgpr_write_b32 a1, s16
	v_accvgpr_write_b32 a2, s16
	v_accvgpr_write_b32 a3, s16
	s_cbranch_vccnz .LBB0_6
.Ltmp4:
	.loc	2 40 28
	s_ashr_i32 s0, s15, 31
	s_lshr_b32 s0, s0, 24
	v_mov_b32_e32 v17, 0
	s_add_i32 s15, s15, s0
	v_lshl_or_b32 v6, v11, 12, v26
	s_ashr_i32 s15, s15, 8
	v_or_b32_e32 v12, v6, v27
.Ltmp5:
	.loc	1 143 22
	v_lshl_add_u64 v[22:23], v[22:23], 0, s[6:7]
	s_mov_b64 s[0:1], 0x100
	v_lshl_add_u64 v[24:25], v[24:25], 0, s[6:7]
	v_lshl_add_u64 v[20:21], v[20:21], 0, s[6:7]
	v_lshl_add_u64 v[18:19], v[18:19], 0, s[6:7]
	v_lshl_add_u64 v[16:17], v[16:17], 0, s[4:5]
	s_add_i32 s15, s15, -1
	s_mov_b32 s16, 0
	v_accvgpr_write_b32 a3, 0
	v_accvgpr_write_b32 a2, 0
	v_accvgpr_write_b32 a1, 0
	v_accvgpr_write_b32 a0, 0
	v_or_b32_e32 v14, v28, v6
	v_or_b32_e32 v8, v29, v6
	v_or_b32_e32 v6, v30, v6
	v_lshl_add_u64 v[22:23], v[22:23], 0, s[0:1]
	v_lshl_add_u64 v[24:25], v[24:25], 0, s[0:1]
	v_lshl_add_u64 v[20:21], v[20:21], 0, s[0:1]
	v_lshl_add_u64 v[18:19], v[18:19], 0, s[0:1]
	v_lshl_add_u64 v[16:17], v[16:17], 0, s[0:1]
	v_add_u32_e32 v7, 0, v12
.LBB0_5:
	.loc	1 146 20
	global_load_dwordx4 v[26:29], v[16:17], off
	.loc	1 147 20
	global_load_dwordx4 v[30:33], v[18:19], off
	global_load_dwordx4 v[34:37], v[20:21], off
	global_load_dwordx4 v[38:41], v[24:25], off
	global_load_dwordx4 v[42:45], v[22:23], off
	.loc	1 146 20
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 149 33
	v_add_u32_e32 v11, 0, v5
	.loc	1 147 20
	ds_read_b128 v[46:49], v7 offset:4096
	.loc	1 149 33
	ds_read_b128 v[50:53], v11
	s_waitcnt lgkmcnt(0)
	v_mfma_i32_16x16x32_i8 a[0:3], v[50:51], v[46:47], a[0:3]
	.loc	1 147 20
	v_add_u32_e32 v9, 0, v14
	.loc	1 149 33
	v_add_u32_e32 v11, 0, v10
	.loc	1 147 20
	ds_read_b128 v[54:57], v9 offset:4096
	.loc	1 149 33
	ds_read_b128 v[58:61], v11
	v_mfma_i32_16x16x32_i8 a[0:3], v[52:53], v[48:49], a[0:3]
	v_add_u32_e32 v13, 0, v2
	ds_read_b128 v[46:49], v13
	.loc	1 147 20
	v_add_u32_e32 v9, 0, v8
	.loc	1 149 33
	s_waitcnt lgkmcnt(1)
	v_mfma_i32_16x16x32_i8 a[0:3], v[58:59], v[54:55], a[0:3]
	.loc	1 147 20
	v_add_u32_e32 v11, 0, v6
	.loc	1 149 33
	v_add_u32_e32 v15, 0, v4
	.loc	1 143 22
	s_add_i32 s16, s16, 1
	.loc	1 149 33
	v_mfma_i32_16x16x32_i8 a[0:3], v[60:61], v[56:57], a[0:3]
	.loc	1 147 20
	ds_read_b128 v[50:53], v9 offset:4096
	ds_read_b128 v[54:57], v11 offset:4096
	.loc	1 149 33
	ds_read_b128 v[58:61], v15
	.loc	1 143 22
	v_lshl_add_u64 v[22:23], v[22:23], 0, s[0:1]
	v_lshl_add_u64 v[24:25], v[24:25], 0, s[0:1]
	.loc	1 149 33
	s_waitcnt lgkmcnt(2)
	v_mfma_i32_16x16x32_i8 a[0:3], v[46:47], v[50:51], a[0:3]
	.loc	1 143 22
	v_lshl_add_u64 v[20:21], v[20:21], 0, s[0:1]
	v_lshl_add_u64 v[18:19], v[18:19], 0, s[0:1]
	v_lshl_add_u64 v[16:17], v[16:17], 0, s[0:1]
	.loc	1 149 33
	v_mfma_i32_16x16x32_i8 a[0:3], v[48:49], v[52:53], a[0:3]
	.loc	1 143 22
	s_cmp_lt_i32 s16, s15
	.loc	1 146 20
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 149 33
	v_mfma_i32_16x16x32_i8 a[0:3], v[58:59], v[54:55], a[0:3]
	.loc	1 146 20
	s_waitcnt vmcnt(4)
	ds_write_b128 v1, v[26:29]
	.loc	1 147 20
	s_waitcnt vmcnt(3)
	ds_write_b128 v1, v[30:33] offset:4096
	s_waitcnt vmcnt(2)
	ds_write_b128 v1, v[34:37] offset:8192
	s_waitcnt vmcnt(1)
	ds_write_b128 v1, v[38:41] offset:12288
	s_waitcnt vmcnt(0)
	ds_write_b128 v1, v[42:45] offset:16384
	.loc	1 149 33
	v_mfma_i32_16x16x32_i8 a[0:3], v[60:61], v[56:57], a[0:3]
	.loc	1 143 22
	s_cbranch_scc1 .LBB0_5
.LBB0_6:
	.loc	1 146 20
	v_add_u32_e32 v1, 0, v5
	s_waitcnt lgkmcnt(0)
	s_barrier
	.loc	1 149 33
	ds_read_b128 v[16:19], v1
	.loc	1 147 20
	v_add_u32_e32 v1, 0, v12
	ds_read_b128 v[20:23], v1 offset:4096
	.loc	1 146 20
	v_add_u32_e32 v1, 0, v10
	.loc	1 147 20
	v_add_u32_e32 v5, 0, v14
	ds_read_b128 v[10:13], v5 offset:4096
	.loc	1 149 33
	s_waitcnt lgkmcnt(1)
	v_mfma_i32_16x16x32_i8 a[0:3], v[16:17], v[20:21], a[0:3]
	.loc	1 146 20
	ds_read_b128 v[14:17], v1
	v_add_u32_e32 v1, 0, v2
	.loc	1 147 20
	v_add_u32_e32 v2, 0, v8
	.loc	1 149 33
	v_mfma_i32_16x16x32_i8 a[0:3], v[18:19], v[22:23], a[0:3]
	.loc	1 146 20
	ds_read_b128 v[18:21], v1
	.loc	1 120 33
	s_mul_i32 s2, s2, s21
	s_sub_i32 s0, s19, s2
	.loc	1 149 33
	s_waitcnt lgkmcnt(1)
	v_mfma_i32_16x16x32_i8 a[0:3], v[14:15], v[10:11], a[0:3]
	.loc	1 147 20
	ds_read_b128 v[8:11], v2 offset:4096
	.loc	1 146 20
	v_add_u32_e32 v1, 0, v4
	.loc	1 120 33
	s_sub_i32 s1, s0, s21
	.loc	1 149 33
	v_mfma_i32_16x16x32_i8 a[0:3], v[16:17], v[12:13], a[0:3]
	.loc	1 146 20
	ds_read_b128 v[12:15], v1
	.loc	1 147 20
	v_add_u32_e32 v1, 0, v6
	.loc	1 149 33
	ds_read_b128 v[22:25], v1 offset:4096
	s_waitcnt lgkmcnt(2)
	v_mfma_i32_16x16x32_i8 a[0:3], v[18:19], v[8:9], a[0:3]
	.loc	1 120 33
	s_cmp_ge_u32 s0, s21
	s_cselect_b32 s0, s1, s0
	s_sub_i32 s1, s0, s21
	.loc	1 149 33
	v_mfma_i32_16x16x32_i8 a[0:3], v[20:21], v[10:11], a[0:3]
	.loc	1 120 33
	s_cmp_ge_u32 s0, s21
	s_cselect_b32 s0, s1, s0
	s_xor_b32 s0, s0, s3
	.loc	1 149 33
	s_waitcnt lgkmcnt(0)
	v_mfma_i32_16x16x32_i8 a[0:3], v[12:13], v[22:23], a[0:3]
	.loc	1 120 33
	s_sub_i32 s0, s0, s3
	.loc	1 128 40
	v_lshrrev_b32_e32 v6, 2, v0
	.loc	1 120 27
	s_add_i32 s0, s0, s20
	.loc	1 149 33
	v_mfma_i32_16x16x32_i8 a[0:3], v[14:15], v[24:25], a[0:3]
	.loc	1 168 45
	v_and_b32_e32 v0, 12, v6
	.loc	1 168 32 is_stmt 0
	v_lshl_or_b32 v4, s0, 4, v0
	.loc	1 172 55 is_stmt 1
	v_cmp_gt_i32_e64 s[0:1], 1, v4
	v_cmp_gt_i32_e32 vcc, 0, v4
	v_mov_b32_e32 v5, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v2, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v9, 0
	.loc	1 172 24 is_stmt 0
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_cbranch_execz .LBB0_10
	.loc	1 113 24 is_stmt 1
	v_mov_b32_e32 v0, s10
	v_mov_b32_e32 v1, s11
	.loc	1 170 37
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshl_add_u64 v[0:1], v[4:5], 1, v[0:1]
	.loc	1 172 24
	global_load_ushort v10, v[0:1], off
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v8, 0
	v_mov_b32_e32 v5, 0
	s_and_saveexec_b64 s[4:5], vcc
	s_cbranch_execz .LBB0_9
	global_load_dword v5, v[0:1], off offset:2
	global_load_ushort v9, v[0:1], off offset:6
	.loc	1 172 93 is_stmt 0
	s_waitcnt vmcnt(1)
	v_cvt_f32_f16_e32 v8, v5
	v_cvt_f32_f16_sdwa v5, v5 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
.LBB0_9:
	.loc	1 0 93
	s_or_b64 exec, exec, s[4:5]
.LBB0_10:
	s_or_b64 exec, exec, s[2:3]
	.loc	1 128 40 is_stmt 1
	v_and_b32_e32 v0, 48, v6
	.loc	1 128 27 is_stmt 0
	v_or3_b32 v6, v0, v3, s18
	.loc	1 171 37 is_stmt 1
	v_ashrrev_i32_e32 v7, 31, v6
	.loc	1 173 55
	v_cmp_gt_i32_e64 s[2:3], s14, v6
	.loc	1 173 24 is_stmt 0
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_cbranch_execz .LBB0_12
	.loc	1 113 24 is_stmt 1
	v_mov_b32_e32 v0, s12
	v_mov_b32_e32 v1, s13
	.loc	1 171 37
	v_lshl_add_u64 v[0:1], v[6:7], 1, v[0:1]
	.loc	1 173 24
	global_load_ushort v2, v[0:1], off nt
.LBB0_12:
	.loc	1 0 24 is_stmt 0
	s_or_b64 exec, exec, s[4:5]
	.loc	1 173 93
	s_waitcnt vmcnt(0)
	v_cvt_f32_f16_e32 v11, v2
	v_accvgpr_read_b32 v0, a0
	v_accvgpr_read_b32 v1, a1
	v_accvgpr_read_b32 v2, a2
	v_accvgpr_read_b32 v3, a3
	.loc	1 179 39 is_stmt 1
	s_and_b64 s[4:5], s[0:1], s[2:3]
	.loc	1 181 21
	s_and_saveexec_b64 s[0:1], s[4:5]
	s_cbranch_execnz .LBB0_15
	.loc	1 0 21 is_stmt 0
	s_or_b64 exec, exec, s[0:1]
	.loc	1 179 39 is_stmt 1
	s_and_b64 s[0:1], vcc, s[2:3]
	.loc	1 181 21
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_cbranch_execnz .LBB0_16
.LBB0_14:
	.loc	1 181 4 is_stmt 0
	s_endpgm
.LBB0_15:
	.loc	1 172 93 is_stmt 1
	v_cvt_f32_f16_e32 v10, v10
	.loc	1 174 32
	v_cvt_f32_i32_e32 v0, v0
	.loc	1 180 29
	v_mul_lo_u32 v12, v4, s17
	.loc	1 180 17 is_stmt 0
	v_ashrrev_i32_e32 v13, 31, v12
	v_lshl_add_u64 v[12:13], v[12:13], 1, s[8:9]
	.loc	1 174 32 is_stmt 1
	v_mul_f32_e32 v0, v0, v10
	.loc	1 176 23
	v_fma_mixlo_f16 v0, v0, v11, 0
	.loc	1 180 48
	v_lshl_add_u64 v[12:13], v[6:7], 1, v[12:13]
	.loc	1 181 21
	global_store_short v[12:13], v0, off
	s_or_b64 exec, exec, s[0:1]
	.loc	1 179 39
	s_and_b64 s[0:1], vcc, s[2:3]
	.loc	1 181 21
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_cbranch_execz .LBB0_14
.LBB0_16:
	.loc	1 172 93
	v_cvt_f32_f16_e32 v0, v9
	.loc	1 174 32
	v_cvt_f32_i32_e32 v3, v3
	v_cvt_f32_i32_e32 v2, v2
	v_cvt_f32_i32_e32 v1, v1
	.loc	1 168 32
	v_or_b32_e32 v4, 1, v4
	.loc	1 174 32
	v_mul_f32_e32 v0, v3, v0
	v_mul_f32_e32 v2, v5, v2
	.loc	1 176 23
	v_fma_mixlo_f16 v10, v0, v11, 0
	.loc	1 180 29
	v_mul_lo_u32 v0, v4, s17
	.loc	1 174 32
	v_mul_f32_e32 v1, v8, v1
	.loc	1 176 23
	v_fma_mixlo_f16 v9, v2, v11, 0
	.loc	1 180 29
	v_add_u32_e32 v2, s17, v0
	.loc	1 176 23
	v_fma_mixlo_f16 v8, v1, v11, 0
	.loc	1 180 29
	v_add_u32_e32 v4, s17, v2
	.loc	1 180 17 is_stmt 0
	v_ashrrev_i32_e32 v1, 31, v0
	v_lshl_add_u64 v[0:1], v[0:1], 1, s[8:9]
	v_ashrrev_i32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v5, 31, v4
	.loc	1 180 48
	v_lshlrev_b64 v[6:7], 1, v[6:7]
	.loc	1 180 17
	v_lshl_add_u64 v[2:3], v[2:3], 1, s[8:9]
	v_lshl_add_u64 v[4:5], v[4:5], 1, s[8:9]
	.loc	1 180 48
	v_lshl_add_u64 v[0:1], v[0:1], 0, v[6:7]
	v_lshl_add_u64 v[2:3], v[2:3], 0, v[6:7]
	v_lshl_add_u64 v[4:5], v[4:5], 0, v[6:7]
	.loc	1 181 21 is_stmt 1
	global_store_short v[0:1], v8, off
	global_store_short v[2:3], v9, off
	global_store_short v[4:5], v10, off
	.loc	1 181 4 is_stmt 0
	s_endpgm
.Ltmp6:
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel _triton_gemm_a8w8_kernel
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 60
		.amdhsa_user_sgpr_count 2
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_kernarg_preload_length 0
		.amdhsa_user_sgpr_kernarg_preload_offset 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_enable_private_segment 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 68
		.amdhsa_next_free_sgpr 24
		.amdhsa_accum_offset 64
		.amdhsa_reserve_vcc 1
		.amdhsa_reserve_xnack_mask 1
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_tg_split 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end0:
	.size	_triton_gemm_a8w8_kernel, .Lfunc_end0-_triton_gemm_a8w8_kernel
	.cfi_endproc

	.p2alignl 6, 3212836864
	.fill 256, 4, 3212836864
	.section	.debug_abbrev,"",@progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	0
	.byte	0
	.byte	2
	.byte	46
	.byte	0
	.byte	3
	.byte	14
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	3
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	4
	.byte	29
	.byte	0
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	5
	.byte	29
	.byte	0
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0
.Ldebug_info_start0:
	.short	4
	.long	.debug_abbrev
	.byte	8
	.byte	1
	.long	.Linfo_string0
	.short	2
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.byte	2
	.long	.Linfo_string3
	.byte	1
	.byte	3
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.long	42
	.byte	4
	.long	42
	.quad	.Ltmp0
	.long	.Ltmp1-.Ltmp0
	.byte	1
	.byte	115
	.byte	27
	.byte	5
	.long	42
	.long	.Ldebug_ranges0
	.byte	1
	.byte	139
	.byte	24
	.byte	0
	.byte	0
.Ldebug_info_end0:
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp2-.Lfunc_begin0
	.quad	.Ltmp3-.Lfunc_begin0
	.quad	.Ltmp4-.Lfunc_begin0
	.quad	.Ltmp5-.Lfunc_begin0
	.quad	0
	.quad	0
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"triton"
.Linfo_string1:
	.asciz	"test_a8w8_7.py"
.Linfo_string2:
	.asciz	"/workspace/projects/triton-openai/python/test"
.Linfo_string3:
	.asciz	"_triton_gemm_a8w8_kernel"
	.section	".note.GNU-stack","",@progbits
	.amdgpu_metadata
---
amdhsa.kernels:
  - .agpr_count:     4
    .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
      - .offset:         40
        .size:           4
        .value_kind:     by_value
      - .offset:         44
        .size:           4
        .value_kind:     by_value
      - .offset:         48
        .size:           4
        .value_kind:     by_value
      - .offset:         52
        .size:           4
        .value_kind:     by_value
      - .offset:         56
        .size:           4
        .value_kind:     by_value
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 60
    .max_flat_workgroup_size: 256
    .name:           _triton_gemm_a8w8_kernel
    .private_segment_fixed_size: 0
    .sgpr_count:     30
    .sgpr_spill_count: 0
    .symbol:         _triton_gemm_a8w8_kernel.kd
    .vgpr_count:     68
    .vgpr_spill_count: 0
    .wavefront_size: 64
amdhsa.target:   amdgcn-amd-amdhsa--gfx942
amdhsa.version:
  - 1
  - 1
...

	.end_amdgpu_metadata
	.section	.debug_line,"",@progbits
.Lline_table_start0:
